<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.devspringsoftware.com"
	xmlns:ssqml="http://www.devspringsoftware.com"
	elementFormDefault="qualified">
<xsd:annotation>
    <xsd:documentation xml:lang="en">
    
     SSQML: Standard Structured Query Markup Language
     This is an XML dialect that allows any valid SQL statement, clause, expression, predicate, or query to be expressed fully in XML based on an XML compliant schema. 
     The schema is based on Backus Normal Form (BNF) representations of ANSI-ISO/IEC SQL Standards:
     	1. Final Committee Draft of ISO/IEC 9075 :2003
     	2. Final Committee Draft of ISO/IEC 9075 :2006
     	3. Final Committee Draft of ISO/IEC 9075 :2008
     	4. Final Committee Draft of ISO/IEC 9075-14 :2013 XML-Related Specifications (SQL/XML)
     	But does not include support for:
     		a. Embedded SQL Ada programs
		b. Embedded SQL C programs
		c. Embedded SQL COBOL programs
		d. Embedded SQL Fortran programs
		e. Embedded SQL MUMPS programs
		f. Embedded SQL Pascal programs
		g. Embedded SQL PL/I programs
		These may be added in future. 
     	
     This scheam was generated by automation taking the SQL BNFs as input. It was then run through schema validators and manually modified further to result in a valid schema.
     
     The scheam was designed such that if an instance document has its tags removed and the order of the content preserved, a valid SQL statment or fragment will be left. 
     In a few cases, elements may be repeated with the name having a incremented counter integer appended. This was neccessary to preserve the intent of the underlying SQL. 
     Wherever this repetition was avoidable, it was avoided without using integer suffixes. 
     
     The "StaticString" elements represent SQL reserved and protected literal phrases. 
     
     The Group elements were generated where complexTypes contain choices that were themselves sequences. The naming convention for these groups is ParentComplexTypeName_ISO9075ChoiceGroup#
     
     Author: Donald L. Tiffany Jr. donald.tiffany@devspringsoftware.com
     
     Copyright 2013 Devspring Software Inc. All rights reserved.
     
     
     
    </xsd:documentation>
</xsd:annotation>


<xsd:simpleType name="UnsignedIntegerPeriodUnsignedIntegerType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[1-9]+[0-9]*([\.][1-9]+[0-9]*)*"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnsignedIntegerPeriodUnsignedInteger" type="ssqml:UnsignedIntegerPeriodUnsignedIntegerType"/>

<xsd:simpleType name="PeriodUnsignedIntegerType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\.][1-9]+[0-9]*"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PeriodUnsignedInteger" type="ssqml:PeriodUnsignedIntegerType"/>

<xsd:simpleType name="HexitHexitType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[0-9A-Fa-f][0-9A-Fa-f]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="HexitHexit" type="ssqml:HexitHexitType"/>

<xsd:simpleType name="DigitMultiplierType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[0-9]+[K|M|G]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DigitMultiplier" type="ssqml:DigitMultiplierType"/>

<xsd:simpleType name="MinusSignMinusSignMinusSignType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="--[\-]+"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MinusSignMinusSignMinusSign" type="ssqml:MinusSignMinusSignMinusSignType"/>

<xsd:simpleType name="UnicodeEscapeCharacterHexitHexitHexitHexitType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="\u[0-9A-Fa-f]{4}"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnicodeEscapeCharacterHexitHexitHexitHexit" type="ssqml:UnicodeEscapeCharacterHexitHexitHexitHexitType"/>

<xsd:simpleType name="UnicodeEscapeCharacterPlusSignHexitHexitHexitHexitHexitHexitType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="\u\+[0-9A-Fa-f]{6}"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnicodeEscapeCharacterPlusSignHexitHexitHexitHexitHexitHexit" type="ssqml:UnicodeEscapeCharacterPlusSignHexitHexitHexitHexitHexitHexitType"/>

<xsd:simpleType name="UnicodeEscapeCharacterUnicodeEscapeCharacterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\u]{2}"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnicodeEscapeCharacterUnicodeEscapeCharacter" type="ssqml:UnicodeEscapeCharacterUnicodeEscapeCharacterType"/>

<xsd:simpleType name="SqlTerminalCharacterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[A-Za-z0-9 &quot;\%&amp;\'\(\)\*\+\,\-\.\^\:\;&lt;\=&gt;\?\[\]\/\_\|\{\}]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SqlTerminalCharacter" type="ssqml:SqlTerminalCharacterType"/>

<xsd:simpleType name="SqlLanguageCharacterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[A-Za-z0-9 &quot;\%&amp;\'\(\)\*\+\,\-\.\^\:\;&lt;\=&gt;\?\[\]\/\_\|\{\}]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SqlLanguageCharacter" type="ssqml:SqlLanguageCharacterType"/>

<xsd:simpleType name="SimpleLatinLetterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[A-Za-z]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SimpleLatinLetter" type="ssqml:SimpleLatinLetterType"/>

<xsd:simpleType name="SimpleLatinUpperCaseLetterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[A-Z]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SimpleLatinUpperCaseLetter" type="ssqml:SimpleLatinUpperCaseLetterType"/>

<xsd:simpleType name="SimpleLatinLowerCaseLetterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[a-z]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SimpleLatinLowerCaseLetter" type="ssqml:SimpleLatinLowerCaseLetterType"/>

<xsd:simpleType name="DigitType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[0-9]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Digit" type="ssqml:DigitType"/>

<xsd:simpleType name="BitStringLiteralType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[01]+"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BitStringLiteral" type="ssqml:BitStringLiteralType"/>

<xsd:simpleType name="HexStringLiteralType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[0-9A-Fa-f]+"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="HexStringLiteral" type="ssqml:HexStringLiteralType"/>

<xsd:simpleType name="UnsignedIntegerType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[1-9][0-9]+"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnsignedInteger" type="ssqml:UnsignedIntegerType"/>

<xsd:simpleType name="SqlSpecialCharacterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[ &quot;\%&amp;\'\(\)\*\+\,\-\.\^\:\;&lt;\=&gt;\?\[\]\/\_\|\{\}]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SqlSpecialCharacter" type="ssqml:SqlSpecialCharacterType"/>

<xsd:simpleType name="SpaceType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[ ]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Space" type="ssqml:SpaceType"/>

<xsd:simpleType name="DoubleQuoteType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[&quot;]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DoubleQuote" type="ssqml:DoubleQuoteType"/>

<xsd:simpleType name="PercentType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\%]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Percent" type="ssqml:PercentType"/>

<xsd:simpleType name="AmpersandType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[&amp;]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Ampersand" type="ssqml:AmpersandType"/>

<xsd:simpleType name="QuoteType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\']"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Quote" type="ssqml:QuoteType"/>

<xsd:simpleType name="LeftParenType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\(]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LeftParen" type="ssqml:LeftParenType"/>

<xsd:simpleType name="RightParenType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\)]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RightParen" type="ssqml:RightParenType"/>

<xsd:simpleType name="AsteriskType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\*]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Asterisk" type="ssqml:AsteriskType"/>

<xsd:simpleType name="PlusSignType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\+]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PlusSign" type="ssqml:PlusSignType"/>

<xsd:simpleType name="CommaType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\,]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Comma" type="ssqml:CommaType"/>

<xsd:element name="Comma2" type="ssqml:CommaType"/>


<xsd:simpleType name="MinusSignType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\-]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MinusSign" type="ssqml:MinusSignType"/>

<xsd:simpleType name="PeriodType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\.]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Period" type="ssqml:PeriodType"/>

<xsd:simpleType name="SolidusType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\/]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Solidus" type="ssqml:SolidusType"/>

<xsd:simpleType name="SlashType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\\]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Slash" type="ssqml:SlashType"/>

<xsd:simpleType name="ColonType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\:]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Colon" type="ssqml:ColonType"/>
<xsd:element name="Colon2" type="ssqml:ColonType"/>
<xsd:element name="Colon3" type="ssqml:ColonType"/>

<xsd:simpleType name="SemicolonType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\;]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Semicolon" type="ssqml:SemicolonType"/>

<xsd:simpleType name="LessThanOperatorType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[&lt;]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LessThanOperator" type="ssqml:LessThanOperatorType"/>

<xsd:simpleType name="EqualsOperatorType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\=]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EqualsOperator" type="ssqml:EqualsOperatorType"/>

<xsd:simpleType name="GreaterThanOperatorType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[&gt;]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GreaterThanOperator" type="ssqml:GreaterThanOperatorType"/>

<xsd:simpleType name="QuestionMarkType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\?]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="QuestionMark" type="ssqml:QuestionMarkType"/>

<xsd:simpleType name="LeftBracketOrTrigraphType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\[][\?][\?][\[][\(]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LeftBracketOrTrigraph" type="ssqml:LeftBracketOrTrigraphType"/>

<xsd:simpleType name="RightBracketOrTrigraphType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\]][\?][\?][\)]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RightBracketOrTrigraph" type="ssqml:RightBracketOrTrigraphType"/>

<xsd:simpleType name="LeftBracketType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\[]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LeftBracket" type="ssqml:LeftBracketType"/>
<xsd:element name="LeftBracket2" type="ssqml:LeftBracketType"/>
<xsd:element name="LeftBracket3" type="ssqml:LeftBracketType"/>

<xsd:simpleType name="LeftBracketTrigraphType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\?][\?][\(]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LeftBracketTrigraph" type="ssqml:LeftBracketTrigraphType"/>

<xsd:simpleType name="RightBracketType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\]]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RightBracket" type="ssqml:RightBracketType"/>
<xsd:element name="RightBracket2" type="ssqml:RightBracketType"/>
<xsd:element name="RightBracket3" type="ssqml:RightBracketType"/>

<xsd:simpleType name="RightBracketTrigraphType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\?][\?][\)]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RightBracketTrigraph" type="ssqml:RightBracketTrigraphType"/>

<xsd:simpleType name="CircumflexType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\^]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Circumflex" type="ssqml:CircumflexType"/>

<xsd:simpleType name="UnderscoreType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\_]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Underscore" type="ssqml:UnderscoreType"/>

<xsd:simpleType name="VerticalBarType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\|]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="VerticalBar" type="ssqml:VerticalBarType"/>

<xsd:simpleType name="LeftBraceType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\{]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LeftBrace" type="ssqml:LeftBraceType"/>

<xsd:simpleType name="RightBraceType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\}]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RightBrace" type="ssqml:RightBraceType"/>

<xsd:simpleType name="WhiteSpaceType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\s]+"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WhiteSpace" type="ssqml:WhiteSpaceType"/>

<xsd:simpleType name="MultiplierType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[KMG]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Multiplier" type="ssqml:MultiplierType"/>

<xsd:simpleType name="NewlineType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\n]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Newline" type="ssqml:NewlineType"/>

<xsd:simpleType name="NondoublequoteCharacterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[^&quot;]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NondoublequoteCharacter" type="ssqml:NondoublequoteCharacterType"/>

<xsd:simpleType name="NonquoteCharacterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[^\']"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NonquoteCharacter" type="ssqml:NonquoteCharacterType"/>

<xsd:simpleType name="HexitType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[0-9A-Fa-f]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Hexit" type="ssqml:HexitType"/>

<xsd:simpleType name="UppercaseHexitType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[0-9A-F]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UppercaseHexit" type="ssqml:UppercaseHexitType"/>

<xsd:simpleType name="NonEscapedCharacterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[^\\]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NonEscapedCharacter" type="ssqml:NonEscapedCharacterType"/>

<xsd:simpleType name="EscapedCharacterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\\]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EscapedCharacter" type="ssqml:EscapedCharacterType"/>

<xsd:simpleType name="UnicodeEscapeCharacterType">
	<xsd:restriction base="xsd:string">
		<xsd:pattern value="[\u]"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnicodeEscapeCharacter" type="ssqml:UnicodeEscapeCharacterType"/>

<xsd:simpleType name="BinarySetFunctionTypeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="COVAR_POP"/>
		<xsd:enumeration value="COVAR_SAMP"/>
		<xsd:enumeration value="CORR"/>
		<xsd:enumeration value="REGR_SLOPE"/>
		<xsd:enumeration value="REGR_INTERCEPT"/>
		<xsd:enumeration value="REGR_COUNT"/>
		<xsd:enumeration value="REGR_R2"/>
		<xsd:enumeration value="REGR_AVGX"/>
		<xsd:enumeration value="REGR_AVGY"/>
		<xsd:enumeration value="REGR_SXX"/>
		<xsd:enumeration value="REGR_SYY"/>
		<xsd:enumeration value="REGR_SXY"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BinarySetFunctionType" type="ssqml:BinarySetFunctionTypeType"/>

<xsd:simpleType name="BooleanLiteralType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="TRUE"/>
		<xsd:enumeration value="FALSE"/>
		<xsd:enumeration value="UNKNOWN"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BooleanLiteral" type="ssqml:BooleanLiteralType"/>

<xsd:simpleType name="CharLengthUnitsType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CHARACTERS"/>
		<xsd:enumeration value="CODE_UNITS"/>
		<xsd:enumeration value="OCTETS"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CharLengthUnits" type="ssqml:CharLengthUnitsType"/>

<xsd:simpleType name="ColumnDefaultOptionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="INCLUDING DEFAULTS"/>
		<xsd:enumeration value="EXCLUDING DEFAULTS"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ColumnDefaultOption" type="ssqml:ColumnDefaultOptionType"/>

<xsd:simpleType name="ComputationalOperationType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="AVG"/>
		<xsd:enumeration value="MAX"/>
		<xsd:enumeration value="MIN"/>
		<xsd:enumeration value="SUM"/>
		<xsd:enumeration value="EVERY"/>
		<xsd:enumeration value="ANY"/>
		<xsd:enumeration value="SOME"/>
		<xsd:enumeration value="COUNT"/>
		<xsd:enumeration value="STDDEV_POP"/>
		<xsd:enumeration value="STDDEV_SAMP"/>
		<xsd:enumeration value="VAR_SAMP"/>
		<xsd:enumeration value="VAR_POP"/>
		<xsd:enumeration value="COLLECT"/>
		<xsd:enumeration value="FUSION"/>
		<xsd:enumeration value="INTERSECTION"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ComputationalOperation" type="ssqml:ComputationalOperationType"/>

<xsd:simpleType name="ConditionInformationItemNameType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CATALOG_NAME"/>
		<xsd:enumeration value="CLASS_ORIGIN"/>
		<xsd:enumeration value="COLUMN_NAME"/>
		<xsd:enumeration value="CONDITION_IDENTIFIER"/>
		<xsd:enumeration value="CONDITION_NUMBER"/>
		<xsd:enumeration value="CONNECTION_NAME"/>
		<xsd:enumeration value="CONSTRAINT_CATALOG"/>
		<xsd:enumeration value="CONSTRAINT_NAME"/>
		<xsd:enumeration value="CONSTRAINT_SCHEMA"/>
		<xsd:enumeration value="CURSOR_NAME"/>
		<xsd:enumeration value="MESSAGE_LENGTH"/>
		<xsd:enumeration value="MESSAGE_OCTET_LENGTH"/>
		<xsd:enumeration value="MESSAGE_TEXT"/>
		<xsd:enumeration value="PARAMETER_MODE"/>
		<xsd:enumeration value="PARAMETER_NAME"/>
		<xsd:enumeration value="PARAMETER_ORDINAL_POSITION"/>
		<xsd:enumeration value="RETURNED_SQLSTATE"/>
		<xsd:enumeration value="ROUTINE_CATALOG"/>
		<xsd:enumeration value="ROUTINE_NAME"/>
		<xsd:enumeration value="ROUTINE_SCHEMA"/>
		<xsd:enumeration value="SCHEMA_NAME"/>
		<xsd:enumeration value="SERVER_NAME"/>
		<xsd:enumeration value="SPECIFIC_NAME"/>
		<xsd:enumeration value="SUBCLASS_ORIGIN"/>
		<xsd:enumeration value="TABLE_NAME"/>
		<xsd:enumeration value="TRIGGER_CATALOG"/>
		<xsd:enumeration value="TRIGGER_NAME"/>
		<xsd:enumeration value="TRIGGER_SCHEMA"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ConditionInformationItemName" type="ssqml:ConditionInformationItemNameType"/>

<xsd:simpleType name="ConstraintCheckTimeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="INITIALLY DEFERRED"/>
		<xsd:enumeration value="INITIALLY IMMEDIATE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ConstraintCheckTime" type="ssqml:ConstraintCheckTimeType"/>

<xsd:simpleType name="CursorHoldabilityType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="WITH HOLD"/>
		<xsd:enumeration value="WITHOUT HOLD"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CursorHoldability" type="ssqml:CursorHoldabilityType"/>

<xsd:simpleType name="CursorReturnabilityType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="WITH RETURN"/>
		<xsd:enumeration value="WITHOUT RETURN"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CursorReturnability" type="ssqml:CursorReturnabilityType"/>

<xsd:simpleType name="CursorScrollabilityType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="SCROLL"/>
		<xsd:enumeration value="NO SCROLL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CursorScrollability" type="ssqml:CursorScrollabilityType"/>

<xsd:simpleType name="CursorSensitivityType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="SENSITIVE"/>
		<xsd:enumeration value="INSENSITIVE"/>
		<xsd:enumeration value="ASENSITIVE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CursorSensitivity" type="ssqml:CursorSensitivityType"/>

<xsd:simpleType name="DescriptorItemNameType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CARDINALITY"/>
		<xsd:enumeration value="CHARACTER_SET_CATALOG"/>
		<xsd:enumeration value="CHARACTER_SET_NAME"/>
		<xsd:enumeration value="CHARACTER_SET_SCHEMA"/>
		<xsd:enumeration value="COLLATION_CATALOG"/>
		<xsd:enumeration value="COLLATION_NAME"/>
		<xsd:enumeration value="COLLATION_SCHEMA"/>
		<xsd:enumeration value="DATA"/>
		<xsd:enumeration value="DATETIME_INTERVAL_CODE"/>
		<xsd:enumeration value="DATETIME_INTERVAL_PRECISION"/>
		<xsd:enumeration value="DEGREE"/>
		<xsd:enumeration value="INDICATOR"/>
		<xsd:enumeration value="KEY_MEMBER"/>
		<xsd:enumeration value="LENGTH"/>
		<xsd:enumeration value="LEVEL"/>
		<xsd:enumeration value="NAME"/>
		<xsd:enumeration value="NULLABLE"/>
		<xsd:enumeration value="OCTET_LENGTH"/>
		<xsd:enumeration value="PARAMETER_MODE"/>
		<xsd:enumeration value="PARAMETER_ORDINAL_POSITION"/>
		<xsd:enumeration value="PARAMETER_SPECIFIC_CATALOG"/>
		<xsd:enumeration value="PARAMETER_SPECIFIC_NAME"/>
		<xsd:enumeration value="PARAMETER_SPECIFIC_SCHEMA"/>
		<xsd:enumeration value="PRECISION"/>
		<xsd:enumeration value="RETURNED_CARDINALITY"/>
		<xsd:enumeration value="RETURNED_LENGTH"/>
		<xsd:enumeration value="RETURNED_OCTET_LENGTH"/>
		<xsd:enumeration value="SCALE"/>
		<xsd:enumeration value="SCOPE_CATALOG"/>
		<xsd:enumeration value="SCOPE_NAME"/>
		<xsd:enumeration value="SCOPE_SCHEMA"/>
		<xsd:enumeration value="TYPE"/>
		<xsd:enumeration value="UNNAMED"/>
		<xsd:enumeration value="USER_DEFINED_TYPE_CATALOG"/>
		<xsd:enumeration value="USER_DEFINED_TYPE_NAME"/>
		<xsd:enumeration value="USER_DEFINED_TYPE_SCHEMA"/>
		<xsd:enumeration value="USER_DEFINED_TYPE_CODE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DescriptorItemName" type="ssqml:DescriptorItemNameType"/>

<xsd:simpleType name="DeterministicCharacteristicType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="DETERMINISTIC"/>
		<xsd:enumeration value="NOT DETERMINISTIC"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DeterministicCharacteristic" type="ssqml:DeterministicCharacteristicType"/>

<xsd:simpleType name="DocumentOrContentType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="DOCUMENT"/>
		<xsd:enumeration value="CONTENT"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DocumentOrContent" type="ssqml:DocumentOrContentType"/>

<xsd:simpleType name="DropBehaviorType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CASCADE"/>
		<xsd:enumeration value="RESTRICT"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropBehavior" type="ssqml:DropBehaviorType"/>

<xsd:simpleType name="ExternalSecurityClauseType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="EXTERNAL SECuriTY DEFINER"/>
		<xsd:enumeration value="EXTERNAL SECuriTY INVOKER"/>
		<xsd:enumeration value="EXTERNAL SECuriTY IMPLEMENTATION DEFINED"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ExternalSecurityClause" type="ssqml:ExternalSecurityClauseType"/>

<xsd:simpleType name="FinalityType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="FINAL"/>
		<xsd:enumeration value="NOT FINAL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Finality" type="ssqml:FinalityType"/>

<xsd:simpleType name="FromDefaultType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="DEFAULT VALUES"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FromDefault" type="ssqml:FromDefaultType"/>

<xsd:simpleType name="GenerationRuleType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="GENERATED ALWAYS"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GenerationRule" type="ssqml:GenerationRuleType"/>

<xsd:simpleType name="GlobalOrLocalType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="GLOBAL"/>
		<xsd:enumeration value="LOCAL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GlobalOrLocal" type="ssqml:GlobalOrLocalType"/>

<xsd:simpleType name="GrantorType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CURRENT_USER"/>
		<xsd:enumeration value="CURRENT_ROLE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Grantor" type="ssqml:GrantorType"/>

<xsd:simpleType name="HandlerTypeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CONTINUE"/>
		<xsd:enumeration value="EXIT"/>
		<xsd:enumeration value="UNDO"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="HandlerType" type="ssqml:HandlerTypeType"/>

<xsd:simpleType name="HeaderItemNameType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="COUNT"/>
		<xsd:enumeration value="KEY_TYPE"/>
		<xsd:enumeration value="DYNAMIC_FUNCTION"/>
		<xsd:enumeration value="DYNAMIC_FUNCTION_CODE"/>
		<xsd:enumeration value="TOP_LEVEL_COUNT"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="HeaderItemName" type="ssqml:HeaderItemNameType"/>

<xsd:simpleType name="IdentityOptionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="INCLUDING IDENTITY"/>
		<xsd:enumeration value="EXCLUDING IDENTITY"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IdentityOption" type="ssqml:IdentityOptionType"/>

<xsd:simpleType name="InstantiableClauseType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="INSTANTIABLE"/>
		<xsd:enumeration value="NOT INSTANTIABLE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="InstantiableClause" type="ssqml:InstantiableClauseType"/>

<xsd:simpleType name="InverseDistributionFunctionTypeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="PERCENTILE_CONT"/>
		<xsd:enumeration value="PERCENTILE_DISC"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="InverseDistributionFunctionType" type="ssqml:InverseDistributionFunctionTypeType"/>

<xsd:simpleType name="LevelOfIsolationType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="READ UNCOMMITTED"/>
		<xsd:enumeration value="READ COMMITTED"/>
		<xsd:enumeration value="REPEATABLE READ"/>
		<xsd:enumeration value="SERIALIZABLE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LevelOfIsolation" type="ssqml:LevelOfIsolationType"/>

<xsd:simpleType name="LevelsClauseType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CASCADED"/>
		<xsd:enumeration value="LOCAL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LevelsClause" type="ssqml:LevelsClauseType"/>

<xsd:simpleType name="MatchTypeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="FULL"/>
		<xsd:enumeration value="PARTIAL"/>
		<xsd:enumeration value="SIMPLE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MatchType" type="ssqml:MatchTypeType"/>

<xsd:simpleType name="NestingOptionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="WITH NESTING"/>
		<xsd:enumeration value="WITHOUT NESTING"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NestingOption" type="ssqml:NestingOptionType"/>

<xsd:simpleType name="NonReservedWordType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="A"/>
		<xsd:enumeration value="ABS"/>
		<xsd:enumeration value="ABSENT"/>
		<xsd:enumeration value="ABSOLUTE"/>
		<xsd:enumeration value="ACCORDING"/>
		<xsd:enumeration value="ACTION"/>
		<xsd:enumeration value="ADA"/>
		<xsd:enumeration value="ADMIN"/>
		<xsd:enumeration value="AFTER"/>
		<xsd:enumeration value="ALWAYS"/>
		<xsd:enumeration value="ASC"/>
		<xsd:enumeration value="ASSERTION"/>
		<xsd:enumeration value="ASSIGNMENT"/>
		<xsd:enumeration value="ATTRIBUTE"/>
		<xsd:enumeration value="ATTRIBUTES"/>
		<xsd:enumeration value="AVG"/>
		<xsd:enumeration value="BASE64"/>
		<xsd:enumeration value="BEFORE"/>
		<xsd:enumeration value="BERNOULLI"/>
		<xsd:enumeration value="BREADTH"/>
		<xsd:enumeration value="C"/>
		<xsd:enumeration value="CARDINALITY"/>
		<xsd:enumeration value="CASCADE"/>
		<xsd:enumeration value="CATALOG"/>
		<xsd:enumeration value="CATALOG_NAME"/>
		<xsd:enumeration value="CEIL"/>
		<xsd:enumeration value="CEILING"/>
		<xsd:enumeration value="CHAIN"/>
		<xsd:enumeration value="CHARACTERISTICS"/>
		<xsd:enumeration value="CHARACTERS"/>
		<xsd:enumeration value="CHARACTER_LENGTH"/>
		<xsd:enumeration value="CHARACTER_SET_CATALOG"/>
		<xsd:enumeration value="CHARACTER_SET_NAME"/>
		<xsd:enumeration value="CHARACTER_SET_SCHEMA"/>
		<xsd:enumeration value="CHAR_LENGTH"/>
		<xsd:enumeration value="CHECKED"/>
		<xsd:enumeration value="CLASS_ORIGIN"/>
		<xsd:enumeration value="COALESCE"/>
		<xsd:enumeration value="COBOL"/>
		<xsd:enumeration value="CODE_UNITS"/>
		<xsd:enumeration value="COLLATION"/>
		<xsd:enumeration value="COLLATION_CATALOG"/>
		<xsd:enumeration value="COLLATION_NAME"/>
		<xsd:enumeration value="COLLATION_SCHEMA"/>
		<xsd:enumeration value="COLLECT"/>
		<xsd:enumeration value="COLUMN_NAME"/>
		<xsd:enumeration value="COLUMNS"/>
		<xsd:enumeration value="COMMAND_FUNCTION"/>
		<xsd:enumeration value="COMMAND_FUNCTION_CODE"/>
		<xsd:enumeration value="COMMITTED"/>
		<xsd:enumeration value="CONDITION"/>
		<xsd:enumeration value="CONDITION_IDENTIFIER"/>
		<xsd:enumeration value="CONDITION_NUMBER"/>
		<xsd:enumeration value="CONNECTION_NAME"/>
		<xsd:enumeration value="CONSTRAINTS"/>
		<xsd:enumeration value="CONSTRAINT_CATALOG"/>
		<xsd:enumeration value="CONSTRAINT_NAME"/>
		<xsd:enumeration value="CONSTRAINT_SCHEMA"/>
		<xsd:enumeration value="CONSTRUCTORS"/>
		<xsd:enumeration value="CONTAINS"/>
		<xsd:enumeration value="CONTENT"/>
		<xsd:enumeration value="CONVERT"/>
		<xsd:enumeration value="CORR"/>
		<xsd:enumeration value="COUNT"/>
		<xsd:enumeration value="COVAR_POP"/>
		<xsd:enumeration value="COVAR_SAMP"/>
		<xsd:enumeration value="CUME_DIST"/>
		<xsd:enumeration value="CURRENT_COLLATION"/>
		<xsd:enumeration value="CURSOR_NAME"/>
		<xsd:enumeration value="DATA"/>
		<xsd:enumeration value="DATETIME_INTERVAL_CODE"/>
		<xsd:enumeration value="DATETIME_INTERVAL_PRECISION"/>
		<xsd:enumeration value="DEFAULTS"/>
		<xsd:enumeration value="DEFERRABLE"/>
		<xsd:enumeration value="DEFERRED"/>
		<xsd:enumeration value="DEFINED"/>
		<xsd:enumeration value="DEFINER"/>
		<xsd:enumeration value="DEGREE"/>
		<xsd:enumeration value="DENSE_RANK"/>
		<xsd:enumeration value="DEPTH"/>
		<xsd:enumeration value="DERIVED"/>
		<xsd:enumeration value="DESC"/>
		<xsd:enumeration value="DESCRIPTOR"/>
		<xsd:enumeration value="DIAGNOSTICS"/>
		<xsd:enumeration value="DISPATCH"/>
		<xsd:enumeration value="DOCUMENT"/>
		<xsd:enumeration value="DOMAIN"/>
		<xsd:enumeration value="DYNAMIC_FUNCTION"/>
		<xsd:enumeration value="DYNAMIC_FUNCTION_CODE"/>
		<xsd:enumeration value="EMPTY"/>
		<xsd:enumeration value="ENCODING"/>
		<xsd:enumeration value="EQUALS"/>
		<xsd:enumeration value="EVERY"/>
		<xsd:enumeration value="EXCEPTION"/>
		<xsd:enumeration value="EXCLUDE"/>
		<xsd:enumeration value="EXCLUDING"/>
		<xsd:enumeration value="EXIT"/>
		<xsd:enumeration value="EXP"/>
		<xsd:enumeration value="EXTRACT"/>
		<xsd:enumeration value="FINAL"/>
		<xsd:enumeration value="FIRST"/>
		<xsd:enumeration value="FLOOR"/>
		<xsd:enumeration value="FOLLOWING"/>
		<xsd:enumeration value="FORTRAN"/>
		<xsd:enumeration value="FOUND"/>
		<xsd:enumeration value="FUSION"/>
		<xsd:enumeration value="G"/>
		<xsd:enumeration value="GENERAL"/>
		<xsd:enumeration value="GO"/>
		<xsd:enumeration value="GOTO"/>
		<xsd:enumeration value="GRANTED"/>
		<xsd:enumeration value="HEX"/>
		<xsd:enumeration value="HIERARCHY"/>
		<xsd:enumeration value="ID"/>
		<xsd:enumeration value="IMPLEMENTATION"/>
		<xsd:enumeration value="INCLUDING"/>
		<xsd:enumeration value="INCREMENT"/>
		<xsd:enumeration value="INITIALLY"/>
		<xsd:enumeration value="INSTANCE"/>
		<xsd:enumeration value="INSTANTIABLE"/>
		<xsd:enumeration value="INTERSECTION"/>
		<xsd:enumeration value="INVOKER"/>
		<xsd:enumeration value="ISOLATION"/>
		<xsd:enumeration value="K"/>
		<xsd:enumeration value="KEY"/>
		<xsd:enumeration value="KEY_MEMBER"/>
		<xsd:enumeration value="KEY_TYPE"/>
		<xsd:enumeration value="LAST"/>
		<xsd:enumeration value="LENGTH"/>
		<xsd:enumeration value="LEVEL"/>
		<xsd:enumeration value="LN"/>
		<xsd:enumeration value="LOCATION"/>
		<xsd:enumeration value="LOCATOR"/>
		<xsd:enumeration value="LOWER"/>
		<xsd:enumeration value="M"/>
		<xsd:enumeration value="MAP"/>
		<xsd:enumeration value="MATCHED"/>
		<xsd:enumeration value="MAX"/>
		<xsd:enumeration value="MAXVALUE"/>
		<xsd:enumeration value="MESSAGE_LENGTH"/>
		<xsd:enumeration value="MESSAGE_OCTET_LENGTH"/>
		<xsd:enumeration value="MESSAGE_TEXT"/>
		<xsd:enumeration value="MIN"/>
		<xsd:enumeration value="MINVALUE"/>
		<xsd:enumeration value="MOD"/>
		<xsd:enumeration value="MORE"/>
		<xsd:enumeration value="MUMPS"/>
		<xsd:enumeration value="NAME"/>
		<xsd:enumeration value="NAMES"/>
		<xsd:enumeration value="NAMESPACE"/>
		<xsd:enumeration value="NESTING"/>
		<xsd:enumeration value="NEXT"/>
		<xsd:enumeration value="NIL"/>
		<xsd:enumeration value="NORMALIZE"/>
		<xsd:enumeration value="NORMALIZED"/>
		<xsd:enumeration value="NULLABLE"/>
		<xsd:enumeration value="NULLIF"/>
		<xsd:enumeration value="NULLS"/>
		<xsd:enumeration value="NUMBER"/>
		<xsd:enumeration value="OBJECT"/>
		<xsd:enumeration value="OCTETS"/>
		<xsd:enumeration value="OCTET_LENGTH"/>
		<xsd:enumeration value="OPTION"/>
		<xsd:enumeration value="OPTIONS"/>
		<xsd:enumeration value="ORDERING"/>
		<xsd:enumeration value="ORDINALITY"/>
		<xsd:enumeration value="OTHERS"/>
		<xsd:enumeration value="OVERLAY"/>
		<xsd:enumeration value="OVERRIDING"/>
		<xsd:enumeration value="PAD"/>
		<xsd:enumeration value="PARAMETER_MODE"/>
		<xsd:enumeration value="PARAMETER_NAME"/>
		<xsd:enumeration value="PARAMETER_ORDINAL_POSITION"/>
		<xsd:enumeration value="PARAMETER_SPECIFIC_CATALOG"/>
		<xsd:enumeration value="PARAMETER_SPECIFIC_NAME"/>
		<xsd:enumeration value="PARAMETER_SPECIFIC_SCHEMA"/>
		<xsd:enumeration value="PARTIAL"/>
		<xsd:enumeration value="PASCAL"/>
		<xsd:enumeration value="PASSING"/>
		<xsd:enumeration value="PATH"/>
		<xsd:enumeration value="PERCENTILE_CONT"/>
		<xsd:enumeration value="PERCENTILE_DISC"/>
		<xsd:enumeration value="PERCENT_RANK"/>
		<xsd:enumeration value="PLACING"/>
		<xsd:enumeration value="PLI"/>
		<xsd:enumeration value="POSITION"/>
		<xsd:enumeration value="POWER"/>
		<xsd:enumeration value="PRECEDING"/>
		<xsd:enumeration value="PRESERVE"/>
		<xsd:enumeration value="PRIOR"/>
		<xsd:enumeration value="PRIVILEGES"/>
		<xsd:enumeration value="PUBLIC"/>
		<xsd:enumeration value="RANK"/>
		<xsd:enumeration value="READ"/>
		<xsd:enumeration value="RELATIVE"/>
		<xsd:enumeration value="REPEATABLE"/>
		<xsd:enumeration value="RESTART"/>
		<xsd:enumeration value="RETURNED_CARDINALITY"/>
		<xsd:enumeration value="RETURNED_LENGTH"/>
		<xsd:enumeration value="RETURNED_OCTET_LENGTH"/>
		<xsd:enumeration value="RETURNED_sqlSTATE"/>
		<xsd:enumeration value="RETURNING"/>
		<xsd:enumeration value="ROLE"/>
		<xsd:enumeration value="ROUTINE"/>
		<xsd:enumeration value="ROUTINE_CATALOG"/>
		<xsd:enumeration value="ROUTINE_NAME"/>
		<xsd:enumeration value="ROUTINE_SCHEMA"/>
		<xsd:enumeration value="ROW_COUNT"/>
		<xsd:enumeration value="ROW_NUMBER"/>
		<xsd:enumeration value="SCALE"/>
		<xsd:enumeration value="SCHEMA"/>
		<xsd:enumeration value="SCHEMA_NAME"/>
		<xsd:enumeration value="SCOPE_CATALOG"/>
		<xsd:enumeration value="SCOPE_NAME"/>
		<xsd:enumeration value="SCOPE_SCHEMA"/>
		<xsd:enumeration value="SECTION"/>
		<xsd:enumeration value="SECuriTY"/>
		<xsd:enumeration value="SELF"/>
		<xsd:enumeration value="SEQUENCE"/>
		<xsd:enumeration value="SERIALIZABLE"/>
		<xsd:enumeration value="SERVER_NAME"/>
		<xsd:enumeration value="SESSION"/>
		<xsd:enumeration value="SETS"/>
		<xsd:enumeration value="SIMPLE"/>
		<xsd:enumeration value="SIZE"/>
		<xsd:enumeration value="SOURCE"/>
		<xsd:enumeration value="SPACE"/>
		<xsd:enumeration value="SPECIFIC_NAME"/>
		<xsd:enumeration value="SQRT"/>
		<xsd:enumeration value="STACKED"/>
		<xsd:enumeration value="STANDALONE"/>
		<xsd:enumeration value="STATE"/>
		<xsd:enumeration value="STATEMENT"/>
		<xsd:enumeration value="STDDEV_POP"/>
		<xsd:enumeration value="STDDEV_SAMP"/>
		<xsd:enumeration value="STRIP"/>
		<xsd:enumeration value="STRUCTURE"/>
		<xsd:enumeration value="STYLE"/>
		<xsd:enumeration value="SUBCLASS_ORIGIN"/>
		<xsd:enumeration value="SUBSTRING"/>
		<xsd:enumeration value="SUM"/>
		<xsd:enumeration value="TABLESAMPLE"/>
		<xsd:enumeration value="TABLE_NAME"/>
		<xsd:enumeration value="TEMPORARY"/>
		<xsd:enumeration value="TIES"/>
		<xsd:enumeration value="TOP_LEVEL_COUNT"/>
		<xsd:enumeration value="TRANSACTION"/>
		<xsd:enumeration value="TRANSACTIONS_COMMITTED"/>
		<xsd:enumeration value="TRANSACTIONS_ROLLED_BACK"/>
		<xsd:enumeration value="TRANSACTION_ACTIVE"/>
		<xsd:enumeration value="TRANSFORM"/>
		<xsd:enumeration value="TRANSFORMS"/>
		<xsd:enumeration value="TRANSLATE"/>
		<xsd:enumeration value="TRIGGER_CATALOG"/>
		<xsd:enumeration value="TRIGGER_NAME"/>
		<xsd:enumeration value="TRIGGER_SCHEMA"/>
		<xsd:enumeration value="TRIM"/>
		<xsd:enumeration value="TYPE"/>
		<xsd:enumeration value="UNBOUNDED"/>
		<xsd:enumeration value="UNCOMMITTED"/>
		<xsd:enumeration value="UNDER"/>
		<xsd:enumeration value="UNDO"/>
		<xsd:enumeration value="UNNAMED"/>
		<xsd:enumeration value="UNTYPED"/>
		<xsd:enumeration value="URI"/>
		<xsd:enumeration value="USAGE"/>
		<xsd:enumeration value="USER_DEFINED_TYPE_CATALOG"/>
		<xsd:enumeration value="USER_DEFINED_TYPE_CODE"/>
		<xsd:enumeration value="USER_DEFINED_TYPE_NAME"/>
		<xsd:enumeration value="USER_DEFINED_TYPE_SCHEMA"/>
		<xsd:enumeration value="VALID"/>
		<xsd:enumeration value="VERSION"/>
		<xsd:enumeration value="VIEW"/>
		<xsd:enumeration value="WHITESPACE"/>
		<xsd:enumeration value="WORK"/>
		<xsd:enumeration value="WRITE"/>
		<xsd:enumeration value="XMLSCHEMA"/>
		<xsd:enumeration value="ZONE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NonReservedWord" type="ssqml:NonReservedWordType"/>

<xsd:simpleType name="NonSecondPrimaryDatetimeFieldType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="YEAR"/>
		<xsd:enumeration value="MONTH"/>
		<xsd:enumeration value="DAY"/>
		<xsd:enumeration value="HOUR"/>
		<xsd:enumeration value="MINUTE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NonSecondPrimaryDatetimeField" type="ssqml:NonSecondPrimaryDatetimeFieldType"/>

<xsd:simpleType name="NullOrderingType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="NULLS FIRST"/>
		<xsd:enumeration value="NULLS LAST"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NullOrdering" type="ssqml:NullOrderingType"/>

<xsd:simpleType name="NullCallClauseType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="RETURNS NULL ON NULL INPUT"/>
		<xsd:enumeration value="CALLED ON NULL INPUT"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NullCallClause" type="ssqml:NullCallClauseType"/>

<xsd:simpleType name="OrderingSpecificationType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="ASC"/>
		<xsd:enumeration value="DESC"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OrderingSpecification" type="ssqml:OrderingSpecificationType"/>

<xsd:simpleType name="OuterJoinTypeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="LEFT"/>
		<xsd:enumeration value="RIGHT"/>
		<xsd:enumeration value="FULL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OuterJoinType" type="ssqml:OuterJoinTypeType"/>

<xsd:simpleType name="OverrideClauseType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="OVERRIDING USER VALUE"/>
		<xsd:enumeration value="OVERRIDING SYSTEM VALUE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OverrideClause" type="ssqml:OverrideClauseType"/>

<xsd:simpleType name="PadCharacteristicType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="NO PAD"/>
		<xsd:enumeration value="PAD SPACE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PadCharacteristic" type="ssqml:PadCharacteristicType"/>

<xsd:simpleType name="ParameterModeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="IN"/>
		<xsd:enumeration value="OUT"/>
		<xsd:enumeration value="INOUT"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ParameterMode" type="ssqml:ParameterModeType"/>

<xsd:simpleType name="ParameterStyleType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="sql"/>
		<xsd:enumeration value="GENERAL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ParameterStyle" type="ssqml:ParameterStyleType"/>

<xsd:simpleType name="RankFunctionTypeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="RANK"/>
		<xsd:enumeration value="DENSE_RANK"/>
		<xsd:enumeration value="PERCENT_RANK"/>
		<xsd:enumeration value="CUME_DIST"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RankFunctionType" type="ssqml:RankFunctionTypeType"/>

<xsd:simpleType name="ReferenceGenerationType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="SYSTEM GENERATED"/>
		<xsd:enumeration value="USER GENERATED"/>
		<xsd:enumeration value="DERIVED"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReferenceGeneration" type="ssqml:ReferenceGenerationType"/>

<xsd:simpleType name="ReferentialActionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CASCADE"/>
		<xsd:enumeration value="SET NULL"/>
		<xsd:enumeration value="SET DEFAULT"/>
		<xsd:enumeration value="RESTRICT"/>
		<xsd:enumeration value="NO ACTION"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReferentialAction" type="ssqml:ReferentialActionType"/>

<xsd:simpleType name="ReservedWordType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="ADD"/>
		<xsd:enumeration value="ALL"/>
		<xsd:enumeration value="ALLOCATE"/>
		<xsd:enumeration value="ALTER"/>
		<xsd:enumeration value="AND"/>
		<xsd:enumeration value="ANY"/>
		<xsd:enumeration value="ARE"/>
		<xsd:enumeration value="ARRAY"/>
		<xsd:enumeration value="AS"/>
		<xsd:enumeration value="ASENSITIVE"/>
		<xsd:enumeration value="ASYMMETRIC"/>
		<xsd:enumeration value="AT"/>
		<xsd:enumeration value="ATOMIC"/>
		<xsd:enumeration value="AUTHORIZATION"/>
		<xsd:enumeration value="BEGIN"/>
		<xsd:enumeration value="BETWEEN"/>
		<xsd:enumeration value="BIGINT"/>
		<xsd:enumeration value="BINARY"/>
		<xsd:enumeration value="BLOB"/>
		<xsd:enumeration value="BOOLEAN"/>
		<xsd:enumeration value="BOTH"/>
		<xsd:enumeration value="BY"/>
		<xsd:enumeration value="CALL"/>
		<xsd:enumeration value="CALLED"/>
		<xsd:enumeration value="CASCADED"/>
		<xsd:enumeration value="CASE"/>
		<xsd:enumeration value="CAST"/>
		<xsd:enumeration value="CHAR"/>
		<xsd:enumeration value="CHARACTER"/>
		<xsd:enumeration value="CHECK"/>
		<xsd:enumeration value="CLOB"/>
		<xsd:enumeration value="CLOSE"/>
		<xsd:enumeration value="COLLATE"/>
		<xsd:enumeration value="COLUMN"/>
		<xsd:enumeration value="COMMIT"/>
		<xsd:enumeration value="CONNECT"/>
		<xsd:enumeration value="CONSTRAINT"/>
		<xsd:enumeration value="CONTINUE"/>
		<xsd:enumeration value="CORRESPONDING"/>
		<xsd:enumeration value="CREATE"/>
		<xsd:enumeration value="CROSS"/>
		<xsd:enumeration value="CUBE"/>
		<xsd:enumeration value="CURRENT"/>
		<xsd:enumeration value="CURRENT_DATE"/>
		<xsd:enumeration value="CURRENT_DEFAULT_TRANSFORM_GROUP"/>
		<xsd:enumeration value="CURRENT_PATH"/>
		<xsd:enumeration value="CURRENT_ROLE"/>
		<xsd:enumeration value="CURRENT_TIME"/>
		<xsd:enumeration value="CURRENT_TIMESTAMP"/>
		<xsd:enumeration value="CURRENT_TRANSFORM_GROUP_FOR_TYPE"/>
		<xsd:enumeration value="CURRENT_USER"/>
		<xsd:enumeration value="CURSOR"/>
		<xsd:enumeration value="CYCLE"/>
		<xsd:enumeration value="DATE"/>
		<xsd:enumeration value="DAY"/>
		<xsd:enumeration value="DEALLOCATE"/>
		<xsd:enumeration value="DEC"/>
		<xsd:enumeration value="DECIMAL"/>
		<xsd:enumeration value="DECLARE"/>
		<xsd:enumeration value="DEFAULT"/>
		<xsd:enumeration value="DELETE"/>
		<xsd:enumeration value="DEREF"/>
		<xsd:enumeration value="DESCRIBE"/>
		<xsd:enumeration value="DETERMINISTIC"/>
		<xsd:enumeration value="DISCONNECT"/>
		<xsd:enumeration value="DISTINCT"/>
		<xsd:enumeration value="DO"/>
		<xsd:enumeration value="DOUBLE"/>
		<xsd:enumeration value="DROP"/>
		<xsd:enumeration value="DYNAMIC"/>
		<xsd:enumeration value="EACH"/>
		<xsd:enumeration value="ELEMENT"/>
		<xsd:enumeration value="ELSE"/>
		<xsd:enumeration value="ELSEIF"/>
		<xsd:enumeration value="END"/>
		<xsd:enumeration value="END-EXEC"/>
		<xsd:enumeration value="ESCAPE"/>
		<xsd:enumeration value="EXCEPT"/>
		<xsd:enumeration value="EXEC"/>
		<xsd:enumeration value="EXECUTE"/>
		<xsd:enumeration value="EXISTS"/>
		<xsd:enumeration value="EXTERNAL"/>
		<xsd:enumeration value="FALSE"/>
		<xsd:enumeration value="FETCH"/>
		<xsd:enumeration value="FILTER"/>
		<xsd:enumeration value="FLOAT"/>
		<xsd:enumeration value="FOR"/>
		<xsd:enumeration value="FOREIGN"/>
		<xsd:enumeration value="FREE"/>
		<xsd:enumeration value="FROM"/>
		<xsd:enumeration value="FULL"/>
		<xsd:enumeration value="FUNCTION"/>
		<xsd:enumeration value="GET"/>
		<xsd:enumeration value="GLOBAL"/>
		<xsd:enumeration value="GRANT"/>
		<xsd:enumeration value="GROUP"/>
		<xsd:enumeration value="GROUPING"/>
		<xsd:enumeration value="HANDLER"/>
		<xsd:enumeration value="HAVING"/>
		<xsd:enumeration value="HOLD"/>
		<xsd:enumeration value="HOUR"/>
		<xsd:enumeration value="IDENTITY"/>
		<xsd:enumeration value="IF"/>
		<xsd:enumeration value="IMMEDIATE"/>
		<xsd:enumeration value="IN"/>
		<xsd:enumeration value="INDICATOR"/>
		<xsd:enumeration value="INNER"/>
		<xsd:enumeration value="INOUT"/>
		<xsd:enumeration value="INPUT"/>
		<xsd:enumeration value="INSENSITIVE"/>
		<xsd:enumeration value="INSERT"/>
		<xsd:enumeration value="INT"/>
		<xsd:enumeration value="INTEGER"/>
		<xsd:enumeration value="INTERSECT"/>
		<xsd:enumeration value="INTERVAL"/>
		<xsd:enumeration value="INTO"/>
		<xsd:enumeration value="IS"/>
		<xsd:enumeration value="ISOLATION"/>
		<xsd:enumeration value="ITERATE"/>
		<xsd:enumeration value="JOIN"/>
		<xsd:enumeration value="LANGUAGE"/>
		<xsd:enumeration value="LARGE"/>
		<xsd:enumeration value="LATERAL"/>
		<xsd:enumeration value="LEADING"/>
		<xsd:enumeration value="LEAVE"/>
		<xsd:enumeration value="LEFT"/>
		<xsd:enumeration value="LIKE"/>
		<xsd:enumeration value="LOCAL"/>
		<xsd:enumeration value="LOCALTIME"/>
		<xsd:enumeration value="LOCALTIMESTAMP"/>
		<xsd:enumeration value="LOOP"/>
		<xsd:enumeration value="MATCH"/>
		<xsd:enumeration value="MEMBER"/>
		<xsd:enumeration value="MERGE"/>
		<xsd:enumeration value="METHOD"/>
		<xsd:enumeration value="MINUTE"/>
		<xsd:enumeration value="MODIFIES"/>
		<xsd:enumeration value="MODULE"/>
		<xsd:enumeration value="MONTH"/>
		<xsd:enumeration value="MULTISET"/>
		<xsd:enumeration value="NATIONAL"/>
		<xsd:enumeration value="NATURAL"/>
		<xsd:enumeration value="NCHAR"/>
		<xsd:enumeration value="NCLOB"/>
		<xsd:enumeration value="NEW"/>
		<xsd:enumeration value="NO"/>
		<xsd:enumeration value="NONE"/>
		<xsd:enumeration value="NOT"/>
		<xsd:enumeration value="NULL"/>
		<xsd:enumeration value="NUMERIC"/>
		<xsd:enumeration value="OF"/>
		<xsd:enumeration value="OLD"/>
		<xsd:enumeration value="ON"/>
		<xsd:enumeration value="ONLY"/>
		<xsd:enumeration value="OPEN"/>
		<xsd:enumeration value="OR"/>
		<xsd:enumeration value="ORDER"/>
		<xsd:enumeration value="OUT"/>
		<xsd:enumeration value="OUTER"/>
		<xsd:enumeration value="OUTPUT"/>
		<xsd:enumeration value="OVER"/>
		<xsd:enumeration value="OVERLAPS"/>
		<xsd:enumeration value="PARAMETER"/>
		<xsd:enumeration value="PARTITION"/>
		<xsd:enumeration value="PRECISION"/>
		<xsd:enumeration value="PREPARE"/>
		<xsd:enumeration value="PRIMARY"/>
		<xsd:enumeration value="PROCEDURE"/>
		<xsd:enumeration value="RANGE"/>
		<xsd:enumeration value="READS"/>
		<xsd:enumeration value="REAL"/>
		<xsd:enumeration value="RECURSIVE"/>
		<xsd:enumeration value="REF"/>
		<xsd:enumeration value="REFERENCES"/>
		<xsd:enumeration value="REFERENCING"/>
		<xsd:enumeration value="REGR_AVGX"/>
		<xsd:enumeration value="REGR_AVGY"/>
		<xsd:enumeration value="REGR_COUNT"/>
		<xsd:enumeration value="REGR_INTERCEPT"/>
		<xsd:enumeration value="REGR_R2"/>
		<xsd:enumeration value="REGR_SLOPE"/>
		<xsd:enumeration value="REGR_SXX"/>
		<xsd:enumeration value="REGR_SXY"/>
		<xsd:enumeration value="REGR_SYY"/>
		<xsd:enumeration value="RELEASE"/>
		<xsd:enumeration value="REPEAT"/>
		<xsd:enumeration value="RESIGNAL"/>
		<xsd:enumeration value="RESULT"/>
		<xsd:enumeration value="RETURN"/>
		<xsd:enumeration value="RETURNS"/>
		<xsd:enumeration value="REVOKE"/>
		<xsd:enumeration value="RIGHT"/>
		<xsd:enumeration value="ROLLBACK"/>
		<xsd:enumeration value="ROLLUP"/>
		<xsd:enumeration value="ROW"/>
		<xsd:enumeration value="ROWS"/>
		<xsd:enumeration value="SAVEPOINT"/>
		<xsd:enumeration value="SCROLL"/>
		<xsd:enumeration value="SEARCH"/>
		<xsd:enumeration value="SECOND"/>
		<xsd:enumeration value="SELECT"/>
		<xsd:enumeration value="SENSITIVE"/>
		<xsd:enumeration value="SESSION_USER"/>
		<xsd:enumeration value="SET"/>
		<xsd:enumeration value="SIGNAL"/>
		<xsd:enumeration value="SIMILAR"/>
		<xsd:enumeration value="SMALLINT"/>
		<xsd:enumeration value="SOME"/>
		<xsd:enumeration value="SPECIFIC"/>
		<xsd:enumeration value="SPECIFICTYPE"/>
		<xsd:enumeration value="SQL"/>
		<xsd:enumeration value="SQLEXCEPTION"/>
		<xsd:enumeration value="SQLSTATE"/>
		<xsd:enumeration value="SQLWARNING"/>
		<xsd:enumeration value="START"/>
		<xsd:enumeration value="STATIC"/>
		<xsd:enumeration value="SUBMULTISET"/>
		<xsd:enumeration value="SYMMETRIC"/>
		<xsd:enumeration value="SYSTEM"/>
		<xsd:enumeration value="SYSTEM_USER"/>
		<xsd:enumeration value="TABLE"/>
		<xsd:enumeration value="THEN"/>
		<xsd:enumeration value="TIME"/>
		<xsd:enumeration value="TIMESTAMP"/>
		<xsd:enumeration value="TIMEZONE_HOUR"/>
		<xsd:enumeration value="TIMEZONE_MINUTE"/>
		<xsd:enumeration value="TO"/>
		<xsd:enumeration value="TRAILING"/>
		<xsd:enumeration value="TRANSLATION"/>
		<xsd:enumeration value="TREAT"/>
		<xsd:enumeration value="TRIGGER"/>
		<xsd:enumeration value="TRUE"/>
		<xsd:enumeration value="UESCAPE"/>
		<xsd:enumeration value="UNION"/>
		<xsd:enumeration value="UNIQUE"/>
		<xsd:enumeration value="UNKNOWN"/>
		<xsd:enumeration value="UNNEST"/>
		<xsd:enumeration value="UNTIL"/>
		<xsd:enumeration value="UPDATE"/>
		<xsd:enumeration value="UPPER"/>
		<xsd:enumeration value="USER"/>
		<xsd:enumeration value="USING"/>
		<xsd:enumeration value="VALUE"/>
		<xsd:enumeration value="VALUES"/>
		<xsd:enumeration value="VAR_POP"/>
		<xsd:enumeration value="VAR_SAMP"/>
		<xsd:enumeration value="VARCHAR"/>
		<xsd:enumeration value="VARYING"/>
		<xsd:enumeration value="WHEN"/>
		<xsd:enumeration value="WHENEVER"/>
		<xsd:enumeration value="WHERE"/>
		<xsd:enumeration value="WHILE"/>
		<xsd:enumeration value="WIDTH_BUCKET"/>
		<xsd:enumeration value="WINDOW"/>
		<xsd:enumeration value="WITH"/>
		<xsd:enumeration value="WITHIN"/>
		<xsd:enumeration value="WITHOUT"/>
		<xsd:enumeration value="XML"/>
		<xsd:enumeration value="XMLAGG"/>
		<xsd:enumeration value="XMLATTRIBUTES"/>
		<xsd:enumeration value="XMLBINARY"/>
		<xsd:enumeration value="XMLCAST"/>
		<xsd:enumeration value="XMLCONCAT"/>
		<xsd:enumeration value="XMLCOMMENT"/>
		<xsd:enumeration value="XMLELEMENT"/>
		<xsd:enumeration value="XMLEXISTS"/>
		<xsd:enumeration value="XMLFOREST"/>
		<xsd:enumeration value="XMLITERATE"/>
		<xsd:enumeration value="XMLNAMESPACES"/>
		<xsd:enumeration value="XMLPARSE"/>
		<xsd:enumeration value="XMLPI"/>
		<xsd:enumeration value="XMLQUERY"/>
		<xsd:enumeration value="XMLSERIALIZE"/>
		<xsd:enumeration value="XMLTABLE"/>
		<xsd:enumeration value="YEAR"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReservedWord" type="ssqml:ReservedWordType"/>

<xsd:simpleType name="RevokeOptionExtensionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="GRANT OPTION FOR"/>
		<xsd:enumeration value="HIERARCHY OPTION FOR"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RevokeOptionExtension" type="ssqml:RevokeOptionExtensionType"/>

<xsd:simpleType name="RightsClauseType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="sql SECuriTY INVOKER"/>
		<xsd:enumeration value="sql SECuriTY DEFINER"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RightsClause" type="ssqml:RightsClauseType"/>

<xsd:simpleType name="SampleMethodType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="BERNOULLI"/>
		<xsd:enumeration value="SYSTEM"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SampleMethod" type="ssqml:SampleMethodType"/>

<xsd:simpleType name="SavepointLevelIndicationType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="NEW SAVEPOINT LEVEL"/>
		<xsd:enumeration value="OLD SAVEPOINT LEVEL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SavepointLevelIndication" type="ssqml:SavepointLevelIndicationType"/>

<xsd:simpleType name="ScopeOptionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="GLOBAL"/>
		<xsd:enumeration value="LOCAL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ScopeOption" type="ssqml:ScopeOptionType"/>

<xsd:simpleType name="SequenceGeneratorCycleOptionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CYCLE"/>
		<xsd:enumeration value="NO CYCLE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SequenceGeneratorCycleOption" type="ssqml:SequenceGeneratorCycleOptionType"/>

<xsd:simpleType name="SetQuantifierType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="DISTINCT"/>
		<xsd:enumeration value="ALL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetQuantifier" type="ssqml:SetQuantifierType"/>

<xsd:simpleType name="SomeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="SOME"/>
		<xsd:enumeration value="ANY"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Some" type="ssqml:SomeType"/>

<xsd:simpleType name="SqlDataAccessIndicationType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="NO SQL"/>
		<xsd:enumeration value="CONTAINS SQL"/>
		<xsd:enumeration value="READS SQL DATA"/>
		<xsd:enumeration value="MODIFIES SQL DATA"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SqlDataAccessIndication" type="ssqml:SqlDataAccessIndicationType"/>

<xsd:simpleType name="StatementInformationItemNameType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="NUMBER"/>
		<xsd:enumeration value="MORE"/>
		<xsd:enumeration value="COMMAND_FUNCTION"/>
		<xsd:enumeration value="COMMAND_FUNCTION_CODE"/>
		<xsd:enumeration value="DYNAMIC_FUNCTION"/>
		<xsd:enumeration value="DYNAMIC_FUNCTION_CODE"/>
		<xsd:enumeration value="ROW_COUNT"/>
		<xsd:enumeration value="TRANSACTIONS_COMMITTED"/>
		<xsd:enumeration value="TRANSACTIONS_ROLLED_BACK"/>
		<xsd:enumeration value="TRANSACTION_ACTIVE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="StatementInformationItemName" type="ssqml:StatementInformationItemNameType"/>

<xsd:simpleType name="TableCommitActionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="PRESERVE"/>
		<xsd:enumeration value="DELETE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TableCommitAction" type="ssqml:TableCommitActionType"/>

<xsd:simpleType name="TimeZoneFieldType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="TIMEZONE_HOUR"/>
		<xsd:enumeration value="TIMEZONE_MINUTE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TimeZoneField" type="ssqml:TimeZoneFieldType"/>

<xsd:simpleType name="TransactionAccessModeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="READ ONLY"/>
		<xsd:enumeration value="READ WRITE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TransactionAccessMode" type="ssqml:TransactionAccessModeType"/>

<xsd:simpleType name="TransformKindType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="TO SQL"/>
		<xsd:enumeration value="FROM SQL"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TransformKind" type="ssqml:TransformKindType"/>

<xsd:simpleType name="TriggerActionTimeType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="BEFORE"/>
		<xsd:enumeration value="AFTER"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TriggerActionTime" type="ssqml:TriggerActionTimeType"/>

<xsd:simpleType name="TrimSpecificationType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="LEADING"/>
		<xsd:enumeration value="TRAILING"/>
		<xsd:enumeration value="BOTH"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TrimSpecification" type="ssqml:TrimSpecificationType"/>

<xsd:simpleType name="TruthValueType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="TRUE"/>
		<xsd:enumeration value="FALSE"/>
		<xsd:enumeration value="UNKNOWN"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TruthValue" type="ssqml:TruthValueType"/>

<xsd:simpleType name="UniqueSpecificationType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="UNIQUE"/>
		<xsd:enumeration value="PRIMARY KEY"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UniqueSpecification" type="ssqml:UniqueSpecificationType"/>

<xsd:simpleType name="WhichAreaType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="CURRENT"/>
		<xsd:enumeration value="STACKED"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WhichArea" type="ssqml:WhichAreaType"/>

<xsd:simpleType name="WindowFrameExclusionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="EXCLUDE CURRENT ROW"/>
		<xsd:enumeration value="EXCLUDE GROUP"/>
		<xsd:enumeration value="EXCLUDE TIES"/>
		<xsd:enumeration value="EXCLUDE NO OTHERS"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WindowFrameExclusion" type="ssqml:WindowFrameExclusionType"/>

<xsd:simpleType name="WindowFrameUnitsType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="ROWS"/>
		<xsd:enumeration value="RANGE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WindowFrameUnits" type="ssqml:WindowFrameUnitsType"/>

<xsd:simpleType name="WithOrWithoutDataType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="WITH NO DATA"/>
		<xsd:enumeration value="WITH DATA"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithOrWithoutData" type="ssqml:WithOrWithoutDataType"/>

<xsd:simpleType name="WithOrWithoutTimeZoneType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="WITH TIME ZONE"/>
		<xsd:enumeration value="WITHOUT TIME ZONE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithOrWithoutTimeZone" type="ssqml:WithOrWithoutTimeZoneType"/>

<xsd:simpleType name="XmlContentOptionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="NULL ON NULL"/>
		<xsd:enumeration value="EMPTY ON NULL"/>
		<xsd:enumeration value="ABSENT ON NULL"/>
		<xsd:enumeration value="NIL ON NULL"/>
		<xsd:enumeration value="NIL ON NO CONTENT"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlContentOption" type="ssqml:XmlContentOptionType"/>

<xsd:simpleType name="XmlPassingMechanismType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="BY REF"/>
		<xsd:enumeration value="BY VALUE"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlPassingMechanism" type="ssqml:XmlPassingMechanismType"/>

<xsd:simpleType name="XmlUntypedOrAnyType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="UNTYPED"/>
		<xsd:enumeration value="ANY"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlUntypedOrAny" type="ssqml:XmlUntypedOrAnyType"/>

<xsd:simpleType name="XmlValidIdentityConstraintOptionType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="WITHOUT IDENTITY CONSTRAINTS"/>
		<xsd:enumeration value="WITH IDENTITY CONSTRAINTS GLOBAL"/>
		<xsd:enumeration value="WITH IDENTITY CONSTRAINTS LOCAL"/>
		<xsd:enumeration value="DOCUMENT"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlValidIdentityConstraintOption" type="ssqml:XmlValidIdentityConstraintOptionType"/>

<xsd:simpleType name="AllType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="All" type="ssqml:AllType" fixed=" ALL "/>

<xsd:simpleType name="ASetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" A SET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ASetStaticString" type="ssqml:ASetStaticStringType" fixed=" A SET "/>

<xsd:simpleType name="AbsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ABS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AbsStaticString" type="ssqml:AbsStaticStringType" fixed=" ABS "/>

<xsd:simpleType name="AbsoluteStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ABSOLUTE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AbsoluteStaticString" type="ssqml:AbsoluteStaticStringType" fixed=" ABSOLUTE "/>

<xsd:simpleType name="AccordingToXmlschemaStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ACCORDING TO XMLSCHEMA "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AccordingToXmlschemaStaticString" type="ssqml:AccordingToXmlschemaStaticStringType" fixed=" ACCORDING TO XMLSCHEMA "/>

<xsd:simpleType name="AddAttributeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ADD ATTRIBUTE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AddAttributeStaticString" type="ssqml:AddAttributeStaticStringType" fixed=" ADD ATTRIBUTE "/>

<xsd:simpleType name="AddStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ADD "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AddStaticString" type="ssqml:AddStaticStringType" fixed=" ADD "/>

<xsd:simpleType name="AdminOptionForStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ADMIN OPTION FOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AdminOptionForStaticString" type="ssqml:AdminOptionForStaticStringType" fixed=" ADMIN OPTION FOR "/>

<xsd:simpleType name="AllPrivilegesStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALL PRIVILEGES "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AllPrivilegesStaticString" type="ssqml:AllPrivilegesStaticStringType" fixed=" ALL PRIVILEGES "/>

<xsd:simpleType name="AllStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AllStaticString" type="ssqml:AllStaticStringType" fixed=" ALL "/>

<xsd:simpleType name="AllocateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALLOCATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AllocateStaticString" type="ssqml:AllocateStaticStringType" fixed=" ALLOCATE "/>

<xsd:simpleType name="AlterDomainStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALTER DOMAIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AlterDomainStaticString" type="ssqml:AlterDomainStaticStringType" fixed=" ALTER DOMAIN "/>

<xsd:simpleType name="AlterRoutineBehaviorType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RESTRICT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AlterRoutineBehavior" type="ssqml:AlterRoutineBehaviorType" fixed=" RESTRICT "/>

<xsd:simpleType name="AlterSequenceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALTER SEQUENCE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AlterSequenceStaticString" type="ssqml:AlterSequenceStaticStringType" fixed=" ALTER SEQUENCE "/>

<xsd:simpleType name="AlterStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALTER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AlterStaticString" type="ssqml:AlterStaticStringType" fixed=" ALTER "/>

<xsd:simpleType name="AlterTableStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALTER TABLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AlterTableStaticString" type="ssqml:AlterTableStaticStringType" fixed=" ALTER TABLE "/>

<xsd:simpleType name="AlterTypeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALTER TYPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AlterTypeStaticString" type="ssqml:AlterTypeStaticStringType" fixed=" ALTER TYPE "/>

<xsd:simpleType name="AlwaysStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ALWAYS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AlwaysStaticString" type="ssqml:AlwaysStaticStringType" fixed=" ALWAYS "/>

<xsd:simpleType name="AndDynamicStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" AND DYNAMIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AndDynamicStaticString" type="ssqml:AndDynamicStaticStringType" fixed=" AND DYNAMIC "/>

<xsd:simpleType name="AndStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" AND "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AndStaticString" type="ssqml:AndStaticStringType" fixed=" AND "/>

<xsd:simpleType name="ArrayStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ARRAY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ArrayStaticString" type="ssqml:ArrayStaticStringType" fixed=" ARRAY "/>

<xsd:simpleType name="AsAssignmentStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" AS ASSIGNMENT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AsAssignmentStaticString" type="ssqml:AsAssignmentStaticStringType" fixed=" AS ASSIGNMENT "/>

<xsd:simpleType name="AsIdentityStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" AS IDENTITY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AsIdentityStaticString" type="ssqml:AsIdentityStaticStringType" fixed=" AS IDENTITY "/>

<xsd:simpleType name="AsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" AS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AsStaticString" type="ssqml:AsStaticStringType" fixed=" AS "/>

<xsd:simpleType name="AsymmetricStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ASYMMETRIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AsymmetricStaticString" type="ssqml:AsymmetricStaticStringType" fixed=" ASYMMETRIC "/>

<xsd:simpleType name="AtStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" AT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AtStaticString" type="ssqml:AtStaticStringType" fixed=" AT "/>

<xsd:simpleType name="AtomicStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ATOMIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AtomicStaticString" type="ssqml:AtomicStaticStringType" fixed=" ATOMIC "/>

<xsd:simpleType name="AttributesStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ATTRIBUTES "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AttributesStaticString" type="ssqml:AttributesStaticStringType" fixed=" ATTRIBUTES "/>

<xsd:simpleType name="AuthorizationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" AUTHORIZATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AuthorizationStaticString" type="ssqml:AuthorizationStaticStringType" fixed=" AUTHORIZATION "/>

<xsd:simpleType name="Base64StaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BASE64 "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Base64StaticString" type="ssqml:Base64StaticStringType" fixed=" BASE64 "/>

<xsd:simpleType name="BeginStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BEGIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BeginStaticString" type="ssqml:BeginStaticStringType" fixed=" BEGIN "/>

<xsd:simpleType name="BeginAtomicStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BEGIN ATOMIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BeginAtomicStaticString" type="ssqml:BeginAtomicStaticStringType" fixed=" BEGIN ATOMIC "/>

<xsd:simpleType name="BetweenStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BETWEEN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BetweenStaticString" type="ssqml:BetweenStaticStringType" fixed=" BETWEEN "/>

<xsd:simpleType name="BigintStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BIGINT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BigintStaticString" type="ssqml:BigintStaticStringType" fixed=" BIGINT "/>

<xsd:simpleType name="BinaryLargeObjectStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BINARY LARGE OBJECT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BinaryLargeObjectStaticString" type="ssqml:BinaryLargeObjectStaticStringType" fixed=" BINARY LARGE OBJECT "/>

<xsd:simpleType name="BlobStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BLOB "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BlobStaticString" type="ssqml:BlobStaticStringType" fixed=" BLOB "/>

<xsd:simpleType name="BooleanStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BOOLEAN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BooleanStaticString" type="ssqml:BooleanStaticStringType" fixed=" BOOLEAN "/>

<xsd:simpleType name="BreadthFirstByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BREADTH FIRST BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="BreadthFirstByStaticString" type="ssqml:BreadthFirstByStaticStringType" fixed=" BREADTH FIRST BY "/>

<xsd:simpleType name="ByDefaultStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BY DEFAULT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ByDefaultStaticString" type="ssqml:ByDefaultStaticStringType" fixed=" BY DEFAULT "/>

<xsd:simpleType name="ByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ByStaticString" type="ssqml:ByStaticStringType" fixed=" BY "/>

<xsd:simpleType name="CallStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CALL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CallStaticString" type="ssqml:CallStaticStringType" fixed=" CALL "/>

<xsd:simpleType name="CardinalityStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CARDINALITY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CardinalityStaticString" type="ssqml:CardinalityStaticStringType" fixed=" CARDINALITY "/>

<xsd:simpleType name="CaseStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CASE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CaseStaticString" type="ssqml:CaseStaticStringType" fixed=" CASE "/>

<xsd:simpleType name="CastFromStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CAST FROM "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CastFromStaticString" type="ssqml:CastFromStaticStringType" fixed=" CAST FROM "/>

<xsd:simpleType name="CastStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CAST "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CastStaticString" type="ssqml:CastStaticStringType" fixed=" CAST "/>

<xsd:simpleType name="CatalogStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CATALOG "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CatalogStaticString" type="ssqml:CatalogStaticStringType" fixed=" CATALOG "/>

<xsd:simpleType name="CeilStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CEIL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CeilStaticString" type="ssqml:CeilStaticStringType" fixed=" CEIL "/>

<xsd:simpleType name="CeilingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CEILING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CeilingStaticString" type="ssqml:CeilingStaticStringType" fixed=" CEILING "/>

<xsd:simpleType name="ChainStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHAIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ChainStaticString" type="ssqml:ChainStaticStringType" fixed=" CHAIN "/>

<xsd:simpleType name="CharLargeObjectStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHAR LARGE OBJECT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CharLargeObjectStaticString" type="ssqml:CharLargeObjectStaticStringType" fixed=" CHAR LARGE OBJECT "/>

<xsd:simpleType name="CharStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHAR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CharStaticString" type="ssqml:CharStaticStringType" fixed=" CHAR "/>

<xsd:simpleType name="CharVaryingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHAR VARYING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CharVaryingStaticString" type="ssqml:CharVaryingStaticStringType" fixed=" CHAR VARYING "/>

<xsd:simpleType name="Char_lengthStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHAR_LENGTH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Char_lengthStaticString" type="ssqml:Char_lengthStaticStringType" fixed=" CHAR_LENGTH "/>

<xsd:simpleType name="CharacterLargeObjectStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHARACTER LARGE OBJECT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CharacterLargeObjectStaticString" type="ssqml:CharacterLargeObjectStaticStringType" fixed=" CHARACTER LARGE OBJECT "/>

<xsd:simpleType name="CharacterSetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHARACTER SET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CharacterSetStaticString" type="ssqml:CharacterSetStaticStringType" fixed=" CHARACTER SET "/>

<xsd:simpleType name="CharacterStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHARACTER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CharacterStaticString" type="ssqml:CharacterStaticStringType" fixed=" CHARACTER "/>

<xsd:simpleType name="CharacterVaryingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHARACTER VARYING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CharacterVaryingStaticString" type="ssqml:CharacterVaryingStaticStringType" fixed=" CHARACTER VARYING "/>

<xsd:simpleType name="Character_lengthStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHARACTER_LENGTH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Character_lengthStaticString" type="ssqml:Character_lengthStaticStringType" fixed=" CHARACTER_LENGTH "/>

<xsd:simpleType name="CheckOptionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHECK OPTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CheckOptionStaticString" type="ssqml:CheckOptionStaticStringType" fixed=" CHECK OPTION "/>

<xsd:simpleType name="CheckStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHECK "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CheckStaticString" type="ssqml:CheckStaticStringType" fixed=" CHECK "/>

<xsd:simpleType name="CheckedStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CHECKED "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CheckedStaticString" type="ssqml:CheckedStaticStringType" fixed=" CHECKED "/>

<xsd:simpleType name="ClobStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CLOB "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ClobStaticString" type="ssqml:ClobStaticStringType" fixed=" CLOB "/>

<xsd:simpleType name="CloseStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CLOSE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CloseStaticString" type="ssqml:CloseStaticStringType" fixed=" CLOSE "/>

<xsd:simpleType name="CoalesceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" COALESCE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CoalesceStaticString" type="ssqml:CoalesceStaticStringType" fixed=" COALESCE "/>

<xsd:simpleType name="CollateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" COLLATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CollateStaticString" type="ssqml:CollateStaticStringType" fixed=" COLLATE "/>

<xsd:simpleType name="CollationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" COLLATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CollationStaticString" type="ssqml:CollationStaticStringType" fixed=" COLLATION "/>

<xsd:simpleType name="ColumnStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" COLUMN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ColumnStaticString" type="ssqml:ColumnStaticStringType" fixed=" COLUMN "/>

<xsd:simpleType name="ColumnsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" COLUMNS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ColumnsStaticString" type="ssqml:ColumnsStaticStringType" fixed=" COLUMNS "/>

<xsd:simpleType name="CommitStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" COMMIT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CommitStaticString" type="ssqml:CommitStaticStringType" fixed=" COMMIT "/>

<xsd:simpleType name="ConditionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CONDITION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ConditionStaticString" type="ssqml:ConditionStaticStringType" fixed=" CONDITION "/>

<xsd:simpleType name="ConnectToStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CONNECT TO "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ConnectToStaticString" type="ssqml:ConnectToStaticStringType" fixed=" CONNECT TO "/>

<xsd:simpleType name="ConstraintStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CONSTRAINT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ConstraintStaticString" type="ssqml:ConstraintStaticStringType" fixed=" CONSTRAINT "/>

<xsd:simpleType name="ConstructorStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CONSTRUCTOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ConstructorStaticString" type="ssqml:ConstructorStaticStringType" fixed=" CONSTRUCTOR "/>

<xsd:simpleType name="ContentStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CONTENT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ContentStaticString" type="ssqml:ContentStaticStringType" fixed=" CONTENT "/>

<xsd:simpleType name="ConvertStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CONVERT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ConvertStaticString" type="ssqml:ConvertStaticStringType" fixed=" CONVERT "/>

<xsd:simpleType name="CorrespondingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CORRESPONDING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CorrespondingStaticString" type="ssqml:CorrespondingStaticStringType" fixed=" CORRESPONDING "/>

<xsd:simpleType name="CountStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" COUNT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CountStaticString" type="ssqml:CountStaticStringType" fixed=" COUNT "/>

<xsd:simpleType name="CreateAssertionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE ASSERTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateAssertionStaticString" type="ssqml:CreateAssertionStaticStringType" fixed=" CREATE ASSERTION "/>

<xsd:simpleType name="CreateCastStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE CAST "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateCastStaticString" type="ssqml:CreateCastStaticStringType" fixed=" CREATE CAST "/>

<xsd:simpleType name="CreateCharacterSetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE CHARACTER SET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateCharacterSetStaticString" type="ssqml:CreateCharacterSetStaticStringType" fixed=" CREATE CHARACTER SET "/>

<xsd:simpleType name="CreateCollationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE COLLATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateCollationStaticString" type="ssqml:CreateCollationStaticStringType" fixed=" CREATE COLLATION "/>

<xsd:simpleType name="CreateDomainStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE DOMAIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateDomainStaticString" type="ssqml:CreateDomainStaticStringType" fixed=" CREATE DOMAIN "/>

<xsd:simpleType name="CreateModuleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE MODULE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateModuleStaticString" type="ssqml:CreateModuleStaticStringType" fixed=" CREATE MODULE "/>

<xsd:simpleType name="CreateOrderingForStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE ORDERING FOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateOrderingForStaticString" type="ssqml:CreateOrderingForStaticStringType" fixed=" CREATE ORDERING FOR "/>

<xsd:simpleType name="CreateRoleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE ROLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateRoleStaticString" type="ssqml:CreateRoleStaticStringType" fixed=" CREATE ROLE "/>

<xsd:simpleType name="CreateSchemaStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE SCHEMA "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateSchemaStaticString" type="ssqml:CreateSchemaStaticStringType" fixed=" CREATE SCHEMA "/>

<xsd:simpleType name="CreateSequenceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE SEQUENCE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateSequenceStaticString" type="ssqml:CreateSequenceStaticStringType" fixed=" CREATE SEQUENCE "/>

<xsd:simpleType name="CreateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateStaticString" type="ssqml:CreateStaticStringType" fixed=" CREATE "/>

<xsd:simpleType name="CreateTranslationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE TRANSLATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateTranslationStaticString" type="ssqml:CreateTranslationStaticStringType" fixed=" CREATE TRANSLATION "/>

<xsd:simpleType name="CreateTriggerStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE TRIGGER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateTriggerStaticString" type="ssqml:CreateTriggerStaticStringType" fixed=" CREATE TRIGGER "/>

<xsd:simpleType name="CreateTypeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CREATE TYPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CreateTypeStaticString" type="ssqml:CreateTypeStaticStringType" fixed=" CREATE TYPE "/>

<xsd:simpleType name="CrossJoinStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CROSS JOIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CrossJoinStaticString" type="ssqml:CrossJoinStaticStringType" fixed=" CROSS JOIN "/>

<xsd:simpleType name="CubeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CUBE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CubeStaticString" type="ssqml:CubeStaticStringType" fixed=" CUBE "/>

<xsd:simpleType name="CurrentRowStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT ROW "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CurrentRowStaticString" type="ssqml:CurrentRowStaticStringType" fixed=" CURRENT ROW "/>

<xsd:simpleType name="CurrentStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CurrentStaticString" type="ssqml:CurrentStaticStringType" fixed=" CURRENT "/>

<xsd:simpleType name="Current_collationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT_COLLATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Current_collationStaticString" type="ssqml:Current_collationStaticStringType" fixed=" CURRENT_COLLATION "/>

<xsd:simpleType name="Current_dateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT_DATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Current_dateStaticString" type="ssqml:Current_dateStaticStringType" fixed=" CURRENT_DATE "/>

<xsd:simpleType name="Current_default_transform_groupStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT_DEFAULT_TRANSFORM_GROUP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Current_default_transform_groupStaticString" type="ssqml:Current_default_transform_groupStaticStringType" fixed=" CURRENT_DEFAULT_TRANSFORM_GROUP "/>

<xsd:simpleType name="Current_pathStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT_PATH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Current_pathStaticString" type="ssqml:Current_pathStaticStringType" fixed=" CURRENT_PATH "/>

<xsd:simpleType name="Current_roleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT_ROLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Current_roleStaticString" type="ssqml:Current_roleStaticStringType" fixed=" CURRENT_ROLE "/>

<xsd:simpleType name="Current_timeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT_TIME "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Current_timeStaticString" type="ssqml:Current_timeStaticStringType" fixed=" CURRENT_TIME "/>

<xsd:simpleType name="Current_timestampStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT_TIMESTAMP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Current_timestampStaticString" type="ssqml:Current_timestampStaticStringType" fixed=" CURRENT_TIMESTAMP "/>

<xsd:simpleType name="Current_transform_group_for_typeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT_TRANSFORM_GROUP_FOR_TYPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Current_transform_group_for_typeStaticString" type="ssqml:Current_transform_group_for_typeStaticStringType" fixed=" CURRENT_TRANSFORM_GROUP_FOR_TYPE "/>

<xsd:simpleType name="Current_userStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURRENT_USER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Current_userStaticString" type="ssqml:Current_userStaticStringType" fixed=" CURRENT_USER "/>

<xsd:simpleType name="CursorStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURSOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CursorStaticString" type="ssqml:CursorStaticStringType" fixed=" CURSOR "/>

<xsd:simpleType name="CursorForStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CURSOR FOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CursorForStaticString" type="ssqml:CursorForStaticStringType" fixed=" CURSOR FOR "/>

<xsd:simpleType name="CycleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" CYCLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="CycleStaticString" type="ssqml:CycleStaticStringType" fixed=" CYCLE "/>

<xsd:simpleType name="DateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DateStaticString" type="ssqml:DateStaticStringType" fixed=" DATE "/>

<xsd:simpleType name="DeallocatePrepareStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEALLOCATE PREPARE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DeallocatePrepareStaticString" type="ssqml:DeallocatePrepareStaticStringType" fixed=" DEALLOCATE PREPARE "/>

<xsd:simpleType name="DeallocateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEALLOCATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DeallocateStaticString" type="ssqml:DeallocateStaticStringType" fixed=" DEALLOCATE "/>

<xsd:simpleType name="DecStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DecStaticString" type="ssqml:DecStaticStringType" fixed=" DEC "/>

<xsd:simpleType name="DecimalStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DECIMAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DecimalStaticString" type="ssqml:DecimalStaticStringType" fixed=" DECIMAL "/>

<xsd:simpleType name="DeclareLocalTemporaryTableStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DECLARE LOCAL TEMPORARY TABLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DeclareLocalTemporaryTableStaticString" type="ssqml:DeclareLocalTemporaryTableStaticStringType" fixed=" DECLARE LOCAL TEMPORARY TABLE "/>

<xsd:simpleType name="DeclareStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DECLARE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DeclareStaticString" type="ssqml:DeclareStaticStringType" fixed=" DECLARE "/>

<xsd:simpleType name="DefaultCharacterSetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEFAULT CHARACTER SET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DefaultCharacterSetStaticString" type="ssqml:DefaultCharacterSetStaticStringType" fixed=" DEFAULT CHARACTER SET "/>

<xsd:simpleType name="DefaultStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEFAULT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DefaultStaticString" type="ssqml:DefaultStaticStringType" fixed=" DEFAULT "/>

<xsd:simpleType name="DefaultTransformGroupStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEFAULT TRANSFORM GROUP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DefaultTransformGroupStaticString" type="ssqml:DefaultTransformGroupStaticStringType" fixed=" DEFAULT TRANSFORM GROUP "/>

<xsd:simpleType name="DeferrableStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEFERRABLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DeferrableStaticString" type="ssqml:DeferrableStaticStringType" fixed=" DEFERRABLE "/>

<xsd:simpleType name="DeferredStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEFERRED "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DeferredStaticString" type="ssqml:DeferredStaticStringType" fixed=" DEFERRED "/>

<xsd:simpleType name="DeleteFromStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DELETE FROM  "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DeleteFromStaticString" type="ssqml:DeleteFromStaticStringType" fixed=" DELETE FROM  "/>

<xsd:simpleType name="DeleteStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DELETE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DeleteStaticString" type="ssqml:DeleteStaticStringType" fixed=" DELETE "/>

<xsd:simpleType name="DepthFirstByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEPTH FIRST BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DepthFirstByStaticString" type="ssqml:DepthFirstByStaticStringType" fixed=" DEPTH FIRST BY "/>

<xsd:simpleType name="DerefStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DEREF "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DerefStaticString" type="ssqml:DerefStaticStringType" fixed=" DEREF "/>

<xsd:simpleType name="DescribeInputStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DESCRIBE INPUT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DescribeInputStaticString" type="ssqml:DescribeInputStaticStringType" fixed=" DESCRIBE INPUT "/>

<xsd:simpleType name="DescribeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DESCRIBE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DescribeStaticString" type="ssqml:DescribeStaticStringType" fixed=" DESCRIBE "/>

<xsd:simpleType name="DescriptorStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DESCRIPTOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DescriptorStaticString" type="ssqml:DescriptorStaticStringType" fixed=" DESCRIPTOR "/>

<xsd:simpleType name="DiagnosticsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DIAGNOSTICS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DiagnosticsStaticString" type="ssqml:DiagnosticsStaticStringType" fixed=" DIAGNOSTICS "/>

<xsd:simpleType name="DiagnosticsSizeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DIAGNOSTICS SIZE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DiagnosticsSizeStaticString" type="ssqml:DiagnosticsSizeStaticStringType" fixed=" DIAGNOSTICS SIZE "/>

<xsd:simpleType name="DisconnectStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DISCONNECT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DisconnectStaticString" type="ssqml:DisconnectStaticStringType" fixed=" DISCONNECT "/>

<xsd:simpleType name="DispatchClauseType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" STATIC DISPATCH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DispatchClause" type="ssqml:DispatchClauseType" fixed=" STATIC DISPATCH "/>

<xsd:simpleType name="DistinctAsSourceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DISTINCT AS SOURCE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DistinctAsSourceStaticString" type="ssqml:DistinctAsSourceStaticStringType" fixed=" DISTINCT AS SOURCE "/>

<xsd:simpleType name="DistinctStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DISTINCT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DistinctStaticString" type="ssqml:DistinctStaticStringType" fixed=" DISTINCT "/>

<xsd:simpleType name="DoStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DO "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DoStaticString" type="ssqml:DoStaticStringType" fixed=" DO "/>

<xsd:simpleType name="DocumentStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DOCUMENT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DocumentStaticString" type="ssqml:DocumentStaticStringType" fixed=" DOCUMENT "/>

<xsd:simpleType name="DomainStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DOMAIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DomainStaticString" type="ssqml:DomainStaticStringType" fixed=" DOMAIN "/>

<xsd:simpleType name="DoublePrecisionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DOUBLE PRECISION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DoublePrecisionStaticString" type="ssqml:DoublePrecisionStaticStringType" fixed=" DOUBLE PRECISION "/>

<xsd:simpleType name="DropAssertionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP ASSERTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropAssertionStaticString" type="ssqml:DropAssertionStaticStringType" fixed=" DROP ASSERTION "/>

<xsd:simpleType name="DropAttributeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP ATTRIBUTE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropAttributeStaticString" type="ssqml:DropAttributeStaticStringType" fixed=" DROP ATTRIBUTE "/>

<xsd:simpleType name="DropCastStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP CAST "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropCastStaticString" type="ssqml:DropCastStaticStringType" fixed=" DROP CAST "/>

<xsd:simpleType name="DropCharacterSetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP CHARACTER SET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropCharacterSetStaticString" type="ssqml:DropCharacterSetStaticStringType" fixed=" DROP CHARACTER SET "/>

<xsd:simpleType name="DropCollationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP COLLATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropCollationStaticString" type="ssqml:DropCollationStaticStringType" fixed=" DROP COLLATION "/>

<xsd:simpleType name="DropConstraintStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP CONSTRAINT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropConstraintStaticString" type="ssqml:DropConstraintStaticStringType" fixed=" DROP CONSTRAINT "/>

<xsd:simpleType name="DropDefaultStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP DEFAULT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropDefaultStaticString" type="ssqml:DropDefaultStaticStringType" fixed=" DROP DEFAULT "/>

<xsd:simpleType name="DropDomainStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP DOMAIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropDomainStaticString" type="ssqml:DropDomainStaticStringType" fixed=" DROP DOMAIN "/>

<xsd:simpleType name="DropModuleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP MODULE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropModuleStaticString" type="ssqml:DropModuleStaticStringType" fixed=" DROP MODULE "/>

<xsd:simpleType name="DropOrderingForStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP ORDERING FOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropOrderingForStaticString" type="ssqml:DropOrderingForStaticStringType" fixed=" DROP ORDERING FOR "/>

<xsd:simpleType name="DropRoleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP ROLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropRoleStaticString" type="ssqml:DropRoleStaticStringType" fixed=" DROP ROLE "/>

<xsd:simpleType name="DropSchemaStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP SCHEMA "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropSchemaStaticString" type="ssqml:DropSchemaStaticStringType" fixed=" DROP SCHEMA "/>

<xsd:simpleType name="DropScopeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP SCOPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropScopeStaticString" type="ssqml:DropScopeStaticStringType" fixed=" DROP SCOPE "/>

<xsd:simpleType name="DropSequenceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP SEQUENCE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropSequenceStaticString" type="ssqml:DropSequenceStaticStringType" fixed=" DROP SEQUENCE "/>

<xsd:simpleType name="DropStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropStaticString" type="ssqml:DropStaticStringType" fixed=" DROP "/>

<xsd:simpleType name="DropTableStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP TABLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropTableStaticString" type="ssqml:DropTableStaticStringType" fixed=" DROP TABLE "/>

<xsd:simpleType name="DropTranslationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP TRANSLATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropTranslationStaticString" type="ssqml:DropTranslationStaticStringType" fixed=" DROP TRANSLATION "/>

<xsd:simpleType name="DropTriggerStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP TRIGGER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropTriggerStaticString" type="ssqml:DropTriggerStaticStringType" fixed=" DROP TRIGGER "/>

<xsd:simpleType name="DropTypeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP TYPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropTypeStaticString" type="ssqml:DropTypeStaticStringType" fixed=" DROP TYPE "/>

<xsd:simpleType name="DropViewStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DROP VIEW "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DropViewStaticString" type="ssqml:DropViewStaticStringType" fixed=" DROP VIEW "/>

<xsd:simpleType name="DynamicResultSetsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" DYNAMIC RESULT SETS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DynamicResultSetsStaticString" type="ssqml:DynamicResultSetsStaticStringType" fixed=" DYNAMIC RESULT SETS "/>

<xsd:simpleType name="EStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" E "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EStaticString" type="ssqml:EStaticStringType" fixed=" E "/>

<xsd:simpleType name="ElementStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ELEMENT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ElementStaticString" type="ssqml:ElementStaticStringType" fixed=" ELEMENT "/>

<xsd:simpleType name="ElseStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ELSE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ElseStaticString" type="ssqml:ElseStaticStringType" fixed=" ELSE "/>

<xsd:simpleType name="ElseifStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ELSEIF "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ElseifStaticString" type="ssqml:ElseifStaticStringType" fixed=" ELSEIF "/>

<xsd:simpleType name="EncodingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ENCODING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EncodingStaticString" type="ssqml:EncodingStaticStringType" fixed=" ENCODING "/>

<xsd:simpleType name="EndStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" END "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EndStaticString" type="ssqml:EndStaticStringType" fixed=" END "/>

<xsd:simpleType name="EndCaseStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" END CASE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EndCaseStaticString" type="ssqml:EndCaseStaticStringType" fixed=" END CASE "/>

<xsd:simpleType name="EndForStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" END FOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EndForStaticString" type="ssqml:EndForStaticStringType" fixed=" END FOR "/>

<xsd:simpleType name="EndIfStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" END IF "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EndIfStaticString" type="ssqml:EndIfStaticStringType" fixed=" END IF "/>

<xsd:simpleType name="EndLoopStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" END LOOP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EndLoopStaticString" type="ssqml:EndLoopStaticStringType" fixed=" END LOOP "/>

<xsd:simpleType name="EndModuleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" END MODULE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EndModuleStaticString" type="ssqml:EndModuleStaticStringType" fixed=" END MODULE "/>

<xsd:simpleType name="EndRepeatStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" END REPEAT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EndRepeatStaticString" type="ssqml:EndRepeatStaticStringType" fixed=" END REPEAT "/>

<xsd:simpleType name="EndWhileStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" END WHILE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EndWhileStaticString" type="ssqml:EndWhileStaticStringType" fixed=" END WHILE "/>

<xsd:simpleType name="EqualsOnlyByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" EQUALS ONLY BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EqualsOnlyByStaticString" type="ssqml:EqualsOnlyByStaticStringType" fixed=" EQUALS ONLY BY "/>

<xsd:simpleType name="EscapeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ESCAPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="EscapeStaticString" type="ssqml:EscapeStaticStringType" fixed=" ESCAPE "/>

<xsd:simpleType name="ExceptStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" EXCEPT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ExceptStaticString" type="ssqml:ExceptStaticStringType" fixed=" EXCEPT "/>

<xsd:simpleType name="ExceptionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" EXCEPTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ExceptionStaticString" type="ssqml:ExceptionStaticStringType" fixed=" EXCEPTION "/>

<xsd:simpleType name="ExecuteImmediateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" EXECUTE IMMEDIATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ExecuteImmediateStaticString" type="ssqml:ExecuteImmediateStaticStringType" fixed=" EXECUTE IMMEDIATE "/>

<xsd:simpleType name="ExecuteStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" EXECUTE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ExecuteStaticString" type="ssqml:ExecuteStaticStringType" fixed=" EXECUTE "/>

<xsd:simpleType name="ExistsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" EXISTS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ExistsStaticString" type="ssqml:ExistsStaticStringType" fixed=" EXISTS "/>

<xsd:simpleType name="ExpStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" EXP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ExpStaticString" type="ssqml:ExpStaticStringType" fixed=" EXP "/>

<xsd:simpleType name="ExternalStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" EXTERNAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ExternalStaticString" type="ssqml:ExternalStaticStringType" fixed=" EXTERNAL "/>

<xsd:simpleType name="ExtractStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" EXTRACT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ExtractStaticString" type="ssqml:ExtractStaticStringType" fixed=" EXTRACT "/>

<xsd:simpleType name="FetchStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FETCH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FetchStaticString" type="ssqml:FetchStaticStringType" fixed=" FETCH "/>

<xsd:simpleType name="FilterStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FILTER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FilterStaticString" type="ssqml:FilterStaticStringType" fixed=" FILTER "/>

<xsd:simpleType name="FirstStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FIRST "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FirstStaticString" type="ssqml:FirstStaticStringType" fixed=" FIRST "/>

<xsd:simpleType name="FloatStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FLOAT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FloatStaticString" type="ssqml:FloatStaticStringType" fixed=" FLOAT "/>

<xsd:simpleType name="FloorStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FLOOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FloorStaticString" type="ssqml:FloorStaticStringType" fixed=" FLOOR "/>

<xsd:simpleType name="FollowingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FOLLOWING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FollowingStaticString" type="ssqml:FollowingStaticStringType" fixed=" FOLLOWING "/>

<xsd:simpleType name="ForEachStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FOR EACH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ForEachStaticString" type="ssqml:ForEachStaticStringType" fixed=" FOR EACH "/>

<xsd:simpleType name="ForOrdinalityStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FOR ORDINALITY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ForOrdinalityStaticString" type="ssqml:ForOrdinalityStaticStringType" fixed=" FOR ORDINALITY "/>

<xsd:simpleType name="ForProcedureStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FOR PROCEDURE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ForProcedureStaticString" type="ssqml:ForProcedureStaticStringType" fixed=" FOR PROCEDURE "/>

<xsd:simpleType name="ForStaticStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FOR STATIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ForStaticStaticString" type="ssqml:ForStaticStaticStringType" fixed=" FOR STATIC "/>

<xsd:simpleType name="ForStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ForStaticString" type="ssqml:ForStaticStringType" fixed=" FOR "/>

<xsd:simpleType name="ForTypeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FOR TYPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ForTypeStaticString" type="ssqml:ForTypeStaticStringType" fixed=" FOR TYPE "/>

<xsd:simpleType name="ForeignKeyStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FOREIGN KEY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ForeignKeyStaticString" type="ssqml:ForeignKeyStaticStringType" fixed=" FOREIGN KEY "/>

<xsd:simpleType name="FreeLocatorStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FREE LOCATOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FreeLocatorStaticString" type="ssqml:FreeLocatorStaticStringType" fixed=" FREE LOCATOR "/>

<xsd:simpleType name="FromSqlWithStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FROM sql WITH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FromSqlWithStaticString" type="ssqml:FromSqlWithStaticStringType" fixed=" FROM sql WITH "/>

<xsd:simpleType name="FromStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FROM "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FromStaticString" type="ssqml:FromStaticStringType" fixed=" FROM "/>

<xsd:simpleType name="FullStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FULL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FullStaticString" type="ssqml:FullStaticStringType" fixed=" FULL "/>

<xsd:simpleType name="FunctionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" FUNCTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="FunctionStaticString" type="ssqml:FunctionStaticStringType" fixed=" FUNCTION "/>

<xsd:simpleType name="GeneratedStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" GENERATED "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GeneratedStaticString" type="ssqml:GeneratedStaticStringType" fixed=" GENERATED "/>

<xsd:simpleType name="GetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" GET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GetStaticString" type="ssqml:GetStaticStringType" fixed=" GET "/>

<xsd:simpleType name="GetDiagnosticsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" GET DIAGNOSTICS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GetDiagnosticsStaticString" type="ssqml:GetDiagnosticsStaticStringType" fixed=" GET DIAGNOSTICS "/>

<xsd:simpleType name="GrantStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" GRANT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GrantStaticString" type="ssqml:GrantStaticStringType" fixed=" GRANT "/>

<xsd:simpleType name="GrantedByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" GRANTED BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GrantedByStaticString" type="ssqml:GrantedByStaticStringType" fixed=" GRANTED BY "/>

<xsd:simpleType name="GroupByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" GROUP BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GroupByStaticString" type="ssqml:GroupByStaticStringType" fixed=" GROUP BY "/>

<xsd:simpleType name="GroupingSetsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" GROUPING SETS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GroupingSetsStaticString" type="ssqml:GroupingSetsStaticStringType" fixed=" GROUPING SETS "/>

<xsd:simpleType name="GroupingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" GROUPING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GroupingStaticString" type="ssqml:GroupingStaticStringType" fixed=" GROUPING "/>

<xsd:simpleType name="HandlerForStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" HANDLER FOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="HandlerForStaticString" type="ssqml:HandlerForStaticStringType" fixed=" HANDLER FOR "/>

<xsd:simpleType name="HavingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" HAVING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="HavingStaticString" type="ssqml:HavingStaticStringType" fixed=" HAVING "/>

<xsd:simpleType name="HexStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" HEX "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="HexStaticString" type="ssqml:HexStaticStringType" fixed=" HEX "/>

<xsd:simpleType name="HoldLocatorStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" HOLD LOCATOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="HoldLocatorStaticString" type="ssqml:HoldLocatorStaticStringType" fixed=" HOLD LOCATOR "/>

<xsd:simpleType name="IdStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ID "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IdStaticString" type="ssqml:IdStaticStringType" fixed=" ID "/>

<xsd:simpleType name="IfStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" IF "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IfStaticString" type="ssqml:IfStaticStringType" fixed=" IF "/>

<xsd:simpleType name="ImmediateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" IMMEDIATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ImmediateStaticString" type="ssqml:ImmediateStaticStringType" fixed=" IMMEDIATE "/>

<xsd:simpleType name="InStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" IN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="InStaticString" type="ssqml:InStaticStringType" fixed=" IN "/>

<xsd:simpleType name="IncrementByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INCREMENT BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IncrementByStaticString" type="ssqml:IncrementByStaticStringType" fixed=" INCREMENT BY "/>

<xsd:simpleType name="IndicatorStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INDICATOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IndicatorStaticString" type="ssqml:IndicatorStaticStringType" fixed=" INDICATOR "/>

<xsd:simpleType name="InnerStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INNER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="InnerStaticString" type="ssqml:InnerStaticStringType" fixed=" INNER "/>

<xsd:simpleType name="InsertIntoStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INSERT INTO "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="InsertIntoStaticString" type="ssqml:InsertIntoStaticStringType" fixed=" INSERT INTO "/>

<xsd:simpleType name="InsertStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INSERT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="InsertStaticString" type="ssqml:InsertStaticStringType" fixed=" INSERT "/>

<xsd:simpleType name="InstanceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INSTANCE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="InstanceStaticString" type="ssqml:InstanceStaticStringType" fixed=" INSTANCE "/>

<xsd:simpleType name="IntStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IntStaticString" type="ssqml:IntStaticStringType" fixed=" INT "/>

<xsd:simpleType name="IntegerStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INTEGER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IntegerStaticString" type="ssqml:IntegerStaticStringType" fixed=" INTEGER "/>

<xsd:simpleType name="IntersectStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INTERSECT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IntersectStaticString" type="ssqml:IntersectStaticStringType" fixed=" INTERSECT "/>

<xsd:simpleType name="IntervalStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INTERVAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IntervalStaticString" type="ssqml:IntervalStaticStringType" fixed=" INTERVAL "/>

<xsd:simpleType name="IntoStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" INTO "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IntoStaticString" type="ssqml:IntoStaticStringType" fixed=" INTO "/>

<xsd:simpleType name="IsDistinctFromStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" IS DISTINCT FROM "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IsDistinctFromStaticString" type="ssqml:IsDistinctFromStaticStringType" fixed=" IS DISTINCT FROM "/>

<xsd:simpleType name="IsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" IS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IsStaticString" type="ssqml:IsStaticStringType" fixed=" IS "/>

<xsd:simpleType name="IsolationLevelStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ISOLATION LEVEL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IsolationLevelStaticString" type="ssqml:IsolationLevelStaticStringType" fixed=" ISOLATION LEVEL "/>

<xsd:simpleType name="IterateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ITERATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="IterateStaticString" type="ssqml:IterateStaticStringType" fixed=" ITERATE "/>

<xsd:simpleType name="JoinStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" JOIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="JoinStaticString" type="ssqml:JoinStaticStringType" fixed=" JOIN "/>

<xsd:simpleType name="LastStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LAST "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LastStaticString" type="ssqml:LastStaticStringType" fixed=" LAST "/>

<xsd:simpleType name="LateralStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LATERAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LateralStaticString" type="ssqml:LateralStaticStringType" fixed=" LATERAL "/>

<xsd:simpleType name="LeaveStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LEAVE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LeaveStaticString" type="ssqml:LeaveStaticStringType" fixed=" LEAVE "/>

<xsd:simpleType name="LikeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LIKE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LikeStaticString" type="ssqml:LikeStaticStringType" fixed=" LIKE "/>

<xsd:simpleType name="LnStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LnStaticString" type="ssqml:LnStaticStringType" fixed=" LN "/>

<xsd:simpleType name="LocalStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LOCAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LocalStaticString" type="ssqml:LocalStaticStringType" fixed=" LOCAL "/>

<xsd:simpleType name="LoopStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LOOP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LoopStaticString" type="ssqml:LoopStaticStringType" fixed=" LOOP "/>

<xsd:simpleType name="LocaltimeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LOCALTIME "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LocaltimeStaticString" type="ssqml:LocaltimeStaticStringType" fixed=" LOCALTIME "/>

<xsd:simpleType name="LocaltimestampStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LOCALTIMESTAMP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LocaltimestampStaticString" type="ssqml:LocaltimestampStaticStringType" fixed=" LOCALTIMESTAMP "/>

<xsd:simpleType name="LocationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LOCATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LocationStaticString" type="ssqml:LocationStaticStringType" fixed=" LOCATION "/>

<xsd:simpleType name="LocatorIndicationType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" AS LOCATOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LocatorIndication" type="ssqml:LocatorIndicationType" fixed=" AS LOCATOR "/>

<xsd:simpleType name="LowerStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" LOWER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LowerStaticString" type="ssqml:LowerStaticStringType" fixed=" LOWER "/>

<xsd:simpleType name="MapWithStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MAP WITH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MapWithStaticString" type="ssqml:MapWithStaticStringType" fixed=" MAP WITH "/>

<xsd:simpleType name="MatchStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MATCH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MatchStaticString" type="ssqml:MatchStaticStringType" fixed=" MATCH "/>

<xsd:simpleType name="MaxvalueStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MAXVALUE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MaxvalueStaticString" type="ssqml:MaxvalueStaticStringType" fixed=" MAXVALUE "/>

<xsd:simpleType name="MemberStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MEMBER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MemberStaticString" type="ssqml:MemberStaticStringType" fixed=" MEMBER "/>

<xsd:simpleType name="MergeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MERGE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MergeStaticString" type="ssqml:MergeStaticStringType" fixed=" MERGE "/>

<xsd:simpleType name="MergeIntoStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MERGE INTO "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MergeIntoStaticString" type="ssqml:MergeIntoStaticStringType" fixed=" MERGE INTO "/>

<xsd:simpleType name="MethodStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" METHOD "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MethodStaticString" type="ssqml:MethodStaticStringType" fixed=" METHOD "/>

<xsd:simpleType name="MinvalueStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MINVALUE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MinvalueStaticString" type="ssqml:MinvalueStaticStringType" fixed=" MINVALUE "/>

<xsd:simpleType name="ModStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MOD "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ModStaticString" type="ssqml:ModStaticStringType" fixed=" MOD "/>

<xsd:simpleType name="ModuleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MODULE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ModuleStaticString" type="ssqml:ModuleStaticStringType" fixed=" MODULE "/>

<xsd:simpleType name="MultisetExceptStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MULTISET EXCEPT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MultisetExceptStaticString" type="ssqml:MultisetExceptStaticStringType" fixed=" MULTISET EXCEPT "/>

<xsd:simpleType name="MultisetIntersectStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MULTISET INTERSECT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MultisetIntersectStaticString" type="ssqml:MultisetIntersectStaticStringType" fixed=" MULTISET INTERSECT "/>

<xsd:simpleType name="MultisetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MULTISET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MultisetStaticString" type="ssqml:MultisetStaticStringType" fixed=" MULTISET "/>

<xsd:simpleType name="MultisetUnionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" MULTISET UNION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MultisetUnionStaticString" type="ssqml:MultisetUnionStaticStringType" fixed=" MULTISET UNION "/>

<xsd:simpleType name="NStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" N "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NStaticString" type="ssqml:NStaticStringType" fixed=" N "/>

<xsd:simpleType name="NameStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NAME "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NameStaticString" type="ssqml:NameStaticStringType" fixed=" NAME "/>

<xsd:simpleType name="NamesAreStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NAMES ARE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NamesAreStaticString" type="ssqml:NamesAreStaticStringType" fixed=" NAMES ARE "/>

<xsd:simpleType name="NamesStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NAMES "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NamesStaticString" type="ssqml:NamesStaticStringType" fixed=" NAMES "/>

<xsd:simpleType name="NamespaceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NAMESPACE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NamespaceStaticString" type="ssqml:NamespaceStaticStringType" fixed=" NAMESPACE "/>

<xsd:simpleType name="NationalCharStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NATIONAL CHAR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NationalCharStaticString" type="ssqml:NationalCharStaticStringType" fixed=" NATIONAL CHAR "/>

<xsd:simpleType name="NationalCharVaryingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NATIONAL CHAR VARYING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NationalCharVaryingStaticString" type="ssqml:NationalCharVaryingStaticStringType" fixed=" NATIONAL CHAR VARYING "/>

<xsd:simpleType name="NationalCharacterLargeObjectStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NATIONAL CHARACTER LARGE OBJECT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NationalCharacterLargeObjectStaticString" type="ssqml:NationalCharacterLargeObjectStaticStringType" fixed=" NATIONAL CHARACTER LARGE OBJECT "/>

<xsd:simpleType name="NationalCharacterStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NATIONAL CHARACTER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NationalCharacterStaticString" type="ssqml:NationalCharacterStaticStringType" fixed=" NATIONAL CHARACTER "/>

<xsd:simpleType name="NationalCharacterVaryingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NATIONAL CHARACTER VARYING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NationalCharacterVaryingStaticString" type="ssqml:NationalCharacterVaryingStaticStringType" fixed=" NATIONAL CHARACTER VARYING "/>

<xsd:simpleType name="NaturalStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NATURAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NaturalStaticString" type="ssqml:NaturalStaticStringType" fixed=" NATURAL "/>

<xsd:simpleType name="NcharLargeObjectStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NCHAR LARGE OBJECT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NcharLargeObjectStaticString" type="ssqml:NcharLargeObjectStaticStringType" fixed=" NCHAR LARGE OBJECT "/>

<xsd:simpleType name="NcharStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NCHAR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NcharStaticString" type="ssqml:NcharStaticStringType" fixed=" NCHAR "/>

<xsd:simpleType name="NcharVaryingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NCHAR VARYING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NcharVaryingStaticString" type="ssqml:NcharVaryingStaticStringType" fixed=" NCHAR VARYING "/>

<xsd:simpleType name="NclobStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NCLOB "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NclobStaticString" type="ssqml:NclobStaticStringType" fixed=" NCLOB "/>

<xsd:simpleType name="NewStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NEW "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NewStaticString" type="ssqml:NewStaticStringType" fixed=" NEW "/>

<xsd:simpleType name="NewTableStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NEW TABLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NewTableStaticString" type="ssqml:NewTableStaticStringType" fixed=" NEW TABLE "/>

<xsd:simpleType name="NextStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NEXT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NextStaticString" type="ssqml:NextStaticStringType" fixed=" NEXT "/>

<xsd:simpleType name="NextValueForStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NEXT VALUE FOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NextValueForStaticString" type="ssqml:NextValueForStaticStringType" fixed=" NEXT VALUE FOR "/>

<xsd:simpleType name="NoDefaultStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NO DEFAULT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NoDefaultStaticString" type="ssqml:NoDefaultStaticStringType" fixed=" NO DEFAULT "/>

<xsd:simpleType name="NoMaxvalueStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NO MAXVALUE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NoMaxvalueStaticString" type="ssqml:NoMaxvalueStaticStringType" fixed=" NO MAXVALUE "/>

<xsd:simpleType name="NoMinvalueStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NO MINVALUE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NoMinvalueStaticString" type="ssqml:NoMinvalueStaticStringType" fixed=" NO MINVALUE "/>

<xsd:simpleType name="NoNamespaceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NO NAMESPACE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NoNamespaceStaticString" type="ssqml:NoNamespaceStaticStringType" fixed=" NO NAMESPACE "/>

<xsd:simpleType name="NoStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NO "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NoStaticString" type="ssqml:NoStaticStringType" fixed=" NO "/>

<xsd:simpleType name="NoneStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NONE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NoneStaticString" type="ssqml:NoneStaticStringType" fixed=" NONE "/>

<xsd:simpleType name="NormalizeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NORMALIZE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NormalizeStaticString" type="ssqml:NormalizeStaticStringType" fixed=" NORMALIZE "/>

<xsd:simpleType name="NormalizedStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NORMALIZED "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NormalizedStaticString" type="ssqml:NormalizedStaticStringType" fixed=" NORMALIZED "/>

<xsd:simpleType name="NotFoundStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NOT FOUND "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NotFoundStaticString" type="ssqml:NotFoundStaticStringType" fixed=" NOT FOUND "/>

<xsd:simpleType name="NotNullStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NOT NULL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NotNullStaticString" type="ssqml:NotNullStaticStringType" fixed=" NOT NULL "/>

<xsd:simpleType name="NotStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NOT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NotStaticString" type="ssqml:NotStaticStringType" fixed=" NOT "/>

<xsd:simpleType name="NullStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NULL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NullStaticString" type="ssqml:NullStaticStringType" fixed=" NULL "/>

<xsd:simpleType name="NullifStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NULLIF "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NullifStaticString" type="ssqml:NullifStaticStringType" fixed=" NULLIF "/>

<xsd:simpleType name="NumericStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" NUMERIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="NumericStaticString" type="ssqml:NumericStaticStringType" fixed=" NUMERIC "/>

<xsd:simpleType name="Octet_lengthStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OCTET_LENGTH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Octet_lengthStaticString" type="ssqml:Octet_lengthStaticStringType" fixed=" OCTET_LENGTH "/>

<xsd:simpleType name="OfStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OF "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OfStaticString" type="ssqml:OfStaticStringType" fixed=" OF "/>

<xsd:simpleType name="OldStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OLD "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OldStaticString" type="ssqml:OldStaticStringType" fixed=" OLD "/>

<xsd:simpleType name="OldTableStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OLD TABLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OldTableStaticString" type="ssqml:OldTableStaticStringType" fixed=" OLD TABLE "/>

<xsd:simpleType name="OnCommitStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ON COMMIT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OnCommitStaticString" type="ssqml:OnCommitStaticStringType" fixed=" ON COMMIT "/>

<xsd:simpleType name="OnDeleteStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ON DELETE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OnDeleteStaticString" type="ssqml:OnDeleteStaticStringType" fixed=" ON DELETE "/>

<xsd:simpleType name="OnStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ON "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OnStaticString" type="ssqml:OnStaticStringType" fixed=" ON "/>

<xsd:simpleType name="OnUpdateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ON UPDATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OnUpdateStaticString" type="ssqml:OnUpdateStaticStringType" fixed=" ON UPDATE "/>

<xsd:simpleType name="OnlyStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ONLY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OnlyStaticString" type="ssqml:OnlyStaticStringType" fixed=" ONLY "/>

<xsd:simpleType name="OpenStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OPEN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OpenStaticString" type="ssqml:OpenStaticStringType" fixed=" OPEN "/>

<xsd:simpleType name="OptionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OPTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OptionStaticString" type="ssqml:OptionStaticStringType" fixed=" OPTION "/>

<xsd:simpleType name="OrStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OrStaticString" type="ssqml:OrStaticStringType" fixed=" OR "/>

<xsd:simpleType name="OrderByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ORDER BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OrderByStaticString" type="ssqml:OrderByStaticStringType" fixed=" ORDER BY "/>

<xsd:simpleType name="OrderFullByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ORDER FULL BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OrderFullByStaticString" type="ssqml:OrderFullByStaticStringType" fixed=" ORDER FULL BY "/>

<xsd:simpleType name="OuterStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OUTER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OuterStaticString" type="ssqml:OuterStaticStringType" fixed=" OUTER "/>

<xsd:simpleType name="OutputStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OUTPUT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OutputStaticString" type="ssqml:OutputStaticStringType" fixed=" OUTPUT "/>

<xsd:simpleType name="OverStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OVER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OverStaticString" type="ssqml:OverStaticStringType" fixed=" OVER "/>

<xsd:simpleType name="OverlapsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OVERLAPS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OverlapsStaticString" type="ssqml:OverlapsStaticStringType" fixed=" OVERLAPS "/>

<xsd:simpleType name="OverlayStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OVERLAY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OverlayStaticString" type="ssqml:OverlayStaticStringType" fixed=" OVERLAY "/>

<xsd:simpleType name="OverridingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" OVERRIDING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="OverridingStaticString" type="ssqml:OverridingStaticStringType" fixed=" OVERRIDING "/>

<xsd:simpleType name="ParameterStyleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PARAMETER STYLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ParameterStyleStaticString" type="ssqml:ParameterStyleStaticStringType" fixed=" PARAMETER STYLE "/>

<xsd:simpleType name="PartialstaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PARTIAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PartialstaticString" type="ssqml:PartialstaticStringType" fixed=" PARTIAL "/>

<xsd:simpleType name="PartitionByStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PARTITION BY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PartitionByStaticString" type="ssqml:PartitionByStaticStringType" fixed=" PARTITION BY "/>

<xsd:simpleType name="PassingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PASSING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PassingStaticString" type="ssqml:PassingStaticStringType" fixed=" PASSING "/>

<xsd:simpleType name="PathStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PATH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PathStaticString" type="ssqml:PathStaticStringType" fixed=" PATH "/>

<xsd:simpleType name="PlacingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PLACING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PlacingStaticString" type="ssqml:PlacingStaticStringType" fixed=" PLACING "/>

<xsd:simpleType name="PositionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" POSITION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PositionStaticString" type="ssqml:PositionStaticStringType" fixed=" POSITION "/>

<xsd:simpleType name="PowerStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" POWER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PowerStaticString" type="ssqml:PowerStaticStringType" fixed=" POWER "/>

<xsd:simpleType name="PrecedingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PRECEDING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PrecedingStaticString" type="ssqml:PrecedingStaticStringType" fixed=" PRECEDING "/>

<xsd:simpleType name="PrepareStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PREPARE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PrepareStaticString" type="ssqml:PrepareStaticStringType" fixed=" PREPARE "/>

<xsd:simpleType name="PreserveStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PRESERVE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PreserveStaticString" type="ssqml:PreserveStaticStringType" fixed=" PRESERVE "/>

<xsd:simpleType name="PriorStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PRIOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PriorStaticString" type="ssqml:PriorStaticStringType" fixed=" PRIOR "/>

<xsd:simpleType name="ProcedureStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PROCEDURE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ProcedureStaticString" type="ssqml:ProcedureStaticStringType" fixed=" PROCEDURE "/>

<xsd:simpleType name="PublicStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" PUBLIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PublicStaticString" type="ssqml:PublicStaticStringType" fixed=" PUBLIC "/>

<xsd:simpleType name="ReadOnlyStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" READ ONLY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReadOnlyStaticString" type="ssqml:ReadOnlyStaticStringType" fixed=" READ ONLY "/>

<xsd:simpleType name="RealStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RealStaticString" type="ssqml:RealStaticStringType" fixed=" REAL "/>

<xsd:simpleType name="RecursiveStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RECURSIVE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RecursiveStaticString" type="ssqml:RecursiveStaticStringType" fixed=" RECURSIVE "/>

<xsd:simpleType name="RefAsSourceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REF AS SOURCE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RefAsSourceStaticString" type="ssqml:RefAsSourceStaticStringType" fixed=" REF AS SOURCE "/>

<xsd:simpleType name="RefFromStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REF FROM "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RefFromStaticString" type="ssqml:RefFromStaticStringType" fixed=" REF FROM "/>

<xsd:simpleType name="RefIsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REF IS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RefIsStaticString" type="ssqml:RefIsStaticStringType" fixed=" REF IS "/>

<xsd:simpleType name="RefIsSystemGeneratedStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REF IS SYSTEM GENERATED "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RefIsSystemGeneratedStaticString" type="ssqml:RefIsSystemGeneratedStaticStringType" fixed=" REF IS SYSTEM GENERATED "/>

<xsd:simpleType name="RefStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REF "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RefStaticString" type="ssqml:RefStaticStringType" fixed=" REF "/>

<xsd:simpleType name="RefUsingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REF USING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RefUsingStaticString" type="ssqml:RefUsingStaticStringType" fixed=" REF USING "/>

<xsd:simpleType name="ReferencesAreStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REFERENCES ARE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReferencesAreStaticString" type="ssqml:ReferencesAreStaticStringType" fixed=" REFERENCES ARE "/>

<xsd:simpleType name="ReferencesStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REFERENCES "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReferencesStaticString" type="ssqml:ReferencesStaticStringType" fixed=" REFERENCES "/>

<xsd:simpleType name="ReferencingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REFERENCING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReferencingStaticString" type="ssqml:ReferencingStaticStringType" fixed=" REFERENCING "/>

<xsd:simpleType name="RelativeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RELATIVE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RelativeStaticString" type="ssqml:RelativeStaticStringType" fixed=" RELATIVE "/>

<xsd:simpleType name="RelativeWithStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RELATIVE WITH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RelativeWithStaticString" type="ssqml:RelativeWithStaticStringType" fixed=" RELATIVE WITH "/>

<xsd:simpleType name="ReleaseSavepointStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RELEASE SAVEPOINT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReleaseSavepointStaticString" type="ssqml:ReleaseSavepointStaticStringType" fixed=" RELEASE SAVEPOINT "/>

<xsd:simpleType name="RepeatStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REPEAT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RepeatStaticString" type="ssqml:RepeatStaticStringType" fixed=" REPEAT "/>

<xsd:simpleType name="RepeatableStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REPEATABLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RepeatableStaticString" type="ssqml:RepeatableStaticStringType" fixed=" REPEATABLE "/>

<xsd:simpleType name="ResignalStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RESIGNAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ResignalStaticString" type="ssqml:ResignalStaticStringType" fixed=" RESIGNAL "/>

<xsd:simpleType name="RestartWithStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RESTART WITH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RestartWithStaticString" type="ssqml:RestartWithStaticStringType" fixed=" RESTART WITH "/>

<xsd:simpleType name="RestrictStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RESTRICT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RestrictStaticString" type="ssqml:RestrictStaticStringType" fixed=" RESTRICT "/>

<xsd:simpleType name="ResultStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RESULT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ResultStaticString" type="ssqml:ResultStaticStringType" fixed=" RESULT "/>

<xsd:simpleType name="ReturnStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RETURN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReturnStaticString" type="ssqml:ReturnStaticStringType" fixed=" RETURN "/>

<xsd:simpleType name="ReturningStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RETURNING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReturningStaticString" type="ssqml:ReturningStaticStringType" fixed=" RETURNING "/>

<xsd:simpleType name="ReturnsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" RETURNS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ReturnsStaticString" type="ssqml:ReturnsStaticStringType" fixed=" RETURNS "/>

<xsd:simpleType name="RevokeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" REVOKE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RevokeStaticString" type="ssqml:RevokeStaticStringType" fixed=" REVOKE "/>

<xsd:simpleType name="RollbackStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ROLLBACK "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RollbackStaticString" type="ssqml:RollbackStaticStringType" fixed=" ROLLBACK "/>

<xsd:simpleType name="RollupStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ROLLUP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RollupStaticString" type="ssqml:RollupStaticStringType" fixed=" ROLLUP "/>

<xsd:simpleType name="RoutineStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ROUTINE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RoutineStaticString" type="ssqml:RoutineStaticStringType" fixed=" ROUTINE "/>

<xsd:simpleType name="RowStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ROW "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RowStaticString" type="ssqml:RowStaticStringType" fixed=" ROW "/>

<xsd:simpleType name="Row_numberStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ROW_NUMBER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Row_numberStaticString" type="ssqml:Row_numberStaticStringType" fixed=" ROW_NUMBER "/>

<xsd:simpleType name="RowsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" ROWS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="RowsStaticString" type="ssqml:RowsStaticStringType" fixed=" ROWS "/>

<xsd:simpleType name="SavepointStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SAVEPOINT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SavepointStaticString" type="ssqml:SavepointStaticStringType" fixed=" SAVEPOINT "/>

<xsd:simpleType name="SchemaStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SCHEMA "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SchemaStaticString" type="ssqml:SchemaStaticStringType" fixed=" SCHEMA "/>

<xsd:simpleType name="ScopeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SCOPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ScopeStaticString" type="ssqml:ScopeStaticStringType" fixed=" SCOPE "/>

<xsd:simpleType name="SearchStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SEARCH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SearchStaticString" type="ssqml:SearchStaticStringType" fixed=" SEARCH "/>

<xsd:simpleType name="SecondStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SECOND "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SecondStaticString" type="ssqml:SecondStaticStringType" fixed=" SECOND "/>

<xsd:simpleType name="SelectStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SELECT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SelectStaticString" type="ssqml:SelectStaticStringType" fixed=" SELECT "/>
<xsd:element name="SelectStaticString2" type="ssqml:SelectStaticStringType" fixed=" SELECT "/>

<xsd:simpleType name="SelfAsLocatorStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SELF AS LOCATOR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SelfAsLocatorStaticString" type="ssqml:SelfAsLocatorStaticStringType" fixed=" SELF AS LOCATOR "/>

<xsd:simpleType name="SelfAsResultStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SELF AS RESULT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SelfAsResultStaticString" type="ssqml:SelfAsResultStaticStringType" fixed=" SELF AS RESULT "/>

<xsd:simpleType name="SequenceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SEQUENCE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SequenceStaticString" type="ssqml:SequenceStaticStringType" fixed=" SEQUENCE "/>

<xsd:simpleType name="Session_userStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SESSION_USER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Session_userStaticString" type="ssqml:Session_userStaticStringType" fixed=" SESSION_USER "/>

<xsd:simpleType name="SetCollationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SET COLLATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetCollationStaticString" type="ssqml:SetCollationStaticStringType" fixed=" SET COLLATION "/>

<xsd:simpleType name="SetConnectionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SET CONNECTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetConnectionStaticString" type="ssqml:SetConnectionStaticStringType" fixed=" SET CONNECTION "/>

<xsd:simpleType name="SetConstrainstStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SET CONSTRAINTS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetConstrainstStaticString" type="ssqml:SetConstrainstStaticStringType" fixed=" SET CONSTRAINTS "/>

<xsd:simpleType name="SetNoCollationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SET NO COLLATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetNoCollationStaticString" type="ssqml:SetNoCollationStaticStringType" fixed=" SET NO COLLATION "/>

<xsd:simpleType name="SetRoleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SET ROLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetRoleStaticString" type="ssqml:SetRoleStaticStringType" fixed=" SET ROLE "/>

<xsd:simpleType name="SetSessionAuthorizationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SET SESSION AUTHORIZATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetSessionAuthorizationStaticString" type="ssqml:SetSessionAuthorizationStaticStringType" fixed=" SET SESSION AUTHORIZATION "/>

<xsd:simpleType name="SetSessionCharacteristicsAsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SET SESSION CHARACTERISTICS AS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetSessionCharacteristicsAsStaticString" type="ssqml:SetSessionCharacteristicsAsStaticStringType" fixed=" SET SESSION CHARACTERISTICS AS "/>

<xsd:simpleType name="SetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetStaticString" type="ssqml:SetStaticStringType" fixed=" SET "/>

<xsd:simpleType name="SetTimeZoneStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SET TIME ZONE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SetTimeZoneStaticString" type="ssqml:SetTimeZoneStaticStringType" fixed=" SET TIME ZONE "/>

<xsd:simpleType name="SignalStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SIGNAL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SignalStaticString" type="ssqml:SignalStaticStringType" fixed=" SIGNAL "/>

<xsd:simpleType name="SimilarStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SIMILAR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SimilarStaticString" type="ssqml:SimilarStaticStringType" fixed=" SIMILAR "/>

<xsd:simpleType name="SimilarToStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SIMILAR TO "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SimilarToStaticString" type="ssqml:SimilarToStaticStringType" fixed=" SIMILAR TO "/>

<xsd:simpleType name="SimpleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SIMPLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SimpleStaticString" type="ssqml:SimpleStaticStringType" fixed=" SIMPLE "/>

<xsd:simpleType name="SmallintStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SMALLINT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SmallintStaticString" type="ssqml:SmallintStaticStringType" fixed=" SMALLINT "/>

<xsd:simpleType name="SourceAsDistinctStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SOURCE AS DISTINCT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SourceAsDistinctStaticString" type="ssqml:SourceAsDistinctStaticStringType" fixed=" SOURCE AS DISTINCT "/>

<xsd:simpleType name="SourceAsRefStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SOURCE AS REF "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SourceAsRefStaticString" type="ssqml:SourceAsRefStaticStringType" fixed=" SOURCE AS REF "/>

<xsd:simpleType name="SpecificMethodStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SPECIFIC METHOD "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SpecificMethodStaticString" type="ssqml:SpecificMethodStaticStringType" fixed=" SPECIFIC METHOD "/>

<xsd:simpleType name="SpecificStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SPECIFIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SpecificStaticString" type="ssqml:SpecificStaticStringType" fixed=" SPECIFIC "/>

<xsd:simpleType name="SpecifictypeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SPECIFICTYPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SpecifictypeStaticString" type="ssqml:SpecifictypeStaticStringType" fixed=" SPECIFICTYPE "/>

<xsd:simpleType name="SqlStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SQL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SqlStaticString" type="ssqml:SqlStaticStringType" fixed=" SQL "/>

<xsd:simpleType name="SqlexceptionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SQLEXCEPTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SqlexceptionStaticString" type="ssqml:SqlexceptionStaticStringType" fixed=" SQLEXCEPTION "/>

<xsd:simpleType name="SqlstateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SQLSTATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SqlstateStaticString" type="ssqml:SqlstateStaticStringType" fixed=" SQLSTATE "/>

<xsd:simpleType name="SqlwarningStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SQLWARNING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SqlwarningStaticString" type="ssqml:SqlwarningStaticStringType" fixed=" SQLWARNING "/>

<xsd:simpleType name="SqrtStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SQRT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SqrtStaticString" type="ssqml:SqrtStaticStringType" fixed=" SQRT "/>

<xsd:simpleType name="StartTransactionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" START TRANSACTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="StartTransactionStaticString" type="ssqml:StartTransactionStaticStringType" fixed=" START TRANSACTION "/>

<xsd:simpleType name="StartWithStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" START WITH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="StartWithStaticString" type="ssqml:StartWithStaticStringType" fixed=" START WITH "/>

<xsd:simpleType name="StateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" STATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="StateStaticString" type="ssqml:StateStaticStringType" fixed=" STATE "/>

<xsd:simpleType name="StatementStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" STATEMENT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="StatementStaticString" type="ssqml:StatementStaticStringType" fixed=" STATEMENT "/>

<xsd:simpleType name="StaticStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" STATIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="StaticStaticString" type="ssqml:StaticStaticStringType" fixed=" STATIC "/>

<xsd:simpleType name="StatusParameterType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" sqlSTATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="StatusParameter" type="ssqml:StatusParameterType" fixed=" sqlSTATE "/>

<xsd:simpleType name="StripStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" STRIP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="StripStaticString" type="ssqml:StripStaticStringType" fixed=" STRIP "/>

<xsd:simpleType name="StructureStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" STRUCTURE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="StructureStaticString" type="ssqml:StructureStaticStringType" fixed=" STRUCTURE "/>

<xsd:simpleType name="SubmultisetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SUBMULTISET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SubmultisetStaticString" type="ssqml:SubmultisetStaticStringType" fixed=" SUBMULTISET "/>

<xsd:simpleType name="SubstringStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SUBSTRING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SubstringStaticString" type="ssqml:SubstringStaticStringType" fixed=" SUBSTRING "/>

<xsd:simpleType name="SymmetricStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SYMMETRIC "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SymmetricStaticString" type="ssqml:SymmetricStaticStringType" fixed=" SYMMETRIC "/>

<xsd:simpleType name="System_userStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" SYSTEM_USER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="System_userStaticString" type="ssqml:System_userStaticStringType" fixed=" SYSTEM_USER "/>

<xsd:simpleType name="TableStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TABLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TableStaticString" type="ssqml:TableStaticStringType" fixed=" TABLE "/>

<xsd:simpleType name="TablesampleStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TABLESAMPLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TablesampleStaticString" type="ssqml:TablesampleStaticStringType" fixed=" TABLESAMPLE "/>

<xsd:simpleType name="TemporaryStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TEMPORARY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TemporaryStaticString" type="ssqml:TemporaryStaticStringType" fixed=" TEMPORARY "/>

<xsd:simpleType name="ThenStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" THEN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ThenStaticString" type="ssqml:ThenStaticStringType" fixed=" THEN "/>

<xsd:simpleType name="TimeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TIME "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TimeStaticString" type="ssqml:TimeStaticStringType" fixed=" TIME "/>

<xsd:simpleType name="TimeZoneStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TIME ZONE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TimeZoneStaticString" type="ssqml:TimeZoneStaticStringType" fixed=" TIME ZONE "/>

<xsd:simpleType name="TimestampStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TIMESTAMP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TimestampStaticString" type="ssqml:TimestampStaticStringType" fixed=" TIMESTAMP "/>

<xsd:simpleType name="ToSavepointStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TO SAVEPOINT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ToSavepointStaticString" type="ssqml:ToSavepointStaticStringType" fixed=" TO SAVEPOINT "/>

<xsd:simpleType name="ToSqlWithStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TO sql WITH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ToSqlWithStaticString" type="ssqml:ToSqlWithStaticStringType" fixed=" TO sql WITH "/>

<xsd:simpleType name="ToStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TO "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ToStaticString" type="ssqml:ToStaticStringType" fixed=" TO "/>

<xsd:simpleType name="TransactionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TRANSACTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TransactionStaticString" type="ssqml:TransactionStaticStringType" fixed=" TRANSACTION "/>

<xsd:simpleType name="TransformGroupForTypeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TRANSFORM GROUP FOR TYPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TransformGroupForTypeStaticString" type="ssqml:TransformGroupForTypeStaticStringType" fixed=" TRANSFORM GROUP FOR TYPE "/>

<xsd:simpleType name="TransformGroupStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TRANSFORM GROUP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TransformGroupStaticString" type="ssqml:TransformGroupStaticStringType" fixed=" TRANSFORM GROUP "/>

<xsd:simpleType name="TransformStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TRANSFORM "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TransformStaticString" type="ssqml:TransformStaticStringType" fixed=" TRANSFORM "/>

<xsd:simpleType name="TransformsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TRANSFORMS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TransformsStaticString" type="ssqml:TransformsStaticStringType" fixed=" TRANSFORMS "/>

<xsd:simpleType name="TranslateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TRANSLATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TranslateStaticString" type="ssqml:TranslateStaticStringType" fixed=" TRANSLATE "/>

<xsd:simpleType name="TranslationStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TRANSLATION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TranslationStaticString" type="ssqml:TranslationStaticStringType" fixed=" TRANSLATION "/>

<xsd:simpleType name="TreatStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TREAT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TreatStaticString" type="ssqml:TreatStaticStringType" fixed=" TREAT "/>

<xsd:simpleType name="TriggerStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TRIGGER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TriggerStaticString" type="ssqml:TriggerStaticStringType" fixed=" TRIGGER "/>

<xsd:simpleType name="TrimStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TRIM "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TrimStaticString" type="ssqml:TrimStaticStringType" fixed=" TRIM "/>

<xsd:simpleType name="TypeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" TYPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="TypeStaticString" type="ssqml:TypeStaticStringType" fixed=" TYPE "/>

<xsd:simpleType name="UStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" U "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UStaticString" type="ssqml:UStaticStringType" fixed=" U "/>

<xsd:simpleType name="UescapeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UESCAPE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UescapeStaticString" type="ssqml:UescapeStaticStringType" fixed=" UESCAPE "/>

<xsd:simpleType name="UnboundedFollowingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UNBOUNDED FOLLOWING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnboundedFollowingStaticString" type="ssqml:UnboundedFollowingStaticStringType" fixed=" UNBOUNDED FOLLOWING "/>

<xsd:simpleType name="UnboundedPrecedingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UNBOUNDED PRECEDING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnboundedPrecedingStaticString" type="ssqml:UnboundedPrecedingStaticStringType" fixed=" UNBOUNDED PRECEDING "/>

<xsd:simpleType name="UnderStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UNDER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnderStaticString" type="ssqml:UnderStaticStringType" fixed=" UNDER "/>

<xsd:simpleType name="UnionJoinStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UNION JOIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnionJoinStaticString" type="ssqml:UnionJoinStaticStringType" fixed=" UNION JOIN "/>

<xsd:simpleType name="UnionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UNION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnionStaticString" type="ssqml:UnionStaticStringType" fixed=" UNION "/>

<xsd:simpleType name="UniqueStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UNIQUE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UniqueStaticString" type="ssqml:UniqueStaticStringType" fixed=" UNIQUE "/>

<xsd:simpleType name="UnnestStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UNNEST "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UnnestStaticString" type="ssqml:UnnestStaticStringType" fixed=" UNNEST "/>

<xsd:simpleType name="UntilStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UNTIL "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UntilStaticString" type="ssqml:UntilStaticStringType" fixed=" UNTIL "/>

<xsd:simpleType name="UpdateSetStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UPDATE SET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UpdateSetStaticString" type="ssqml:UpdateSetStaticStringType" fixed=" UPDATE SET "/>

<xsd:simpleType name="UpdateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UPDATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UpdateStaticString" type="ssqml:UpdateStaticStringType" fixed=" UPDATE "/>

<xsd:simpleType name="UpperStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" UPPER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UpperStaticString" type="ssqml:UpperStaticStringType" fixed=" UPPER "/>

<xsd:simpleType name="UsageStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" USAGE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UsageStaticString" type="ssqml:UsageStaticStringType" fixed=" USAGE "/>

<xsd:simpleType name="UriStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" URI "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UriStaticString" type="ssqml:UriStaticStringType" fixed=" URI "/>

<xsd:simpleType name="UserStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" USER "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UserStaticString" type="ssqml:UserStaticStringType" fixed=" USER "/>

<xsd:simpleType name="UsingStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" USING "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="UsingStaticString" type="ssqml:UsingStaticStringType" fixed=" USING "/>

<xsd:simpleType name="ValidStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" VALID "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ValidStaticString" type="ssqml:ValidStaticStringType" fixed=" VALID "/>

<xsd:simpleType name="ValueStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" VALUE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ValueStaticString" type="ssqml:ValueStaticStringType" fixed=" VALUE "/>

<xsd:simpleType name="ValuesStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" VALUES "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ValuesStaticString" type="ssqml:ValuesStaticStringType" fixed=" VALUES "/>

<xsd:simpleType name="VarcharStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" VARCHAR "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="VarcharStaticString" type="ssqml:VarcharStaticStringType" fixed=" VARCHAR "/>

<xsd:simpleType name="VersionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" VERSION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="VersionStaticString" type="ssqml:VersionStaticStringType" fixed=" VERSION "/>

<xsd:simpleType name="ViewStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" VIEW "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ViewStaticString" type="ssqml:ViewStaticStringType" fixed=" VIEW "/>

<xsd:simpleType name="WhenMatchedThenStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WHEN MATCHED THEN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WhenMatchedThenStaticString" type="ssqml:WhenMatchedThenStaticStringType" fixed=" WHEN MATCHED THEN "/>

<xsd:simpleType name="WhenNotMatchedThenStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WHEN NOT MATCHED THEN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WhenNotMatchedThenStaticString" type="ssqml:WhenNotMatchedThenStaticStringType" fixed=" WHEN NOT MATCHED THEN "/>

<xsd:simpleType name="WhenStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WHEN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WhenStaticString" type="ssqml:WhenStaticStringType" fixed=" WHEN "/>

<xsd:simpleType name="WhileStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WHILE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WhileStaticString" type="ssqml:WhileStaticStringType" fixed=" WHILE "/>

<xsd:simpleType name="WhitespaceStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WHITESPACE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WhitespaceStaticString" type="ssqml:WhitespaceStaticStringType" fixed=" WHITESPACE "/>

<xsd:simpleType name="WhereCurrentOfStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WHERE CURRENT OF "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WhereCurrentOfStaticString" type="ssqml:WhereCurrentOfStaticStringType" fixed=" WHERE CURRENT OF "/>

<xsd:simpleType name="WhereStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WHERE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WhereStaticString" type="ssqml:WhereStaticStringType" fixed=" WHERE "/>

<xsd:simpleType name="Width_bucketStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WIDTH_BUCKET "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="Width_bucketStaticString" type="ssqml:Width_bucketStaticStringType" fixed=" WIDTH_BUCKET "/>

<xsd:simpleType name="WindowStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WINDOW "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WindowStaticString" type="ssqml:WindowStaticStringType" fixed=" WINDOW "/>

<xsd:simpleType name="WithAdminOptionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WITH ADMIN OPTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithAdminOptionStaticString" type="ssqml:WithAdminOptionStaticStringType" fixed=" WITH ADMIN OPTION "/>

<xsd:simpleType name="WithAdminStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WITH ADMIN "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithAdminStaticString" type="ssqml:WithAdminStaticStringType" fixed=" WITH ADMIN "/>

<xsd:simpleType name="WithGrantOptionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WITH GRANT OPTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithGrantOptionStaticString" type="ssqml:WithGrantOptionStaticStringType" fixed=" WITH GRANT OPTION "/>

<xsd:simpleType name="WithHierarchyOptionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WITH HIERARCHY OPTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithHierarchyOptionStaticString" type="ssqml:WithHierarchyOptionStaticStringType" fixed=" WITH HIERARCHY OPTION "/>

<xsd:simpleType name="WithMaxStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WITH MAX "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithMaxStaticString" type="ssqml:WithMaxStaticStringType" fixed=" WITH MAX "/>

<xsd:simpleType name="WithOptionsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WITH OPTIONS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithOptionsStaticString" type="ssqml:WithOptionsStaticStringType" fixed=" WITH OPTIONS "/>

<xsd:simpleType name="WithOrdinalityStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WITH ORDINALITY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithOrdinalityStaticString" type="ssqml:WithOrdinalityStaticStringType" fixed=" WITH ORDINALITY "/>

<xsd:simpleType name="WithStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WITH "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithStaticString" type="ssqml:WithStaticStringType" fixed=" WITH "/>

<xsd:simpleType name="WithinGroupStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WITHIN GROUP "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WithinGroupStaticString" type="ssqml:WithinGroupStaticStringType" fixed=" WITHIN GROUP "/>

<xsd:simpleType name="WorkStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" WORK "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="WorkStaticString" type="ssqml:WorkStaticStringType" fixed=" WORK "/>

<xsd:simpleType name="XStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" X "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XStaticString" type="ssqml:XStaticStringType" fixed=" X "/>

<xsd:simpleType name="XmlStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XML "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlStaticString" type="ssqml:XmlStaticStringType" fixed=" XML "/>

<xsd:simpleType name="XmlOptionStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XML OPTION "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlOptionStaticString" type="ssqml:XmlOptionStaticStringType" fixed=" XML OPTION "/>

<xsd:simpleType name="XmlaggStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLAGG "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlaggStaticString" type="ssqml:XmlaggStaticStringType" fixed=" XMLAGG "/>

<xsd:simpleType name="XmlattributesStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLATTRIBUTES "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlattributesStaticString" type="ssqml:XmlattributesStaticStringType" fixed=" XMLATTRIBUTES "/>

<xsd:simpleType name="XmlbinaryStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLBINARY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlbinaryStaticString" type="ssqml:XmlbinaryStaticStringType" fixed=" XMLBINARY "/>

<xsd:simpleType name="XmlcastStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLCAST "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlcastStaticString" type="ssqml:XmlcastStaticStringType" fixed=" XMLCAST "/>

<xsd:simpleType name="XmlcommentStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLCOMMENT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlcommentStaticString" type="ssqml:XmlcommentStaticStringType" fixed=" XMLCOMMENT "/>

<xsd:simpleType name="XmlconcatStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLCONCAT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlconcatStaticString" type="ssqml:XmlconcatStaticStringType" fixed=" XMLCONCAT "/>

<xsd:simpleType name="XmlelementStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLELEMENT "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlelementStaticString" type="ssqml:XmlelementStaticStringType" fixed=" XMLELEMENT "/>

<xsd:simpleType name="XmlexistsStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLEXISTS "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlexistsStaticString" type="ssqml:XmlexistsStaticStringType" fixed=" XMLEXISTS "/>

<xsd:simpleType name="XmlforestStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLFOREST "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlforestStaticString" type="ssqml:XmlforestStaticStringType" fixed=" XMLFOREST "/>

<xsd:simpleType name="XmliterateStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLITERATE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmliterateStaticString" type="ssqml:XmliterateStaticStringType" fixed=" XMLITERATE "/>

<xsd:simpleType name="XmlnamespacesStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLNAMESPACES "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlnamespacesStaticString" type="ssqml:XmlnamespacesStaticStringType" fixed=" XMLNAMESPACES "/>

<xsd:simpleType name="XmlparseStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLPARSE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlparseStaticString" type="ssqml:XmlparseStaticStringType" fixed=" XMLPARSE "/>

<xsd:simpleType name="XmlpiStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLPI "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlpiStaticString" type="ssqml:XmlpiStaticStringType" fixed=" XMLPI "/>

<xsd:simpleType name="XmlqueryStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLQUERY "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlqueryStaticString" type="ssqml:XmlqueryStaticStringType" fixed=" XMLQUERY "/>

<xsd:simpleType name="XmlserializeStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLSERIALIZE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmlserializeStaticString" type="ssqml:XmlserializeStaticStringType" fixed=" XMLSERIALIZE "/>

<xsd:simpleType name="XmltableStaticStringType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" XMLTABLE "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="XmltableStaticString" type="ssqml:XmltableStaticStringType" fixed=" XMLTABLE "/>

<xsd:simpleType name="SlashAsteriskType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" \\* "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="SlashAsterisk" type="ssqml:SlashAsteriskType" fixed=" \\* "/>

<xsd:simpleType name="AsteriskSlashType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" *\\ "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="AsteriskSlash" type="ssqml:AsteriskSlashType" fixed=" *\\ "/>

<xsd:simpleType name="VerticalBarVerticalBarType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" || "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="VerticalBarVerticalBar" type="ssqml:VerticalBarVerticalBarType" fixed=" || "/>

<xsd:simpleType name="ColonColonType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" :: "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="ColonColon" type="ssqml:ColonColonType" fixed=" :: "/>

<xsd:simpleType name="PeriodPeriodType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" .. "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="PeriodPeriod" type="ssqml:PeriodPeriodType" fixed=" .. "/>

<xsd:simpleType name="DoubleQuoteDoubleQuoteType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" &quot;&quot; "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="DoubleQuoteDoubleQuote" type="ssqml:DoubleQuoteDoubleQuoteType" fixed=" &quot;&quot; "/>

<xsd:simpleType name="LeftParenRightParenType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" () "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LeftParenRightParen" type="ssqml:LeftParenRightParenType" fixed=" () "/>

<xsd:simpleType name="QuoteUnicodeEscapeCharacterQuoteType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" '\u' "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="QuoteUnicodeEscapeCharacterQuote" type="ssqml:QuoteUnicodeEscapeCharacterQuoteType" fixed=" '\u' "/>

<xsd:simpleType name="LessThanOperatorEqualsOperatorType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" &lt;= "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LessThanOperatorEqualsOperator" type="ssqml:LessThanOperatorEqualsOperatorType" fixed=" &lt;= "/>

<xsd:simpleType name="LessThanOperatorGreaterThanOperatorType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" &lt;&gt; "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="LessThanOperatorGreaterThanOperator" type="ssqml:LessThanOperatorGreaterThanOperatorType" fixed=" &lt;&gt; "/>

<xsd:simpleType name="QuoteQuoteType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" '' "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="QuoteQuote" type="ssqml:QuoteQuoteType" fixed=" '' "/>

<xsd:simpleType name="MinusSignGreaterThanOperatorType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" -&gt; "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="MinusSignGreaterThanOperator" type="ssqml:MinusSignGreaterThanOperatorType" fixed=" -&gt; "/>

<xsd:simpleType name="GreaterThanOperatorEqualsOperatorType">
	<xsd:restriction base="xsd:string">
		<xsd:enumeration value=" &gt;= "/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:element name="GreaterThanOperatorEqualsOperator" type="ssqml:GreaterThanOperatorEqualsOperatorType" fixed=" &gt;= "/>

<xsd:element name="ArrayElement" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="ArrayFactor" substitutionGroup="ssqml:ValueExpressionPrimary"/>
<xsd:element name="ArrayValueExpression1" substitutionGroup="ssqml:ArrayValueExpression"/>
<xsd:element name="AsteriskedIdentifier" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="AttributeDefault" substitutionGroup="ssqml:DefaultClause"/>
<xsd:element name="AttributeName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="AttributesVariable" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="BasicIdentifierChain" substitutionGroup="ssqml:IdentifierChain"/>
<xsd:element name="BeginningLabel" substitutionGroup="ssqml:StatementLabel"/>
<xsd:element name="BlobFactor" substitutionGroup="ssqml:BlobPrimary"/>
<xsd:element name="BlobTrimSource" substitutionGroup="ssqml:BlobValueExpression"/>
<xsd:element name="CastFunction" substitutionGroup="ssqml:SpecificRoutineDesignator"/>
<xsd:element name="CastToDistinctIdentifier" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="CastToRefIdentifier" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="CastToSourceIdentifier" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="CastToTypeIdentifier" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="CatalogName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="CharacterPattern" substitutionGroup="ssqml:CharacterValueExpression"/>
<xsd:element name="CollationName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="CollationSpecification" substitutionGroup="ssqml:ValueSpecification"/>
<xsd:element name="ColumnName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="ConditionName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="ConditionNumber" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="ConnectionName" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="ConnectionUserName" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="ConstraintName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="ConstructorMethodSelection" substitutionGroup="ssqml:RoutineInvocation"/>
<xsd:element name="CorrelationName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="CorrespondingColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="CurrentDateValueFunction" substitutionGroup="ssqml:Current_dateStaticString"/>
<xsd:element name="CursorName" substitutionGroup="ssqml:LocalQualifiedName"/>
<xsd:element name="CycleColumn" substitutionGroup="ssqml:ColumnName"/>
<xsd:element name="CycleMarkColumn" substitutionGroup="ssqml:ColumnName"/>
<xsd:element name="CycleMarkValue" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="DatetimeTerm" substitutionGroup="ssqml:DatetimeFactor"/>
<xsd:element name="DatetimeValue" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="DaysValue" substitutionGroup="ssqml:DatetimeValue"/>
<xsd:element name="DefaultSchemaName" substitutionGroup="ssqml:SchemaName"/>
<xsd:element name="DependentVariableExpression" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="DereferenceOperator" substitutionGroup="ssqml:RightArrow"/>
<xsd:element name="DerivedColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="DerivedTable" substitutionGroup="ssqml:TableSubquery"/>
<xsd:element name="DirectSelectStatementMultipleRows" substitutionGroup="ssqml:CursorSpecification"/>
<xsd:element name="DomainName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="DropColumnDefaultClause" substitutionGroup="ssqml:DropDefaultStaticString"/>
<xsd:element name="DropDomainDefaultClause" substitutionGroup="ssqml:DropDefaultStaticString"/>
<xsd:element name="DynamicParameterSpecification" substitutionGroup="ssqml:QuestionMark"/>
<xsd:element name="DynamicSelectStatement" substitutionGroup="ssqml:CursorSpecification"/>
<xsd:element name="EndingLabel" substitutionGroup="ssqml:StatementLabel"/>
<xsd:element name="EscapeCharacter" substitutionGroup="ssqml:CharacterValueExpression"/>
<xsd:element name="EscapeOctet" substitutionGroup="ssqml:BlobValueExpression"/>
<xsd:element name="ExistingCollationName" substitutionGroup="ssqml:CollationName"/>
<xsd:element name="ExistingTransliterationName" substitutionGroup="ssqml:TransliterationName"/>
<xsd:element name="ExistingWindowName" substitutionGroup="ssqml:WindowName"/>
<xsd:element name="Exponent" substitutionGroup="ssqml:SignedInteger"/>
<xsd:element name="FieldName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="ForLoopVariableName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="ForestElementValue" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="ForestElementName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="FromSqlFunction" substitutionGroup="ssqml:SpecificRoutineDesignator"/>
<xsd:element name="GroupName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="HandlerAction" substitutionGroup="ssqml:SqlProcedureStatement"/>
<xsd:element name="HighValue" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="HoursValue" substitutionGroup="ssqml:DatetimeValue"/>
<xsd:element name="IdentifierStart" substitutionGroup="ssqml:SimpleLatinLetter"/>
<xsd:element name="Identifier" substitutionGroup="ssqml:ActualIdentifier"/>
<xsd:element name="ImplementationDefinedCharacterSetName" substitutionGroup="ssqml:CharacterSetName"/>
<xsd:element name="IndependentVariableExpression" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="InLineWindowSpecification" substitutionGroup="ssqml:WindowSpecification"/>
<xsd:element name="InsertColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="InsertionTarget" substitutionGroup="ssqml:TableName"/>
<xsd:element name="IntervalTerm1" substitutionGroup="ssqml:IntervalTerm"/>
<xsd:element name="IntervalTerm2" substitutionGroup="ssqml:IntervalTerm"/>
<xsd:element name="IntervalValueExpression1" substitutionGroup="ssqml:IntervalValueExpression"/>
<xsd:element name="IntervalValueFunction" substitutionGroup="ssqml:IntervalAbsoluteValueFunction"/>
<xsd:element name="IntoArgument" substitutionGroup="ssqml:TargetSpecification"/>
<xsd:element name="Introducer" substitutionGroup="ssqml:Underscore"/>
<xsd:element name="InverseDistributionFunctionArgument" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="ItemNumber" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="JoinColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="Length" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="LocalQualifier" substitutionGroup="ssqml:ModuleStaticString"/>
<xsd:element name="LowValue" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="Mantissa" substitutionGroup="ssqml:ExactNumericLiteral"/>
<xsd:element name="MaximumDynamicResultSets" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="Member" substitutionGroup="ssqml:AttributeDefinition"/>
<xsd:element name="MergeCorrelationName" substitutionGroup="ssqml:CorrelationName"/>
<xsd:element name="MethodName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="MethodSelection" substitutionGroup="ssqml:RoutineInvocation"/>
<xsd:element name="MinutesValue" substitutionGroup="ssqml:DatetimeValue"/>
<xsd:element name="ModuleAuthorizationIdentifier" substitutionGroup="ssqml:AuthorizationIdentifier"/>
<xsd:element name="ModulePathSpecification" substitutionGroup="ssqml:PathSpecification"/>
<xsd:element name="ModuleTransformGroupSpecification" substitutionGroup="ssqml:TransformGroupSpecification"/>
<xsd:element name="MonthsValue" substitutionGroup="ssqml:DatetimeValue"/>
<xsd:element name="MultisetElement" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="MultisetValueFunction" substitutionGroup="ssqml:MultisetSetFunction"/>
<xsd:element name="NewValuesCorrelationName" substitutionGroup="ssqml:CorrelationName"/>
<xsd:element name="NewValuesTableAlias" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="NewWindowName" substitutionGroup="ssqml:WindowName"/>
<xsd:element name="NonCycleMarkValue" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="NumberOfConditions" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="NumericValueExpressionBase" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="NumericValueExpressionExponent" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="NumericValueExpressionDividend" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="NumericValueExpressionDivisor" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="ObjectColumn" substitutionGroup="ssqml:ColumnName"/>
<xsd:element name="ObjectColumn2" substitutionGroup="ssqml:ColumnName"/>
<xsd:element name="Occurrences" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="OctetPattern" substitutionGroup="ssqml:BlobValueExpression"/>
<xsd:element name="OldValuesCorrelationName" substitutionGroup="ssqml:CorrelationName"/>
<xsd:element name="OldValuesTableAlias" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="OverlapsPredicatePart1" substitutionGroup="ssqml:RowValuePredicand1"/>
<xsd:element name="ParameterUsingClause" substitutionGroup="ssqml:InputUsingClause"/>
<xsd:element name="PathColumn" substitutionGroup="ssqml:ColumnName"/>
<xsd:element name="PathResolvedUserDefinedTypeName" substitutionGroup="ssqml:UserDefinedTypeName"/>
<xsd:element name="Precision" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="PreparableSqlControlStatement" substitutionGroup="ssqml:SqlControlStatement"/>
<xsd:element name="PreparableSqlSchemaStatement" substitutionGroup="ssqml:SqlSchemaStatement"/>
<xsd:element name="PreparableSqlSessionStatement" substitutionGroup="ssqml:SqlSessionStatement"/>
<xsd:element name="PreparableSqlTransactionStatement" substitutionGroup="ssqml:SqlTransactionStatement"/>
<xsd:element name="PrivilegeColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="ProcedureName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="QualifiedIdentifier" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="QueryName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="ReferenceColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="ReferenceScopeCheckAction" substitutionGroup="ssqml:ReferentialAction"/>
<xsd:element name="ReferenceValueExpression" substitutionGroup="ssqml:ValueExpressionPrimary"/>
<xsd:element name="ReferencedType" substitutionGroup="ssqml:PathResolvedUserDefinedTypeName"/>
<xsd:element name="ReferencingColumns" substitutionGroup="ssqml:ReferenceColumnList"/>
<xsd:element name="RegularIdentifier" substitutionGroup="ssqml:IdentifierBody"/>
<xsd:element name="RepeatArgument" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="RegisteredXmlSchemaName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="ResultExpression" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="ResultUsingClause" substitutionGroup="ssqml:OutputUsingClause"/>
<xsd:element name="RoleGranted" substitutionGroup="ssqml:RoleName"/>
<xsd:element name="RoleName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="RoleRevoked" substitutionGroup="ssqml:RoleName"/>
<xsd:element name="RowSubquery" substitutionGroup="ssqml:Subquery"/>
<xsd:element name="RowValueConstructorElement" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="RowValuePredicand1" substitutionGroup="ssqml:RowValuePredicand"/>
<xsd:element name="RowValuePredicand2" substitutionGroup="ssqml:RowValuePredicand"/>
<xsd:element name="RowValuePredicand3" substitutionGroup="ssqml:RowValuePredicand"/>
<xsd:element name="RowValuePredicand4" substitutionGroup="ssqml:RowValuePredicand"/>
<xsd:element name="RowValueSpecialCase" substitutionGroup="ssqml:NonparenthesizedValueExpressionPrimary"/>
<xsd:element name="SamplePercentage" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="SavepointName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="SavepointSpecifier" substitutionGroup="ssqml:SavepointName"/>
<xsd:element name="ScalarSubquery" substitutionGroup="ssqml:Subquery"/>
<xsd:element name="Scale" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="SchemaAuthorizationIdentifier" substitutionGroup="ssqml:AuthorizationIdentifier"/>
<xsd:element name="SchemaPathSpecification" substitutionGroup="ssqml:PathSpecification"/>
<xsd:element name="SchemaPathSpecification2" substitutionGroup="ssqml:PathSpecification"/>
<xsd:element name="SchemaPathSpecification3" substitutionGroup="ssqml:PathSpecification"/>
<xsd:element name="SchemaQualifiedRoutineName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="SchemaResolvedUserDefinedTypeName" substitutionGroup="ssqml:UserDefinedTypeName"/>
<xsd:element name="SearchCondition" substitutionGroup="ssqml:BooleanValueExpression"/>
<xsd:element name="SecondsFraction" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="SecondsIntegerValue" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="SelfReferencingColumnName" substitutionGroup="ssqml:ColumnName"/>
<xsd:element name="SequenceColumn" substitutionGroup="ssqml:ColumnName"/>
<xsd:element name="SequenceGeneratorIncrement" substitutionGroup="ssqml:SignedNumericLiteral"/>
<xsd:element name="SequenceGeneratorMaxValue" substitutionGroup="ssqml:SignedNumericLiteral"/>
<xsd:element name="SequenceGeneratorMinValue" substitutionGroup="ssqml:SignedNumericLiteral"/>
<xsd:element name="SequenceGeneratorName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="SequenceGeneratorRestartValue" substitutionGroup="ssqml:SignedNumericLiteral"/>
<xsd:element name="SequenceGeneratorStartValue" substitutionGroup="ssqml:SignedNumericLiteral"/>
<xsd:element name="SessionCharacteristic" substitutionGroup="ssqml:TransactionCharacteristics"/>
<xsd:element name="SetFunctionType" substitutionGroup="ssqml:ComputationalOperation"/>
<xsd:element name="SimpleTargetSpecification1" substitutionGroup="ssqml:SimpleTargetSpecification"/>
<xsd:element name="SimpleTargetSpecification2" substitutionGroup="ssqml:SimpleTargetSpecification"/>
<xsd:element name="SimpleValueSpecification1" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="SimpleValueSpecification2" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="SingleGroupSpecification" substitutionGroup="ssqml:GroupName"/>
<xsd:element name="SortKey" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="SourceCharacterSetSpecification" substitutionGroup="ssqml:CharacterSetSpecification"/>
<xsd:element name="SourceDataType" substitutionGroup="ssqml:DataType"/>
<xsd:element name="SpecificName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="SqlDiagnosticsStatement" substitutionGroup="ssqml:GetDiagnosticsStatement"/>
<xsd:element name="SqlLanguageIdentifierStart" substitutionGroup="ssqml:SimpleLatinLetter"/>
<xsd:element name="SqlParameterName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="SqlParameterReference" substitutionGroup="ssqml:BasicIdentifierChain"/>
<xsd:element name="SqlProcedureStatement" substitutionGroup="ssqml:SqlExecutableStatement"/>
<xsd:element name="SqlRoutineBody" substitutionGroup="ssqml:SqlProcedureStatement"/>
<xsd:element name="SqlServerModuleName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="SqlStatementVariable" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="SqlClientModuleName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="SqlInvokedRoutine" substitutionGroup="ssqml:SchemaRoutine"/>
<xsd:element name="SqlServerModulePathSpecification" substitutionGroup="ssqml:PathSpecification"/>
<xsd:element name="SqlServerName" substitutionGroup="ssqml:SimpleValueSpecification"/>
<xsd:element name="SqlVariableName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="SqlVariableReference" substitutionGroup="ssqml:BasicIdentifierChain"/>
<xsd:element name="StandardCharacterSetName" substitutionGroup="ssqml:CharacterSetName"/>
<xsd:element name="StartPosition" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="StatementName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="StatementLabel" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="StringLength" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="SubtypeOperand" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="SupertableClause" substitutionGroup="ssqml:SupertableName"/>
<xsd:element name="SupertableName" substitutionGroup="ssqml:TableName"/>
<xsd:element name="SupertypeName" substitutionGroup="ssqml:PathResolvedUserDefinedTypeName"/>
<xsd:element name="SystemGeneratedRepresentation" substitutionGroup="ssqml:RefIsSystemGeneratedStaticString"/>
<xsd:element name="TableName" substitutionGroup="ssqml:LocalOrSchemaQualifiedName"/>
<xsd:element name="TableSubquery" substitutionGroup="ssqml:Subquery"/>
<xsd:element name="TargetCharacterSetSpecification" substitutionGroup="ssqml:CharacterSetSpecification"/>
<xsd:element name="TargetDataType" substitutionGroup="ssqml:DataType"/>
<xsd:element name="TimeFractionalSecondsPrecision" substitutionGroup="ssqml:UnsignedInteger"/>
<xsd:element name="TimePrecision" substitutionGroup="ssqml:TimeFractionalSecondsPrecision"/>
<xsd:element name="TimestampPrecision" substitutionGroup="ssqml:TimeFractionalSecondsPrecision"/>
<xsd:element name="ToSqlFunction" substitutionGroup="ssqml:SpecificRoutineDesignator"/>
<xsd:element name="TranscodingName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="TransformGroupElement" substitutionGroup="ssqml:GroupName"/>
<xsd:element name="TransliterationName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="TransliterationRoutine" substitutionGroup="ssqml:SpecificRoutineDesignator"/>
<xsd:element name="TriggerColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="TriggerName" substitutionGroup="ssqml:SchemaQualifiedName"/>
<xsd:element name="TriggeredSqlStatement" substitutionGroup="ssqml:SqlProcedureStatement"/>
<xsd:element name="TrimCharacter" substitutionGroup="ssqml:CharacterValueExpression"/>
<xsd:element name="TrimOctet" substitutionGroup="ssqml:BlobValueExpression"/>
<xsd:element name="TrimSource" substitutionGroup="ssqml:CharacterValueExpression"/>
<xsd:element name="UniqueColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="UnqualifiedSchemaName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="UnquotedDateString" substitutionGroup="ssqml:DateValue"/>
<xsd:element name="UserIdentifier" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="UserDefinedCharacterSetName" substitutionGroup="ssqml:CharacterSetName"/>
<xsd:element name="UserDefinedTypeName" substitutionGroup="ssqml:SchemaQualifiedTypeName"/>
<xsd:element name="UserDefinedTypeValueExpression" substitutionGroup="ssqml:ValueExpressionPrimary"/>
<xsd:element name="UsingArgument" substitutionGroup="ssqml:GeneralValueSpecification"/>
<xsd:element name="UsingInputDescriptor" substitutionGroup="ssqml:UsingDescriptor"/>
<xsd:element name="ViewColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="WidthBucketBound1" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="WidthBucketBound2" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="WidthBucketCount" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="WidthBucketOperand" substitutionGroup="ssqml:NumericValueExpression"/>
<xsd:element name="WindowFrameBound1" substitutionGroup="ssqml:WindowFrameBound"/>
<xsd:element name="WindowFrameBound2" substitutionGroup="ssqml:WindowFrameBound"/>
<xsd:element name="WindowName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="WithColumnList" substitutionGroup="ssqml:ColumnNameList"/>
<xsd:element name="XmlEncodingSpecification" substitutionGroup="ssqml:XmlEncodingName"/>
<xsd:element name="XmlEncodingName" substitutionGroup="ssqml:SqlLanguageIdentifier"/>
<xsd:element name="XmlValueExpression" substitutionGroup="ssqml:XmlPrimary"/>
<xsd:element name="YearsValue" substitutionGroup="ssqml:DatetimeValue"/>
<xsd:element name="YearsValue2" substitutionGroup="ssqml:DatetimeValue"/>
<xsd:element name="XmlAttributeValue" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="XmlAttributeName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="XmlElementContent" substitutionGroup="ssqml:ValueExpression"/>
<xsd:element name="XmlElementName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="XmlPiTarget" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="XqueryExpression" substitutionGroup="ssqml:CharacterStringLiteral"/>
<xsd:element name="XmlQueryDefaultPassingMechanism" substitutionGroup="ssqml:XmlPassingMechanism"/>
<xsd:element name="XmlTableRowPattern" substitutionGroup="ssqml:CharacterStringLiteral"/>
<xsd:element name="XmlQueryReturningMechanism" substitutionGroup="ssqml:XmlPassingMechanism"/>
<xsd:element name="XmlTableColumnPattern" substitutionGroup="ssqml:CharacterStringLiteral"/>
<xsd:element name="XmlValidTargetNamespace" substitutionGroup="ssqml:XmlUri"/>
<xsd:element name="XmlUri" substitutionGroup="ssqml:CharacterStringLiteral"/>
<xsd:element name="XmlValidSchemaLocationUri" substitutionGroup="ssqml:XmlUri"/>
<xsd:element name="XmlValidElementNamespace" substitutionGroup="ssqml:XmlUri"/>
<xsd:element name="XmlValidElementName" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="XmlNamespacePrefix" substitutionGroup="ssqml:Identifier"/>
<xsd:element name="XmlNamespaceUri" substitutionGroup="ssqml:CharacterStringLiteral"/>
<xsd:complexType name="AbsoluteValueExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AbsStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NumericValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AbsoluteValueExpression" type="ssqml:AbsoluteValueExpressionType"/>

<xsd:complexType name="Action_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SelectStaticString2"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:choice>
				<xsd:element ref="ssqml:PrivilegeColumnList"/>
				<xsd:element ref="ssqml:PrivilegeMethodList"/>
			</xsd:choice>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Action_ISO9075ChoiceGroup1" type="ssqml:Action_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="Action_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:choice>
				<xsd:element ref="ssqml:InsertStaticString"/>
				<xsd:element ref="ssqml:UpdateStaticString"/>
				<xsd:element ref="ssqml:ReferencesStaticString"/>
			</xsd:choice>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:PrivilegeColumnList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Action_ISO9075ChoiceGroup2" type="ssqml:Action_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="ActionType">
	<xsd:choice>
			<xsd:element ref="ssqml:SelectStaticString"/>
			<xsd:element ref="ssqml:Action_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:Action_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:DeleteStaticString"/>
			<xsd:element ref="ssqml:UsageStaticString"/>
			<xsd:element ref="ssqml:TriggerStaticString"/>
			<xsd:element ref="ssqml:UnderStaticString"/>
			<xsd:element ref="ssqml:ExecuteStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Action" type="ssqml:ActionType"/>

<xsd:complexType name="ActualIdentifierType">
	<xsd:choice>
			<xsd:element ref="ssqml:RegularIdentifier"/>
			<xsd:element ref="ssqml:DelimitedIdentifier"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ActualIdentifier" type="ssqml:ActualIdentifierType"/>

<xsd:complexType name="AddAttributeDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AddAttributeStaticString"/>
			<xsd:element ref="ssqml:AttributeDefinition"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AddAttributeDefinition" type="ssqml:AddAttributeDefinitionType"/>

<xsd:complexType name="AddColumnDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AddStaticString"/>
			<xsd:element ref="ssqml:ColumnStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnDefinition"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AddColumnDefinition" type="ssqml:AddColumnDefinitionType"/>

<xsd:complexType name="AddColumnScopeClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AddStaticString"/>
			<xsd:element ref="ssqml:ScopeClause"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AddColumnScopeClause" type="ssqml:AddColumnScopeClauseType"/>

<xsd:complexType name="AddDomainConstraintDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AddStaticString"/>
			<xsd:element ref="ssqml:DomainConstraint"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AddDomainConstraintDefinition" type="ssqml:AddDomainConstraintDefinitionType"/>

<xsd:complexType name="AddOriginalMethodSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AddStaticString"/>
			<xsd:element ref="ssqml:OriginalMethodSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AddOriginalMethodSpecification" type="ssqml:AddOriginalMethodSpecificationType"/>

<xsd:complexType name="AddOverridingMethodSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AddStaticString"/>
			<xsd:element ref="ssqml:OverridingMethodSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AddOverridingMethodSpecification" type="ssqml:AddOverridingMethodSpecificationType"/>

<xsd:complexType name="AddTableConstraintDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AddStaticString"/>
			<xsd:element ref="ssqml:TableConstraintDefinition"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AddTableConstraintDefinition" type="ssqml:AddTableConstraintDefinitionType"/>

<xsd:complexType name="AddTransformElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AddStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TransformElementList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AddTransformElementList" type="ssqml:AddTransformElementListType"/>

<xsd:complexType name="AggregateFunction_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CountStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:Asterisk"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:FilterClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AggregateFunction_ISO9075ChoiceGroup1" type="ssqml:AggregateFunction_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="AggregateFunction_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:GeneralSetFunction"/>
			<xsd:element ref="ssqml:FilterClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AggregateFunction_ISO9075ChoiceGroup2" type="ssqml:AggregateFunction_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="AggregateFunction_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:BinarySetFunction"/>
			<xsd:element ref="ssqml:FilterClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AggregateFunction_ISO9075ChoiceGroup3" type="ssqml:AggregateFunction_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="AggregateFunction_ISO9075ChoiceGroup4Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:OrderedSetFunction"/>
			<xsd:element ref="ssqml:FilterClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AggregateFunction_ISO9075ChoiceGroup4" type="ssqml:AggregateFunction_ISO9075ChoiceGroup4Type"/>

<xsd:complexType name="AggregateFunctionType">
	<xsd:choice>
			<xsd:element ref="ssqml:AggregateFunction_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:AggregateFunction_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:AggregateFunction_ISO9075ChoiceGroup3"/>
			<xsd:element ref="ssqml:AggregateFunction_ISO9075ChoiceGroup4"/>
			<xsd:element ref="ssqml:XmlAggregate"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AggregateFunction" type="ssqml:AggregateFunctionType"/>

<xsd:complexType name="AllFieldsColumnNameListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnNameList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AllFieldsColumnNameList" type="ssqml:AllFieldsColumnNameListType"/>

<xsd:complexType name="AllFieldsReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:Asterisk"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:AllFieldsColumnNameList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AllFieldsReference" type="ssqml:AllFieldsReferenceType"/>

<xsd:complexType name="AllocateCursorStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AllocateStaticString"/>
			<xsd:element ref="ssqml:ExtendedCursorName"/>
			<xsd:element ref="ssqml:CursorIntent"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AllocateCursorStatement" type="ssqml:AllocateCursorStatementType"/>

<xsd:complexType name="AllocateDescriptorStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AllocateStaticString"/>
			<xsd:element ref="ssqml:SqlStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DescriptorStaticString"/>
			<xsd:element ref="ssqml:DescriptorName"/>
			<xsd:element ref="ssqml:WithMaxStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:Occurrences" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AllocateDescriptorStatement" type="ssqml:AllocateDescriptorStatementType"/>

<xsd:complexType name="AlterColumnActionType">
	<xsd:choice>
			<xsd:element ref="ssqml:SetColumnDefaultClause"/>
			<xsd:element ref="ssqml:DropColumnDefaultClause"/>
			<xsd:element ref="ssqml:AddColumnScopeClause"/>
			<xsd:element ref="ssqml:DropColumnScopeClause"/>
			<xsd:element ref="ssqml:AlterIdentityColumnSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AlterColumnAction" type="ssqml:AlterColumnActionType"/>

<xsd:complexType name="AlterColumnDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterStaticString"/>
			<xsd:element ref="ssqml:ColumnStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnName"/>
			<xsd:element ref="ssqml:AlterColumnAction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterColumnDefinition" type="ssqml:AlterColumnDefinitionType"/>

<xsd:complexType name="AlterDomainActionType">
	<xsd:choice>
			<xsd:element ref="ssqml:SetDomainDefaultClause"/>
			<xsd:element ref="ssqml:DropDomainDefaultClause"/>
			<xsd:element ref="ssqml:AddDomainConstraintDefinition"/>
			<xsd:element ref="ssqml:DropDomainConstraintDefinition"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AlterDomainAction" type="ssqml:AlterDomainActionType"/>

<xsd:complexType name="AlterDomainStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterDomainStaticString"/>
			<xsd:element ref="ssqml:DomainName"/>
			<xsd:element ref="ssqml:AlterDomainAction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterDomainStatement" type="ssqml:AlterDomainStatementType"/>

<xsd:complexType name="AlterGroupType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupName"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:AlterTransformActionList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterGroup" type="ssqml:AlterGroupType"/>

<xsd:complexType name="AlterIdentityColumnOption_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:BasicSequenceGeneratorOption"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterIdentityColumnOption_ISO9075ChoiceGroup1" type="ssqml:AlterIdentityColumnOption_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="AlterIdentityColumnOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:AlterSequenceGeneratorRestartOption"/>
			<xsd:element ref="ssqml:AlterIdentityColumnOption_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AlterIdentityColumnOption" type="ssqml:AlterIdentityColumnOptionType"/>

<xsd:complexType name="AlterIdentityColumnSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterIdentityColumnOption" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterIdentityColumnSpecification" type="ssqml:AlterIdentityColumnSpecificationType"/>

<xsd:complexType name="AlterRoutineCharacteristic_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NameStaticString"/>
			<xsd:element ref="ssqml:ExternalRoutineName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterRoutineCharacteristic_ISO9075ChoiceGroup1" type="ssqml:AlterRoutineCharacteristic_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="AlterRoutineCharacteristicType">
	<xsd:choice>
			<xsd:element ref="ssqml:ParameterStyleClause"/>
			<xsd:element ref="ssqml:SqlDataAccessIndication"/>
			<xsd:element ref="ssqml:NullCallClause"/>
			<xsd:element ref="ssqml:DynamicResultSetsCharacteristic"/>
			<xsd:element ref="ssqml:AlterRoutineCharacteristic_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AlterRoutineCharacteristic" type="ssqml:AlterRoutineCharacteristicType"/>

<xsd:complexType name="AlterRoutineCharacteristicsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterRoutineCharacteristic" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterRoutineCharacteristics" type="ssqml:AlterRoutineCharacteristicsType"/>

<xsd:complexType name="AlterRoutineStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterStaticString"/>
			<xsd:element ref="ssqml:SpecificRoutineDesignator"/>
			<xsd:element ref="ssqml:AlterRoutineCharacteristics"/>
			<xsd:element ref="ssqml:AlterRoutineBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterRoutineStatement" type="ssqml:AlterRoutineStatementType"/>

<xsd:complexType name="AlterSequenceGeneratorOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:AlterSequenceGeneratorRestartOption"/>
			<xsd:element ref="ssqml:BasicSequenceGeneratorOption"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AlterSequenceGeneratorOption" type="ssqml:AlterSequenceGeneratorOptionType"/>

<xsd:complexType name="AlterSequenceGeneratorOptionsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterSequenceGeneratorOption" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterSequenceGeneratorOptions" type="ssqml:AlterSequenceGeneratorOptionsType"/>

<xsd:complexType name="AlterSequenceGeneratorRestartOptionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RestartWithStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorRestartValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterSequenceGeneratorRestartOption" type="ssqml:AlterSequenceGeneratorRestartOptionType"/>

<xsd:complexType name="AlterSequenceGeneratorStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterSequenceStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorName"/>
			<xsd:element ref="ssqml:AlterSequenceGeneratorOptions"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterSequenceGeneratorStatement" type="ssqml:AlterSequenceGeneratorStatementType"/>

<xsd:complexType name="AlterTableActionType">
	<xsd:choice>
			<xsd:element ref="ssqml:AddColumnDefinition"/>
			<xsd:element ref="ssqml:AlterColumnDefinition"/>
			<xsd:element ref="ssqml:DropColumnDefinition"/>
			<xsd:element ref="ssqml:AddTableConstraintDefinition"/>
			<xsd:element ref="ssqml:DropTableConstraintDefinition"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AlterTableAction" type="ssqml:AlterTableActionType"/>

<xsd:complexType name="AlterTableStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterTableStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:AlterTableAction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterTableStatement" type="ssqml:AlterTableStatementType"/>

<xsd:complexType name="AlterTransformActionListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterTransformAction"/>
			<xsd:element ref="ssqml:CommaAlterTransformActionItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterTransformActionList" type="ssqml:AlterTransformActionListType"/>

<xsd:complexType name="AlterTransformActionType">
	<xsd:choice>
			<xsd:element ref="ssqml:AddTransformElementList"/>
			<xsd:element ref="ssqml:DropTransformElementList"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AlterTransformAction" type="ssqml:AlterTransformActionType"/>

<xsd:complexType name="AlterTransformStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:TransformStaticString"/>
			<xsd:element ref="ssqml:TransformsStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:AlterGroup" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterTransformStatement" type="ssqml:AlterTransformStatementType"/>

<xsd:complexType name="AlterTypeActionType">
	<xsd:choice>
			<xsd:element ref="ssqml:AddAttributeDefinition"/>
			<xsd:element ref="ssqml:DropAttributeDefinition"/>
			<xsd:element ref="ssqml:AddOriginalMethodSpecification"/>
			<xsd:element ref="ssqml:AddOverridingMethodSpecification"/>
			<xsd:element ref="ssqml:DropMethodSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AlterTypeAction" type="ssqml:AlterTypeActionType"/>

<xsd:complexType name="AlterTypeStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AlterTypeStaticString"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:AlterTypeAction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AlterTypeStatement" type="ssqml:AlterTypeStatementType"/>

<xsd:complexType name="ApproximateNumericLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Mantissa"/>
			<xsd:element ref="ssqml:EStaticString"/>
			<xsd:element ref="ssqml:Exponent"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ApproximateNumericLiteral" type="ssqml:ApproximateNumericLiteralType"/>

<xsd:complexType name="ApproximateNumericType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:FloatStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:Precision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ApproximateNumericType_ISO9075ChoiceGroup1" type="ssqml:ApproximateNumericType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ApproximateNumericTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:ApproximateNumericType_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:RealStaticString"/>
			<xsd:element ref="ssqml:DoublePrecisionStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ApproximateNumericType" type="ssqml:ApproximateNumericTypeType"/>

<xsd:complexType name="ArrayConcatenationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ArrayValueExpression1"/>
			<xsd:element ref="ssqml:ConcatenationOperator"/>
			<xsd:element ref="ssqml:ArrayFactor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ArrayConcatenation" type="ssqml:ArrayConcatenationType"/>

<xsd:complexType name="ArrayElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ArrayElement"/>
			<xsd:element ref="ssqml:CommaArrayElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ArrayElementList" type="ssqml:ArrayElementListType"/>

<xsd:complexType name="ArrayElementReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ArrayValueExpression"/>
			<xsd:element ref="ssqml:LeftBracketOrTrigraph"/>
			<xsd:element ref="ssqml:NumericValueExpression"/>
			<xsd:element ref="ssqml:RightBracketOrTrigraph"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ArrayElementReference" type="ssqml:ArrayElementReferenceType"/>

<xsd:complexType name="ArrayTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:ArrayStaticString"/>
			<xsd:element ref="ssqml:LeftBracketOrTrigraph" minOccurs="0"/>
			<xsd:element ref="ssqml:UnsignedInteger" minOccurs="0"/>
			<xsd:element ref="ssqml:RightBracketOrTrigraph" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ArrayType" type="ssqml:ArrayTypeType"/>

<xsd:complexType name="ArrayValueConstructorByEnumerationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ArrayStaticString"/>
			<xsd:element ref="ssqml:LeftBracketOrTrigraph"/>
			<xsd:element ref="ssqml:ArrayElementList"/>
			<xsd:element ref="ssqml:RightBracketOrTrigraph"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ArrayValueConstructorByEnumeration" type="ssqml:ArrayValueConstructorByEnumerationType"/>

<xsd:complexType name="ArrayValueConstructorByQueryType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ArrayStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:QueryExpression"/>
			<xsd:element ref="ssqml:OrderByClause" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ArrayValueConstructorByQuery" type="ssqml:ArrayValueConstructorByQueryType"/>

<xsd:complexType name="ArrayValueConstructorType">
	<xsd:choice>
			<xsd:element ref="ssqml:ArrayValueConstructorByEnumeration"/>
			<xsd:element ref="ssqml:ArrayValueConstructorByQuery"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ArrayValueConstructor" type="ssqml:ArrayValueConstructorType"/>

<xsd:complexType name="ArrayValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:ArrayConcatenation"/>
			<xsd:element ref="ssqml:ArrayFactor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ArrayValueExpression" type="ssqml:ArrayValueExpressionType"/>

<xsd:complexType name="AsClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AsClause" type="ssqml:AsClauseType"/>

<xsd:complexType name="AsSubqueryClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnNameList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:Subquery"/>
			<xsd:element ref="ssqml:WithOrWithoutData"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AsSubqueryClause" type="ssqml:AsSubqueryClauseType"/>

<xsd:complexType name="AssertionDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateAssertionStaticString"/>
			<xsd:element ref="ssqml:ConstraintName"/>
			<xsd:element ref="ssqml:CheckStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:WithStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlLexicallyScopedOptions" minOccurs="0"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:ConstraintCharacteristics" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AssertionDefinition" type="ssqml:AssertionDefinitionType"/>

<xsd:complexType name="AssignedRowType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AssignedRow" type="ssqml:AssignedRowType"/>

<xsd:complexType name="AssignmentSourceType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:ContextuallyTypedSource"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AssignmentSource" type="ssqml:AssignmentSourceType"/>

<xsd:complexType name="AssignmentStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:SingletonVariableAssignment"/>
			<xsd:element ref="ssqml:MultipleVariableAssignment"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AssignmentStatement" type="ssqml:AssignmentStatementType"/>

<xsd:complexType name="AssignmentTargetListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:AssignmentTarget"/>
			<xsd:element ref="ssqml:CommaAssignmentTargetItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AssignmentTargetList" type="ssqml:AssignmentTargetListType"/>

<xsd:complexType name="AssignmentTargetType">
	<xsd:choice>
			<xsd:element ref="ssqml:TargetSpecification"/>
			<xsd:element ref="ssqml:ModifiedFieldReference"/>
			<xsd:element ref="ssqml:MutatorReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AssignmentTarget" type="ssqml:AssignmentTargetType"/>

<xsd:complexType name="AsteriskedIdentifierChainType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AsteriskedIdentifier"/>
			<xsd:element ref="ssqml:PeriodAsteriskedIdentifierItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AsteriskedIdentifierChain" type="ssqml:AsteriskedIdentifierChainType"/>

<xsd:complexType name="AttributeDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AttributeName"/>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:ReferenceScopeCheck" minOccurs="0"/>
			<xsd:element ref="ssqml:AttributeDefault" minOccurs="0"/>
			<xsd:element ref="ssqml:CollateClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AttributeDefinition" type="ssqml:AttributeDefinitionType"/>

<xsd:complexType name="AttributeOrMethodReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:DereferenceOperator"/>
			<xsd:element ref="ssqml:QualifiedIdentifier"/>
			<xsd:element ref="ssqml:SqlArgumentList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AttributeOrMethodReference" type="ssqml:AttributeOrMethodReferenceType"/>

<xsd:complexType name="AttributesSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AttributesStaticString"/>
			<xsd:element ref="ssqml:AttributesVariable"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="AttributesSpecification" type="ssqml:AttributesSpecificationType"/>

<xsd:complexType name="AuthorizationIdentifierType">
	<xsd:choice>
			<xsd:element ref="ssqml:RoleName"/>
			<xsd:element ref="ssqml:UserIdentifier"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="AuthorizationIdentifier" type="ssqml:AuthorizationIdentifierType"/>

<xsd:complexType name="BasicSequenceGeneratorOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:SequenceGeneratorIncrementByOption"/>
			<xsd:element ref="ssqml:SequenceGeneratorMaxvalueOption"/>
			<xsd:element ref="ssqml:SequenceGeneratorMinvalueOption"/>
			<xsd:element ref="ssqml:SequenceGeneratorCycleOption"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="BasicSequenceGeneratorOption" type="ssqml:BasicSequenceGeneratorOptionType"/>

<xsd:complexType name="BetweenPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:BetweenStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:AsymmetricStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SymmetricStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:AndStaticString"/>
			<xsd:element ref="ssqml:RowValuePredicand"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BetweenPredicatePart2" type="ssqml:BetweenPredicatePart2Type"/>

<xsd:complexType name="BetweenPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:BetweenPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BetweenPredicate" type="ssqml:BetweenPredicateType"/>

<xsd:complexType name="BinaryLargeObjectStringType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:BinaryLargeObjectStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:LargeObjectLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BinaryLargeObjectStringType_ISO9075ChoiceGroup1" type="ssqml:BinaryLargeObjectStringType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="BinaryLargeObjectStringType_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:BlobStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:LargeObjectLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BinaryLargeObjectStringType_ISO9075ChoiceGroup2" type="ssqml:BinaryLargeObjectStringType_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="BinaryLargeObjectStringTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:BinaryLargeObjectStringType_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:BinaryLargeObjectStringType_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="BinaryLargeObjectStringType" type="ssqml:BinaryLargeObjectStringTypeType"/>

<xsd:complexType name="BinarySetFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:BinarySetFunctionType"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:DependentVariableExpression"/>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:IndependentVariableExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BinarySetFunction" type="ssqml:BinarySetFunctionType"/>

<xsd:complexType name="BinaryStringLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XStaticString"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:HexitHexitItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:SeparatorQuoteHexitHexitItemtypeQuoteItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:EscapeStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:EscapeCharacter" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BinaryStringLiteral" type="ssqml:BinaryStringLiteralType"/>

<xsd:complexType name="BlobConcatenationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:BlobValueExpression"/>
			<xsd:element ref="ssqml:ConcatenationOperator"/>
			<xsd:element ref="ssqml:BlobFactor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BlobConcatenation" type="ssqml:BlobConcatenationType"/>

<xsd:complexType name="BlobOverlayFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OverlayStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:BlobValueExpression"/>
			<xsd:element ref="ssqml:PlacingStaticString"/>
			<xsd:element ref="ssqml:BlobValueExpression"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:StartPosition"/>
			<xsd:element ref="ssqml:ForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:StringLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BlobOverlayFunction" type="ssqml:BlobOverlayFunctionType"/>

<xsd:complexType name="BlobPositionExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PositionStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:BlobValueExpression"/>
			<xsd:element ref="ssqml:InStaticString"/>
			<xsd:element ref="ssqml:BlobValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BlobPositionExpression" type="ssqml:BlobPositionExpressionType"/>

<xsd:complexType name="BlobPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:StringValueFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="BlobPrimary" type="ssqml:BlobPrimaryType"/>

<xsd:complexType name="BlobSubstringFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SubstringStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:BlobValueExpression"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:StartPosition"/>
			<xsd:element ref="ssqml:ForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:StringLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BlobSubstringFunction" type="ssqml:BlobSubstringFunctionType"/>

<xsd:complexType name="BlobTrimFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TrimStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:BlobTrimOperands"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BlobTrimFunction" type="ssqml:BlobTrimFunctionType"/>

<xsd:complexType name="BlobTrimOperandsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TrimSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:TrimOctet" minOccurs="0"/>
			<xsd:element ref="ssqml:FromStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:BlobTrimSource"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BlobTrimOperands" type="ssqml:BlobTrimOperandsType"/>

<xsd:complexType name="BlobValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:BlobConcatenation"/>
			<xsd:element ref="ssqml:BlobFactor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="BlobValueExpression" type="ssqml:BlobValueExpressionType"/>

<xsd:complexType name="BlobValueFunctionType">
	<xsd:choice>
			<xsd:element ref="ssqml:BlobSubstringFunction"/>
			<xsd:element ref="ssqml:BlobTrimFunction"/>
			<xsd:element ref="ssqml:BlobOverlayFunction"/>
			<xsd:element ref="ssqml:XmlBinaryStringSerialization"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="BlobValueFunction" type="ssqml:BlobValueFunctionType"/>

<xsd:complexType name="BooleanFactorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:BooleanTest"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BooleanFactor" type="ssqml:BooleanFactorType"/>

<xsd:complexType name="BooleanPredicandType">
	<xsd:choice>
			<xsd:element ref="ssqml:ParenthesizedBooleanValueExpression"/>
			<xsd:element ref="ssqml:NonparenthesizedValueExpressionPrimary"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="BooleanPredicand" type="ssqml:BooleanPredicandType"/>

<xsd:complexType name="BooleanPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:Predicate"/>
			<xsd:element ref="ssqml:BooleanPredicand"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="BooleanPrimary" type="ssqml:BooleanPrimaryType"/>

<xsd:complexType name="BooleanTerm_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:BooleanTerm"/>
			<xsd:element ref="ssqml:AndStaticString"/>
			<xsd:element ref="ssqml:BooleanFactor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BooleanTerm_ISO9075ChoiceGroup1" type="ssqml:BooleanTerm_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="BooleanTermType">
	<xsd:choice>
			<xsd:element ref="ssqml:BooleanFactor"/>
			<xsd:element ref="ssqml:BooleanTerm_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="BooleanTerm" type="ssqml:BooleanTermType"/>

<xsd:complexType name="BooleanTestType">
	<xsd:sequence>
			<xsd:element ref="ssqml:BooleanPrimary"/>
			<xsd:element ref="ssqml:IsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:TruthValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BooleanTest" type="ssqml:BooleanTestType"/>

<xsd:complexType name="BooleanValueExpression_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:BooleanValueExpression"/>
			<xsd:element ref="ssqml:OrStaticString"/>
			<xsd:element ref="ssqml:BooleanTerm"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BooleanValueExpression_ISO9075ChoiceGroup1" type="ssqml:BooleanValueExpression_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="BooleanValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:BooleanTerm"/>
			<xsd:element ref="ssqml:BooleanValueExpression_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="BooleanValueExpression" type="ssqml:BooleanValueExpressionType"/>

<xsd:complexType name="BracketedCommentContentsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CommentCharacterSeparatorItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BracketedCommentContents" type="ssqml:BracketedCommentContentsType"/>

<xsd:complexType name="BracketedCommentIntroducerType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SlashAsterisk"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BracketedCommentIntroducer" type="ssqml:BracketedCommentIntroducerType"/>

<xsd:complexType name="BracketedCommentTerminatorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AsteriskSlash"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BracketedCommentTerminator" type="ssqml:BracketedCommentTerminatorType"/>

<xsd:complexType name="BracketedCommentType">
	<xsd:sequence>
			<xsd:element ref="ssqml:BracketedCommentIntroducer"/>
			<xsd:element ref="ssqml:BracketedCommentContents"/>
			<xsd:element ref="ssqml:BracketedCommentTerminator"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="BracketedComment" type="ssqml:BracketedCommentType"/>

<xsd:complexType name="CallStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CallStaticString"/>
			<xsd:element ref="ssqml:RoutineInvocation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CallStatement" type="ssqml:CallStatementType"/>

<xsd:complexType name="CardinalityExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CardinalityStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CollectionValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CardinalityExpression" type="ssqml:CardinalityExpressionType"/>

<xsd:complexType name="CaseAbbreviation_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NullifStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CaseAbbreviation_ISO9075ChoiceGroup1" type="ssqml:CaseAbbreviation_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="CaseAbbreviation_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CoalesceStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:CommaValueExpressionItemtype" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CaseAbbreviation_ISO9075ChoiceGroup2" type="ssqml:CaseAbbreviation_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="CaseAbbreviationType">
	<xsd:choice>
			<xsd:element ref="ssqml:CaseAbbreviation_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:CaseAbbreviation_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CaseAbbreviation" type="ssqml:CaseAbbreviationType"/>

<xsd:complexType name="CaseExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:CaseAbbreviation"/>
			<xsd:element ref="ssqml:CaseSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CaseExpression" type="ssqml:CaseExpressionType"/>

<xsd:complexType name="CaseOperandType">
	<xsd:choice>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:OverlapsPredicate"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CaseOperand" type="ssqml:CaseOperandType"/>

<xsd:complexType name="CaseSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:SimpleCase"/>
			<xsd:element ref="ssqml:SearchedCase"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CaseSpecification" type="ssqml:CaseSpecificationType"/>

<xsd:complexType name="CaseStatementElseClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ElseStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CaseStatementElseClause" type="ssqml:CaseStatementElseClauseType"/>

<xsd:complexType name="CaseStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:SimpleCaseStatement"/>
			<xsd:element ref="ssqml:SearchedCaseStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CaseStatement" type="ssqml:CaseStatementType"/>

<xsd:complexType name="CastOperandType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:ImplicitlyTypedValueSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CastOperand" type="ssqml:CastOperandType"/>

<xsd:complexType name="CastOptionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CastToDistinct" minOccurs="0"/>
			<xsd:element ref="ssqml:CastToSource" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CastOption" type="ssqml:CastOptionType"/>

<xsd:complexType name="CastSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CastStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CastOperand"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:CastTarget"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CastSpecification" type="ssqml:CastSpecificationType"/>

<xsd:complexType name="CastTargetType">
	<xsd:choice>
			<xsd:element ref="ssqml:DomainName"/>
			<xsd:element ref="ssqml:DataType"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CastTarget" type="ssqml:CastTargetType"/>

<xsd:complexType name="CastToDistinctType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CastStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SourceAsDistinctStaticString"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:WithStaticString"/>
			<xsd:element ref="ssqml:CastToDistinctIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CastToDistinct" type="ssqml:CastToDistinctType"/>

<xsd:complexType name="CastToRefType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CastStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SourceAsRefStaticString"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:WithStaticString"/>
			<xsd:element ref="ssqml:CastToRefIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CastToRef" type="ssqml:CastToRefType"/>

<xsd:complexType name="CastToSourceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CastStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:DistinctAsSourceStaticString"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:WithStaticString"/>
			<xsd:element ref="ssqml:CastToSourceIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CastToSource" type="ssqml:CastToSourceType"/>

<xsd:complexType name="CastToTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CastStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:RefAsSourceStaticString"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:WithStaticString"/>
			<xsd:element ref="ssqml:CastToTypeIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CastToType" type="ssqml:CastToTypeType"/>

<xsd:complexType name="CatalogNameCharacteristicType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CatalogStaticString"/>
			<xsd:element ref="ssqml:ValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CatalogNameCharacteristic" type="ssqml:CatalogNameCharacteristicType"/>

<xsd:complexType name="CeilingFunctionType">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:CeilStaticString"/>
			<xsd:element ref="ssqml:CeilingStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NumericValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CeilingFunction" type="ssqml:CeilingFunctionType"/>

<xsd:complexType name="CharLengthExpressionType">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:Char_lengthStaticString"/>
			<xsd:element ref="ssqml:Character_lengthStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:StringValueExpression"/>
			<xsd:element ref="ssqml:UsingStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharLengthUnits" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharLengthExpression" type="ssqml:CharLengthExpressionType"/>

<xsd:complexType name="CharacterEnumerationExcludeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterEnumeration"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterEnumerationExclude" type="ssqml:CharacterEnumerationExcludeType"/>

<xsd:complexType name="CharacterEnumerationIncludeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterEnumeration"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterEnumerationInclude" type="ssqml:CharacterEnumerationIncludeType"/>

<xsd:complexType name="CharacterEnumeration_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterSpecifier2"/>
			<xsd:element ref="ssqml:MinusSign"/>
			<xsd:element ref="ssqml:CharacterSpecifier3"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterEnumeration_ISO9075ChoiceGroup1" type="ssqml:CharacterEnumeration_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="CharacterEnumeration_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftBracket"/>
			<xsd:element ref="ssqml:Colon2"/>
			<xsd:element ref="ssqml:RegularCharacterSetIdentifier"/>
			<xsd:element ref="ssqml:Colon3"/>
			<xsd:element ref="ssqml:RightBracket"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterEnumeration_ISO9075ChoiceGroup2" type="ssqml:CharacterEnumeration_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="CharacterEnumerationType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterSpecifier"/>
			<xsd:element ref="ssqml:CharacterEnumeration_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:CharacterEnumeration_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CharacterEnumeration" type="ssqml:CharacterEnumerationType"/>

<xsd:complexType name="CharacterFactorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterPrimary"/>
			<xsd:element ref="ssqml:CollateClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterFactor" type="ssqml:CharacterFactorType"/>

<xsd:complexType name="CharacterLikePredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:LikeStaticString"/>
			<xsd:element ref="ssqml:CharacterPattern"/>
			<xsd:element ref="ssqml:EscapeStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:EscapeCharacter" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterLikePredicatePart2" type="ssqml:CharacterLikePredicatePart2Type"/>

<xsd:complexType name="CharacterLikePredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:CharacterLikePredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterLikePredicate" type="ssqml:CharacterLikePredicateType"/>

<xsd:complexType name="CharacterOverlayFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OverlayStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:PlacingStaticString"/>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:StartPosition"/>
			<xsd:element ref="ssqml:ForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:StringLength" minOccurs="0"/>
			<xsd:element ref="ssqml:UsingStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharLengthUnits" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterOverlayFunction" type="ssqml:CharacterOverlayFunctionType"/>

<xsd:complexType name="CharacterPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:StringValueFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CharacterPrimary" type="ssqml:CharacterPrimaryType"/>

<xsd:complexType name="CharacterRepresentationType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonquoteCharacter"/>
			<xsd:element ref="ssqml:QuoteSymbol"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CharacterRepresentation" type="ssqml:CharacterRepresentationType"/>

<xsd:complexType name="CharacterSetDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateCharacterSetStaticString"/>
			<xsd:element ref="ssqml:CharacterSetName"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharacterSetSource"/>
			<xsd:element ref="ssqml:CollateClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterSetDefinition" type="ssqml:CharacterSetDefinitionType"/>

<xsd:complexType name="CharacterSetNameCharacteristicType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NamesStaticString"/>
			<xsd:element ref="ssqml:ValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterSetNameCharacteristic" type="ssqml:CharacterSetNameCharacteristicType"/>

<xsd:complexType name="CharacterSetNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaName" minOccurs="0"/>
			<xsd:element ref="ssqml:Period" minOccurs="0"/>
			<xsd:element ref="ssqml:SqlLanguageIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterSetName" type="ssqml:CharacterSetNameType"/>

<xsd:complexType name="CharacterSetSourceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GetStaticString"/>
			<xsd:element ref="ssqml:CharacterSetSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterSetSource" type="ssqml:CharacterSetSourceType"/>

<xsd:complexType name="CharacterSetSpecificationListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterSetSpecification"/>
			<xsd:element ref="ssqml:CommaCharacterSetSpecificationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterSetSpecificationList" type="ssqml:CharacterSetSpecificationListType"/>

<xsd:complexType name="CharacterSetSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:StandardCharacterSetName"/>
			<xsd:element ref="ssqml:ImplementationDefinedCharacterSetName"/>
			<xsd:element ref="ssqml:UserDefinedCharacterSetName"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CharacterSetSpecification" type="ssqml:CharacterSetSpecificationType"/>

<xsd:complexType name="CharacterSpecifierType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonEscapedCharacter"/>
			<xsd:element ref="ssqml:EscapedCharacter"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CharacterSpecifier" type="ssqml:CharacterSpecifierType"/>
<xsd:element name="CharacterSpecifier2" type="ssqml:CharacterSpecifierType"/>
<xsd:element name="CharacterSpecifier3" type="ssqml:CharacterSpecifierType"/>

<xsd:complexType name="CharacterStringLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Introducer" minOccurs="0"/>
			<xsd:element ref="ssqml:CharacterSetSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:CharacterRepresentation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:SeparatorQuoteCharacterRepresentationQuoteItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterStringLiteral" type="ssqml:CharacterStringLiteralType"/>

<xsd:complexType name="CharacterStringType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:Length" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterStringType_ISO9075ChoiceGroup1" type="ssqml:CharacterStringType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="CharacterStringType_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:Length" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterStringType_ISO9075ChoiceGroup2" type="ssqml:CharacterStringType_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="CharacterStringType_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterVaryingStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:Length"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterStringType_ISO9075ChoiceGroup3" type="ssqml:CharacterStringType_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="CharacterStringType_ISO9075ChoiceGroup4Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharVaryingStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:Length"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterStringType_ISO9075ChoiceGroup4" type="ssqml:CharacterStringType_ISO9075ChoiceGroup4Type"/>

<xsd:complexType name="CharacterStringType_ISO9075ChoiceGroup5Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:VarcharStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:Length"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterStringType_ISO9075ChoiceGroup5" type="ssqml:CharacterStringType_ISO9075ChoiceGroup5Type"/>

<xsd:complexType name="CharacterStringType_ISO9075ChoiceGroup6Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterLargeObjectStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:LargeObjectLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterStringType_ISO9075ChoiceGroup6" type="ssqml:CharacterStringType_ISO9075ChoiceGroup6Type"/>

<xsd:complexType name="CharacterStringType_ISO9075ChoiceGroup7Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharLargeObjectStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:LargeObjectLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterStringType_ISO9075ChoiceGroup7" type="ssqml:CharacterStringType_ISO9075ChoiceGroup7Type"/>

<xsd:complexType name="CharacterStringType_ISO9075ChoiceGroup8Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ClobStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:LargeObjectLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterStringType_ISO9075ChoiceGroup8" type="ssqml:CharacterStringType_ISO9075ChoiceGroup8Type"/>

<xsd:complexType name="CharacterStringTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterStringType_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:CharacterStringType_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:CharacterStringType_ISO9075ChoiceGroup3"/>
			<xsd:element ref="ssqml:CharacterStringType_ISO9075ChoiceGroup4"/>
			<xsd:element ref="ssqml:CharacterStringType_ISO9075ChoiceGroup5"/>
			<xsd:element ref="ssqml:CharacterStringType_ISO9075ChoiceGroup6"/>
			<xsd:element ref="ssqml:CharacterStringType_ISO9075ChoiceGroup7"/>
			<xsd:element ref="ssqml:CharacterStringType_ISO9075ChoiceGroup8"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CharacterStringType" type="ssqml:CharacterStringTypeType"/>

<xsd:complexType name="CharacterSubstringFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SubstringStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:StartPosition"/>
			<xsd:element ref="ssqml:ForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:StringLength" minOccurs="0"/>
			<xsd:element ref="ssqml:UsingStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharLengthUnits" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterSubstringFunction" type="ssqml:CharacterSubstringFunctionType"/>

<xsd:complexType name="CharacterTransliterationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TranslateStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:UsingStaticString"/>
			<xsd:element ref="ssqml:TransliterationName"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CharacterTransliteration" type="ssqml:CharacterTransliterationType"/>

<xsd:complexType name="CharacterValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:Concatenation"/>
			<xsd:element ref="ssqml:CharacterFactor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CharacterValueExpression" type="ssqml:CharacterValueExpressionType"/>

<xsd:complexType name="CharacterValueFunctionType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterSubstringFunction"/>
			<xsd:element ref="ssqml:RegularExpressionSubstringFunction"/>
			<xsd:element ref="ssqml:Fold"/>
			<xsd:element ref="ssqml:Transcoding"/>
			<xsd:element ref="ssqml:CharacterTransliteration"/>
			<xsd:element ref="ssqml:TrimFunction"/>
			<xsd:element ref="ssqml:CharacterOverlayFunction"/>
			<xsd:element ref="ssqml:NormalizeFunction"/>
			<xsd:element ref="ssqml:SpecificTypeMethod"/>
			<xsd:element ref="ssqml:XmlCharacterStringSerialization"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CharacterValueFunction" type="ssqml:CharacterValueFunctionType"/>

<xsd:complexType name="CheckConstraintDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CheckStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:WithStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlLexicallyScopedOptions" minOccurs="0"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CheckConstraintDefinition" type="ssqml:CheckConstraintDefinitionType"/>

<xsd:complexType name="CloseStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CloseStaticString"/>
			<xsd:element ref="ssqml:CursorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CloseStatement" type="ssqml:CloseStatementType"/>

<xsd:complexType name="CollateClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CollateStaticString"/>
			<xsd:element ref="ssqml:CollationName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CollateClause" type="ssqml:CollateClauseType"/>

<xsd:complexType name="CollationDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateCollationStaticString"/>
			<xsd:element ref="ssqml:CollationName"/>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:CharacterSetSpecification"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:ExistingCollationName"/>
			<xsd:element ref="ssqml:PadCharacteristic" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CollationDefinition" type="ssqml:CollationDefinitionType"/>

<xsd:complexType name="CollectionDerivedTableType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnnestStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CollectionValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:WithOrdinalityStaticString" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CollectionDerivedTable" type="ssqml:CollectionDerivedTableType"/>

<xsd:complexType name="CollectionTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:ArrayType"/>
			<xsd:element ref="ssqml:MultisetType"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CollectionType" type="ssqml:CollectionTypeType"/>

<xsd:complexType name="CollectionValueConstructorType">
	<xsd:choice>
			<xsd:element ref="ssqml:ArrayValueConstructor"/>
			<xsd:element ref="ssqml:MultisetValueConstructor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CollectionValueConstructor" type="ssqml:CollectionValueConstructorType"/>

<xsd:complexType name="CollectionValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:ArrayValueExpression"/>
			<xsd:element ref="ssqml:MultisetValueExpression"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CollectionValueExpression" type="ssqml:CollectionValueExpressionType"/>

<xsd:complexType name="ColumnConstraintDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConstraintNameDefinition" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnConstraint"/>
			<xsd:element ref="ssqml:ConstraintCharacteristics" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ColumnConstraintDefinition" type="ssqml:ColumnConstraintDefinitionType"/>

<xsd:complexType name="ColumnConstraintType">
	<xsd:choice>
			<xsd:element ref="ssqml:NotNullStaticString"/>
			<xsd:element ref="ssqml:UniqueSpecification"/>
			<xsd:element ref="ssqml:ReferencesSpecification"/>
			<xsd:element ref="ssqml:CheckConstraintDefinition"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ColumnConstraint" type="ssqml:ColumnConstraintType"/>

<xsd:complexType name="ColumnDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnName"/>
		<xsd:choice>
			<xsd:element ref="ssqml:DataType" minOccurs="0"/>
			<xsd:element ref="ssqml:DomainName" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:ReferenceScopeCheck" minOccurs="0"/>
		<xsd:choice>
			<xsd:element ref="ssqml:DefaultClause" minOccurs="0"/>
			<xsd:element ref="ssqml:IdentityColumnSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:GenerationClause" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnConstraintDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:CollateClause" minOccurs="0"/>
		</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ColumnDefinition" type="ssqml:ColumnDefinitionType"/>

<xsd:complexType name="ColumnNameListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnName"/>
			<xsd:element ref="ssqml:CommaColumnNameItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ColumnNameList" type="ssqml:ColumnNameListType"/>

<xsd:complexType name="ColumnOptionListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ScopeClause" minOccurs="0"/>
			<xsd:element ref="ssqml:DefaultClause" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnConstraintDefinition" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ColumnOptionList" type="ssqml:ColumnOptionListType"/>

<xsd:complexType name="ColumnOptionsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnName"/>
			<xsd:element ref="ssqml:WithOptionsStaticString"/>
			<xsd:element ref="ssqml:ColumnOptionList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ColumnOptions" type="ssqml:ColumnOptionsType"/>

<xsd:complexType name="ColumnReference_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ModuleStaticString"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:QualifiedIdentifier"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:ColumnName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ColumnReference_ISO9075ChoiceGroup1" type="ssqml:ColumnReference_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ColumnReferenceType">
	<xsd:choice>
			<xsd:element ref="ssqml:BasicIdentifierChain"/>
			<xsd:element ref="ssqml:ColumnReference_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ColumnReference" type="ssqml:ColumnReferenceType"/>

<xsd:complexType name="CommaActionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:Action"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaActionItemtype" type="ssqml:CommaActionItemtypeType"/>

<xsd:complexType name="CommaAlterTransformActionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:AlterTransformAction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaAlterTransformActionItemtype" type="ssqml:CommaAlterTransformActionItemtypeType"/>

<xsd:complexType name="CommaArrayElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ArrayElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaArrayElementItemtype" type="ssqml:CommaArrayElementItemtypeType"/>

<xsd:complexType name="CommaAssignmentTargetItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:AssignmentTarget"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaAssignmentTargetItemtype" type="ssqml:CommaAssignmentTargetItemtypeType"/>

<xsd:complexType name="CommaAttributeNameItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:AttributeName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaAttributeNameItemtype" type="ssqml:CommaAttributeNameItemtypeType"/>

<xsd:complexType name="CommaCharacterSetSpecificationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:CharacterSetSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaCharacterSetSpecificationItemtype" type="ssqml:CommaCharacterSetSpecificationItemtypeType"/>

<xsd:complexType name="CommaColumnNameItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ColumnName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaColumnNameItemtype" type="ssqml:CommaColumnNameItemtypeType"/>

<xsd:complexType name="CommaColumnReferenceItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ColumnReference"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaColumnReferenceItemtype" type="ssqml:CommaColumnReferenceItemtypeType"/>

<xsd:complexType name="CommaConditionInformationItemItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ConditionInformationItem"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaConditionInformationItemItemtype" type="ssqml:CommaConditionInformationItemItemtypeType"/>

<xsd:complexType name="CommaConditionValueItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ConditionValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaConditionValueItemtype" type="ssqml:CommaConditionValueItemtypeType"/>

<xsd:complexType name="CommaConstraintNameItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ConstraintName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaConstraintNameItemtype" type="ssqml:CommaConstraintNameItemtypeType"/>

<xsd:complexType name="CommaContextuallyTypedRowValueConstructorElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueConstructorElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaContextuallyTypedRowValueConstructorElementItemtype" type="ssqml:CommaContextuallyTypedRowValueConstructorElementItemtypeType"/>

<xsd:complexType name="CommaContextuallyTypedRowValueExpressionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaContextuallyTypedRowValueExpressionItemtype" type="ssqml:CommaContextuallyTypedRowValueExpressionItemtypeType"/>

<xsd:complexType name="CommaCycleColumnItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:CycleColumn"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaCycleColumnItemtype" type="ssqml:CommaCycleColumnItemtypeType"/>

<xsd:complexType name="CommaDataTypeItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:DataType"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaDataTypeItemtype" type="ssqml:CommaDataTypeItemtypeType"/>

<xsd:complexType name="CommaFieldDefinitionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:FieldDefinition"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaFieldDefinitionItemtype" type="ssqml:CommaFieldDefinitionItemtypeType"/>

<xsd:complexType name="CommaForestElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ForestElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaForestElementItemtype" type="ssqml:CommaForestElementItemtypeType"/>

<xsd:complexType name="CommaGetHeaderInformationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:GetHeaderInformation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaGetHeaderInformationItemtype" type="ssqml:CommaGetHeaderInformationItemtypeType"/>

<xsd:complexType name="CommaGetItemInformationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:GetItemInformation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaGetItemInformationItemtype" type="ssqml:CommaGetItemInformationItemtypeType"/>

<xsd:complexType name="CommaGranteeItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:Grantee"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaGranteeItemtype" type="ssqml:CommaGranteeItemtypeType"/>

<xsd:complexType name="CommaGroupSpecificationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:GroupSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaGroupSpecificationItemtype" type="ssqml:CommaGroupSpecificationItemtypeType"/>

<xsd:complexType name="CommaGroupingColumnReferenceItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:GroupingColumnReference"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaGroupingColumnReferenceItemtype" type="ssqml:CommaGroupingColumnReferenceItemtypeType"/>

<xsd:complexType name="CommaGroupingElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:GroupingElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaGroupingElementItemtype" type="ssqml:CommaGroupingElementItemtypeType"/>

<xsd:complexType name="CommaGroupingSetItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:GroupingSet"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaGroupingSetItemtype" type="ssqml:CommaGroupingSetItemtypeType"/>

<xsd:complexType name="CommaHostParameterDeclarationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:HostParameterDeclaration"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaHostParameterDeclarationItemtype" type="ssqml:CommaHostParameterDeclarationItemtypeType"/>

<xsd:complexType name="CommaIntoArgumentItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:IntoArgument"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaIntoArgumentItemtype" type="ssqml:CommaIntoArgumentItemtypeType"/>

<xsd:complexType name="CommaLocatorReferenceItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:LocatorReference"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaLocatorReferenceItemtype" type="ssqml:CommaLocatorReferenceItemtypeType"/>

<xsd:complexType name="CommaMemberItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:Member"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaMemberItemtype" type="ssqml:CommaMemberItemtypeType"/>

<xsd:complexType name="CommaMergeInsertValueElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:MergeInsertValueElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaMergeInsertValueElementItemtype" type="ssqml:CommaMergeInsertValueElementItemtypeType"/>

<xsd:complexType name="CommaMethodSpecificationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:MethodSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaMethodSpecificationItemtype" type="ssqml:CommaMethodSpecificationItemtypeType"/>

<xsd:complexType name="CommaMultisetElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:MultisetElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaMultisetElementItemtype" type="ssqml:CommaMultisetElementItemtypeType"/>

<xsd:complexType name="CommaOrdinaryGroupingSetItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:OrdinaryGroupingSet"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaOrdinaryGroupingSetItemtype" type="ssqml:CommaOrdinaryGroupingSetItemtypeType"/>

<xsd:complexType name="CommaRoleGrantedItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:RoleGranted"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaRoleGrantedItemtype" type="ssqml:CommaRoleGrantedItemtypeType"/>

<xsd:complexType name="CommaRoleRevokedItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:RoleRevoked"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaRoleRevokedItemtype" type="ssqml:CommaRoleRevokedItemtypeType"/>

<xsd:complexType name="CommaRowValueConstructorElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:RowValueConstructorElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaRowValueConstructorElementItemtype" type="ssqml:CommaRowValueConstructorElementItemtypeType"/>

<xsd:complexType name="CommaRowValueExpressionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:RowValueExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaRowValueExpressionItemtype" type="ssqml:CommaRowValueExpressionItemtypeType"/>

<xsd:complexType name="CommaSchemaNameItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SchemaName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSchemaNameItemtype" type="ssqml:CommaSchemaNameItemtypeType"/>

<xsd:complexType name="CommaSelectSublistItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SelectSublist"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSelectSublistItemtype" type="ssqml:CommaSelectSublistItemtypeType"/>

<xsd:complexType name="CommaSessionCharacteristicItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SessionCharacteristic"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSessionCharacteristicItemtype" type="ssqml:CommaSessionCharacteristicItemtypeType"/>

<xsd:complexType name="CommaSetClauseItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SetClause"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSetClauseItemtype" type="ssqml:CommaSetClauseItemtypeType"/>

<xsd:complexType name="CommaSetHeaderInformationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SetHeaderInformation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSetHeaderInformationItemtype" type="ssqml:CommaSetHeaderInformationItemtypeType"/>

<xsd:complexType name="CommaSetItemInformationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SetItemInformation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSetItemInformationItemtype" type="ssqml:CommaSetItemInformationItemtypeType"/>

<xsd:complexType name="CommaSetTargetItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SetTarget"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSetTargetItemtype" type="ssqml:CommaSetTargetItemtypeType"/>

<xsd:complexType name="CommaSignalInformationItemItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SignalInformationItem"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSignalInformationItemItemtype" type="ssqml:CommaSignalInformationItemItemtypeType"/>

<xsd:complexType name="CommaSortSpecificationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SortSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSortSpecificationItemtype" type="ssqml:CommaSortSpecificationItemtypeType"/>

<xsd:complexType name="CommaSpecificRoutineDesignatorItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SpecificRoutineDesignator"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSpecificRoutineDesignatorItemtype" type="ssqml:CommaSpecificRoutineDesignatorItemtypeType"/>

<xsd:complexType name="CommaSqlArgumentItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SqlArgument"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSqlArgumentItemtype" type="ssqml:CommaSqlArgumentItemtypeType"/>

<xsd:complexType name="CommaSqlParameterDeclarationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SqlParameterDeclaration"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSqlParameterDeclarationItemtype" type="ssqml:CommaSqlParameterDeclarationItemtypeType"/>

<xsd:complexType name="CommaSqlVariableNameItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:SqlVariableName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaSqlVariableNameItemtype" type="ssqml:CommaSqlVariableNameItemtypeType"/>

<xsd:complexType name="CommaStatementInformationItemItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:StatementInformationItem"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaStatementInformationItemItemtype" type="ssqml:CommaStatementInformationItemItemtypeType"/>

<xsd:complexType name="CommaTableElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:TableElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaTableElementItemtype" type="ssqml:CommaTableElementItemtypeType"/>

<xsd:complexType name="CommaTableFunctionColumnListElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:TableFunctionColumnListElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaTableFunctionColumnListElementItemtype" type="ssqml:CommaTableFunctionColumnListElementItemtypeType"/>

<xsd:complexType name="CommaTableReferenceItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:TableReference"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaTableReferenceItemtype" type="ssqml:CommaTableReferenceItemtypeType"/>

<xsd:complexType name="CommaTableRowValueExpressionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:TableRowValueExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaTableRowValueExpressionItemtype" type="ssqml:CommaTableRowValueExpressionItemtypeType"/>

<xsd:complexType name="CommaTargetSpecificationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:TargetSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaTargetSpecificationItemtype" type="ssqml:CommaTargetSpecificationItemtypeType"/>

<xsd:complexType name="CommaTransactionModeItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:TransactionMode"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaTransactionModeItemtype" type="ssqml:CommaTransactionModeItemtypeType"/>

<xsd:complexType name="CommaUserDefinedTypeSpecificationItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:UserDefinedTypeSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaUserDefinedTypeSpecificationItemtype" type="ssqml:CommaUserDefinedTypeSpecificationItemtypeType"/>

<xsd:complexType name="CommaUsingArgumentItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:UsingArgument"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaUsingArgumentItemtype" type="ssqml:CommaUsingArgumentItemtypeType"/>

<xsd:complexType name="CommaValueExpressionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ValueExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaValueExpressionItemtype" type="ssqml:CommaValueExpressionItemtypeType"/>

<xsd:complexType name="CommaViewElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ViewElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaViewElementItemtype" type="ssqml:CommaViewElementItemtypeType"/>

<xsd:complexType name="CommaWhenOperandItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:WhenOperand"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaWhenOperandItemtype" type="ssqml:CommaWhenOperandItemtypeType"/>

<xsd:complexType name="CommaWindowDefinitionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:WindowDefinition"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaWindowDefinitionItemtype" type="ssqml:CommaWindowDefinitionItemtypeType"/>

<xsd:complexType name="CommaWindowPartitionColumnReferenceItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:WindowPartitionColumnReference"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaWindowPartitionColumnReferenceItemtype" type="ssqml:CommaWindowPartitionColumnReferenceItemtypeType"/>

<xsd:complexType name="CommaWithListElementItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:WithListElement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaWithListElementItemtype" type="ssqml:CommaWithListElementItemtypeType"/>

<xsd:complexType name="CommaXmlAttributeItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:XmlAttribute"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaXmlAttributeItemtype" type="ssqml:CommaXmlAttributeItemtypeType"/>

<xsd:complexType name="CommaXmlElementContentItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:XmlElementContent"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaXmlElementContentItemtype" type="ssqml:CommaXmlElementContentItemtypeType"/>

<xsd:complexType name="CommaXmlNamespaceDeclarationItemItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:XmlNamespaceDeclarationItem"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaXmlNamespaceDeclarationItemItemtype" type="ssqml:CommaXmlNamespaceDeclarationItemItemtypeType"/>

<xsd:complexType name="CommaXmlQueryArgumentItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:XmlQueryArgument"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaXmlQueryArgumentItemtype" type="ssqml:CommaXmlQueryArgumentItemtypeType"/>

<xsd:complexType name="CommaXmlTableColumnDefinitionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:XmlTableColumnDefinition"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaXmlTableColumnDefinitionItemtype" type="ssqml:CommaXmlTableColumnDefinitionItemtypeType"/>

<xsd:complexType name="CommaXmlValueExpressionItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:XmlValueExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommaXmlValueExpressionItemtype" type="ssqml:CommaXmlValueExpressionItemtypeType"/>

<xsd:complexType name="CommentCharacterSeparatorItemtypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:CommentCharacter"/>
			<xsd:element ref="ssqml:Separator"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CommentCharacterSeparatorItemtype" type="ssqml:CommentCharacterSeparatorItemtypeType"/>

<xsd:complexType name="CommentCharacterType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonquoteCharacter"/>
			<xsd:element ref="ssqml:Quote"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CommentCharacter" type="ssqml:CommentCharacterType"/>

<xsd:complexType name="CommentWhiteSpaceItemtypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:Comment"/>
			<xsd:element ref="ssqml:WhiteSpace"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CommentWhiteSpaceItemtype" type="ssqml:CommentWhiteSpaceItemtypeType"/>

<xsd:complexType name="CommentType">
	<xsd:choice>
			<xsd:element ref="ssqml:SimpleComment"/>
			<xsd:element ref="ssqml:BracketedComment"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Comment" type="ssqml:CommentType"/>

<xsd:complexType name="CommitStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CommitStaticString"/>
			<xsd:element ref="ssqml:WorkStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:AndStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:NoStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ChainStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommitStatement" type="ssqml:CommitStatementType"/>

<xsd:complexType name="CommonSequenceGeneratorOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:SequenceGeneratorStartWithOption"/>
			<xsd:element ref="ssqml:BasicSequenceGeneratorOption"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CommonSequenceGeneratorOption" type="ssqml:CommonSequenceGeneratorOptionType"/>

<xsd:complexType name="CommonSequenceGeneratorOptionsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CommonSequenceGeneratorOption" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CommonSequenceGeneratorOptions" type="ssqml:CommonSequenceGeneratorOptionsType"/>

<xsd:complexType name="CommonValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:NumericValueExpression"/>
			<xsd:element ref="ssqml:StringValueExpression"/>
			<xsd:element ref="ssqml:DatetimeValueExpression"/>
			<xsd:element ref="ssqml:IntervalValueExpression"/>
			<xsd:element ref="ssqml:UserDefinedTypeValueExpression"/>
			<xsd:element ref="ssqml:ReferenceValueExpression"/>
			<xsd:element ref="ssqml:CollectionValueExpression"/>
			<xsd:element ref="ssqml:XmlValueExpression"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CommonValueExpression" type="ssqml:CommonValueExpressionType"/>

<xsd:complexType name="CompOpType">
	<xsd:choice>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:NotEqualsOperator"/>
			<xsd:element ref="ssqml:LessThanOperator"/>
			<xsd:element ref="ssqml:GreaterThanOperator"/>
			<xsd:element ref="ssqml:LessThanOrEqualsOperator"/>
			<xsd:element ref="ssqml:GreaterThanOrEqualsOperator"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CompOp" type="ssqml:CompOpType"/>

<xsd:complexType name="ComparisonPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CompOp"/>
			<xsd:element ref="ssqml:RowValuePredicand"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ComparisonPredicatePart2" type="ssqml:ComparisonPredicatePart2Type"/>

<xsd:complexType name="ComparisonPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:ComparisonPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ComparisonPredicate" type="ssqml:ComparisonPredicateType"/>

<xsd:complexType name="CompoundStatement_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:BeginningLabel"/>
	 	<xsd:element ref="ssqml:Colon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CompoundStatement_ISO9075ChoiceGroup1" type="ssqml:CompoundStatement_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="CompoundStatement_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
		<xsd:element ref="ssqml:AtomicStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CompoundStatement_ISO9075ChoiceGroup2" type="ssqml:CompoundStatement_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="CompoundStatement_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:DeclareStaticString"/>
		<xsd:element ref="ssqml:XmlLexicallyScopedOptions"/>
		<xsd:element ref="ssqml:Semicolon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CompoundStatement_ISO9075ChoiceGroup3" type="ssqml:CompoundStatement_ISO9075ChoiceGroup3Type"/>


<xsd:complexType name="CompoundStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CompoundStatement_ISO9075ChoiceGroup1" minOccurs="0"/>
			<xsd:element ref="ssqml:BeginStaticString"/>
			<xsd:element ref="ssqml:CompoundStatement_ISO9075ChoiceGroup2" minOccurs="0"/>
			<xsd:element ref="ssqml:CompoundStatement_ISO9075ChoiceGroup3" minOccurs="0"/>
			<xsd:element ref="ssqml:LocalDeclarationList" minOccurs="0"/>
			<xsd:element ref="ssqml:LocalCursorDeclarationList" minOccurs="0"/>
			<xsd:element ref="ssqml:LocalHandlerDeclarationList" minOccurs="0"/>
			<xsd:element ref="ssqml:SqlStatementList" minOccurs="0"/>
			<xsd:element ref="ssqml:EndStaticString"/>
			<xsd:element ref="ssqml:EndingLabel" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CompoundStatement" type="ssqml:CompoundStatementType"/>

<xsd:complexType name="ConcatenationOperatorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:VerticalBarVerticalBar"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConcatenationOperator" type="ssqml:ConcatenationOperatorType"/>

<xsd:complexType name="ConcatenationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:ConcatenationOperator"/>
			<xsd:element ref="ssqml:CharacterFactor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Concatenation" type="ssqml:ConcatenationType"/>

<xsd:complexType name="ConditionDeclarationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeclareStaticString"/>
			<xsd:element ref="ssqml:ConditionName"/>
			<xsd:element ref="ssqml:ConditionStaticString"/>
			<xsd:element ref="ssqml:ForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SqlstateValue" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConditionDeclaration" type="ssqml:ConditionDeclarationType"/>

<xsd:complexType name="ConditionInformationItemType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SimpleTargetSpecification"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:ConditionInformationItemName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConditionInformationItem" type="ssqml:ConditionInformationItemType"/>

<xsd:complexType name="ConditionInformationType">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:ExceptionStaticString"/>
			<xsd:element ref="ssqml:ConditionStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:ConditionNumber"/>
			<xsd:element ref="ssqml:ConditionInformationItem"/>
			<xsd:element ref="ssqml:CommaConditionInformationItemItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConditionInformation" type="ssqml:ConditionInformationType"/>

<xsd:complexType name="ConditionValueListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConditionValue"/>
			<xsd:element ref="ssqml:CommaConditionValueItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConditionValueList" type="ssqml:ConditionValueListType"/>

<xsd:complexType name="ConditionValueType">
	<xsd:choice>
			<xsd:element ref="ssqml:SqlstateValue"/>
			<xsd:element ref="ssqml:ConditionName"/>
			<xsd:element ref="ssqml:SqlexceptionStaticString"/>
			<xsd:element ref="ssqml:SqlwarningStaticString"/>
			<xsd:element ref="ssqml:NotFoundStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ConditionValue" type="ssqml:ConditionValueType"/>

<xsd:complexType name="ConnectStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConnectToStaticString"/>
			<xsd:element ref="ssqml:ConnectionTarget"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConnectStatement" type="ssqml:ConnectStatementType"/>

<xsd:complexType name="ConnectionObjectType">
	<xsd:choice>
			<xsd:element ref="ssqml:DefaultStaticString"/>
			<xsd:element ref="ssqml:ConnectionName"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ConnectionObject" type="ssqml:ConnectionObjectType"/>

<xsd:complexType name="ConnectionTarget_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SqlServerName"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ConnectionName" minOccurs="0"/>
			<xsd:element ref="ssqml:UserStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ConnectionUserName" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConnectionTarget_ISO9075ChoiceGroup1" type="ssqml:ConnectionTarget_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ConnectionTargetType">
	<xsd:choice>
			<xsd:element ref="ssqml:ConnectionTarget_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:DefaultStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ConnectionTarget" type="ssqml:ConnectionTargetType"/>

<xsd:complexType name="ConstraintCharacteristics_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConstraintCheckTime"/>
			<xsd:element ref="ssqml:ConstraintCharacteristics_ISO9075ChoiceGroup3" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConstraintCharacteristics_ISO9075ChoiceGroup1" type="ssqml:ConstraintCharacteristics_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ConstraintCharacteristics_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DeferrableStaticString"/>
			<xsd:element ref="ssqml:ConstraintCheckTime" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConstraintCharacteristics_ISO9075ChoiceGroup2" type="ssqml:ConstraintCharacteristics_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="ConstraintCharacteristics_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
		<xsd:element ref="ssqml:DeferrableStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConstraintCharacteristics_ISO9075ChoiceGroup3" type="ssqml:ConstraintCharacteristics_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="ConstraintCharacteristicsType">
	<xsd:choice>
			<xsd:element ref="ssqml:ConstraintCharacteristics_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:ConstraintCharacteristics_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ConstraintCharacteristics" type="ssqml:ConstraintCharacteristicsType"/>

<xsd:complexType name="ConstraintNameDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConstraintStaticString"/>
			<xsd:element ref="ssqml:ConstraintName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConstraintNameDefinition" type="ssqml:ConstraintNameDefinitionType"/>

<xsd:complexType name="ConstraintNameList_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConstraintName"/>
			<xsd:element ref="ssqml:CommaConstraintNameItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ConstraintNameList_ISO9075ChoiceGroup1" type="ssqml:ConstraintNameList_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ConstraintNameListType">
	<xsd:choice>
			<xsd:element ref="ssqml:AllStaticString"/>
			<xsd:element ref="ssqml:ConstraintNameList_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ConstraintNameList" type="ssqml:ConstraintNameListType"/>

<xsd:complexType name="ContextuallyTypedRowValueConstructorElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueConstructorElement"/>
			<xsd:element ref="ssqml:CommaContextuallyTypedRowValueConstructorElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ContextuallyTypedRowValueConstructorElementList" type="ssqml:ContextuallyTypedRowValueConstructorElementListType"/>

<xsd:complexType name="ContextuallyTypedRowValueConstructorElementType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:ContextuallyTypedValueSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ContextuallyTypedRowValueConstructorElement" type="ssqml:ContextuallyTypedRowValueConstructorElementType"/>

<xsd:complexType name="ContextuallyTypedRowValueConstructor_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueConstructorElement"/>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueConstructorElementList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ContextuallyTypedRowValueConstructor_ISO9075ChoiceGroup1" type="ssqml:ContextuallyTypedRowValueConstructor_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ContextuallyTypedRowValueConstructor_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueConstructorElementList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ContextuallyTypedRowValueConstructor_ISO9075ChoiceGroup2" type="ssqml:ContextuallyTypedRowValueConstructor_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="ContextuallyTypedRowValueConstructorType">
	<xsd:choice>
			<xsd:element ref="ssqml:CommonValueExpression"/>
			<xsd:element ref="ssqml:BooleanValueExpression"/>
			<xsd:element ref="ssqml:ContextuallyTypedValueSpecification"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueConstructor_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueConstructor_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ContextuallyTypedRowValueConstructor" type="ssqml:ContextuallyTypedRowValueConstructorType"/>

<xsd:complexType name="ContextuallyTypedRowValueExpressionListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueExpression"/>
			<xsd:element ref="ssqml:CommaContextuallyTypedRowValueExpressionItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ContextuallyTypedRowValueExpressionList" type="ssqml:ContextuallyTypedRowValueExpressionListType"/>

<xsd:complexType name="ContextuallyTypedRowValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:RowValueSpecialCase"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueConstructor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ContextuallyTypedRowValueExpression" type="ssqml:ContextuallyTypedRowValueExpressionType"/>

<xsd:complexType name="ContextuallyTypedSourceType">
	<xsd:choice>
			<xsd:element ref="ssqml:ImplicitlyTypedValueSpecification"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueExpression"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ContextuallyTypedSource" type="ssqml:ContextuallyTypedSourceType"/>

<xsd:complexType name="ContextuallyTypedTableValueConstructorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValuesStaticString"/>
			<xsd:element ref="ssqml:ContextuallyTypedRowValueExpressionList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ContextuallyTypedTableValueConstructor" type="ssqml:ContextuallyTypedTableValueConstructorType"/>

<xsd:complexType name="ContextuallyTypedValueSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:ImplicitlyTypedValueSpecification"/>
			<xsd:element ref="ssqml:DefaultStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ContextuallyTypedValueSpecification" type="ssqml:ContextuallyTypedValueSpecificationType"/>

<xsd:complexType name="CorrespondingSpecType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CorrespondingStaticString"/>
			<xsd:element ref="ssqml:ByStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:CorrespondingColumnList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CorrespondingSpec" type="ssqml:CorrespondingSpecType"/>

<xsd:complexType name="CrossJoinType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableReference"/>
			<xsd:element ref="ssqml:CrossJoinStaticString"/>
			<xsd:element ref="ssqml:TablePrimary"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CrossJoin" type="ssqml:CrossJoinType"/>

<xsd:complexType name="CubeListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CubeStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:OrdinaryGroupingSetList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CubeList" type="ssqml:CubeListType"/>

<xsd:complexType name="CurrentCollationSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Current_collationStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:StringValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CurrentCollationSpecification" type="ssqml:CurrentCollationSpecificationType"/>

<xsd:complexType name="CurrentLocalTimeValueFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LocaltimeStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:TimePrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CurrentLocalTimeValueFunction" type="ssqml:CurrentLocalTimeValueFunctionType"/>

<xsd:complexType name="CurrentLocalTimestampValueFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LocaltimestampStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:TimestampPrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CurrentLocalTimestampValueFunction" type="ssqml:CurrentLocalTimestampValueFunctionType"/>

<xsd:complexType name="CurrentTimeValueFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Current_timeStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:TimePrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CurrentTimeValueFunction" type="ssqml:CurrentTimeValueFunctionType"/>

<xsd:complexType name="CurrentTimestampValueFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Current_timestampStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:TimestampPrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CurrentTimestampValueFunction" type="ssqml:CurrentTimestampValueFunctionType"/>

<xsd:complexType name="CursorAttributeType">
	<xsd:choice>
			<xsd:element ref="ssqml:CursorSensitivity"/>
			<xsd:element ref="ssqml:CursorScrollability"/>
			<xsd:element ref="ssqml:CursorHoldability"/>
			<xsd:element ref="ssqml:CursorReturnability"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CursorAttribute" type="ssqml:CursorAttributeType"/>

<xsd:complexType name="CursorAttributesType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CursorAttribute" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CursorAttributes" type="ssqml:CursorAttributesType"/>

<xsd:complexType name="CursorIntentType">
	<xsd:choice>
			<xsd:element ref="ssqml:StatementCursor"/>
			<xsd:element ref="ssqml:ResultSetCursor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="CursorIntent" type="ssqml:CursorIntentType"/>

<xsd:complexType name="CursorSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:QueryExpression"/>
			<xsd:element ref="ssqml:OrderByClause" minOccurs="0"/>
			<xsd:element ref="ssqml:UpdatabilityClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CursorSpecification" type="ssqml:CursorSpecificationType"/>

<xsd:complexType name="CycleClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CycleStaticString"/>
			<xsd:element ref="ssqml:CycleColumnList"/>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:CycleMarkColumn"/>
			<xsd:element ref="ssqml:ToStaticString"/>
			<xsd:element ref="ssqml:CycleMarkValue"/>
			<xsd:element ref="ssqml:DefaultStaticString"/>
			<xsd:element ref="ssqml:NonCycleMarkValue"/>
			<xsd:element ref="ssqml:UsingStaticString"/>
			<xsd:element ref="ssqml:PathColumn"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CycleClause" type="ssqml:CycleClauseType"/>
<xsd:element name="CycleClause2" type="ssqml:CycleClauseType"/>

<xsd:complexType name="CycleColumnListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CycleColumn"/>
			<xsd:element ref="ssqml:CommaCycleColumnItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="CycleColumnList" type="ssqml:CycleColumnListType"/>

<xsd:complexType name="DataTypeListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:DataType" minOccurs="0"/>
			<xsd:element ref="ssqml:CommaDataTypeItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DataTypeList" type="ssqml:DataTypeListType"/>

<xsd:complexType name="DataTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:PredefinedType"/>
			<xsd:element ref="ssqml:RowType"/>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:ReferenceType"/>
			<xsd:element ref="ssqml:CollectionType"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DataType" type="ssqml:DataTypeType"/>

<xsd:complexType name="DateLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DateStaticString"/>
			<xsd:element ref="ssqml:DateString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DateLiteral" type="ssqml:DateLiteralType"/>

<xsd:complexType name="DateStringType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:UnquotedDateString"/>
			<xsd:element ref="ssqml:Quote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DateString" type="ssqml:DateStringType"/>

<xsd:complexType name="DateValueType">
	<xsd:sequence>
			<xsd:element ref="ssqml:YearsValue"/>
			<xsd:element ref="ssqml:MinusSign"/>
			<xsd:element ref="ssqml:MonthsValue"/>
			<xsd:element ref="ssqml:MinusSign"/>
			<xsd:element ref="ssqml:DaysValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DateValue" type="ssqml:DateValueType"/>

<xsd:complexType name="DatetimeFactorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DatetimePrimary"/>
			<xsd:element ref="ssqml:TimeZone" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DatetimeFactor" type="ssqml:DatetimeFactorType"/>

<xsd:complexType name="DatetimeLiteralType">
	<xsd:choice>
			<xsd:element ref="ssqml:DateLiteral"/>
			<xsd:element ref="ssqml:TimeLiteral"/>
			<xsd:element ref="ssqml:TimestampLiteral"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DatetimeLiteral" type="ssqml:DatetimeLiteralType"/>

<xsd:complexType name="DatetimePrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:DatetimeValueFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DatetimePrimary" type="ssqml:DatetimePrimaryType"/>

<xsd:complexType name="DatetimeType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:TimeStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:TimePrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
			<xsd:element ref="ssqml:WithOrWithoutTimeZone" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DatetimeType_ISO9075ChoiceGroup1" type="ssqml:DatetimeType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="DatetimeType_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:TimestampStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:TimestampPrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
			<xsd:element ref="ssqml:WithOrWithoutTimeZone" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DatetimeType_ISO9075ChoiceGroup2" type="ssqml:DatetimeType_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="DatetimeTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:DateStaticString"/>
			<xsd:element ref="ssqml:DatetimeType_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:DatetimeType_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DatetimeType" type="ssqml:DatetimeTypeType"/>

<xsd:complexType name="DatetimeValueExpression_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:IntervalValueExpression"/>
			<xsd:element ref="ssqml:PlusSign"/>
			<xsd:element ref="ssqml:DatetimeTerm"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DatetimeValueExpression_ISO9075ChoiceGroup1" type="ssqml:DatetimeValueExpression_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="DatetimeValueExpression_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:DatetimeValueExpression"/>
			<xsd:choice>
				<xsd:element ref="ssqml:DatetimeValueExpression_ISO9075ChoiceGroup3"/>
				<xsd:element ref="ssqml:DatetimeValueExpression_ISO9075ChoiceGroup4"/>	
			</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DatetimeValueExpression_ISO9075ChoiceGroup2" type="ssqml:DatetimeValueExpression_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="DatetimeValueExpression_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:MinusSign"/>
		<xsd:element ref="ssqml:IntervalTerm"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DatetimeValueExpression_ISO9075ChoiceGroup3" type="ssqml:DatetimeValueExpression_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="DatetimeValueExpression_ISO9075ChoiceGroup4Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:PlusSign"/>
		<xsd:element ref="ssqml:IntervalTerm"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DatetimeValueExpression_ISO9075ChoiceGroup4" type="ssqml:DatetimeValueExpression_ISO9075ChoiceGroup4Type"/>

<xsd:complexType name="DatetimeValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:DatetimeTerm"/>
			<xsd:element ref="ssqml:DatetimeValueExpression_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:DatetimeValueExpression_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DatetimeValueExpression" type="ssqml:DatetimeValueExpressionType"/>

<xsd:complexType name="DatetimeValueFunctionType">
	<xsd:choice>
			<xsd:element ref="ssqml:CurrentDateValueFunction"/>
			<xsd:element ref="ssqml:CurrentTimeValueFunction"/>
			<xsd:element ref="ssqml:CurrentTimestampValueFunction"/>
			<xsd:element ref="ssqml:CurrentLocalTimeValueFunction"/>
			<xsd:element ref="ssqml:CurrentLocalTimestampValueFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DatetimeValueFunction" type="ssqml:DatetimeValueFunctionType"/>

<xsd:complexType name="DayTimeIntervalType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DaysValue"/>
			<xsd:element ref="ssqml:Space" minOccurs="0"/>
			<xsd:element ref="ssqml:HoursValue" minOccurs="0"/>
			<xsd:element ref="ssqml:Colon" minOccurs="0"/>
			<xsd:element ref="ssqml:MinutesValue" minOccurs="0"/>
			<xsd:element ref="ssqml:Colon2" minOccurs="0"/>
			<xsd:element ref="ssqml:SecondsValue" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DayTimeInterval" type="ssqml:DayTimeIntervalType"/>

<xsd:complexType name="DayTimeLiteralType">
	<xsd:choice>
			<xsd:element ref="ssqml:DayTimeInterval"/>
			<xsd:element ref="ssqml:TimeInterval"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DayTimeLiteral" type="ssqml:DayTimeLiteralType"/>

<xsd:complexType name="DeallocateDescriptorStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeallocateStaticString"/>
			<xsd:element ref="ssqml:SqlStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DescriptorStaticString"/>
			<xsd:element ref="ssqml:DescriptorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DeallocateDescriptorStatement" type="ssqml:DeallocateDescriptorStatementType"/>

<xsd:complexType name="DeallocatePreparedStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeallocatePrepareStaticString"/>
			<xsd:element ref="ssqml:SqlStatementName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DeallocatePreparedStatement" type="ssqml:DeallocatePreparedStatementType"/>

<xsd:complexType name="DeclareCursorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeclareStaticString"/>
			<xsd:element ref="ssqml:CursorName"/>
			<xsd:element ref="ssqml:CursorSensitivity" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorScrollability" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorStaticString"/>
			<xsd:element ref="ssqml:CursorHoldability" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorReturnability" minOccurs="0"/>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:CursorSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DeclareCursor" type="ssqml:DeclareCursorType"/>

<xsd:complexType name="DefaultClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DefaultStaticString"/>
			<xsd:element ref="ssqml:DefaultOption"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DefaultClause" type="ssqml:DefaultClauseType"/>

<xsd:complexType name="DefaultOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:Literal"/>
			<xsd:element ref="ssqml:DatetimeValueFunction"/>
			<xsd:element ref="ssqml:UserStaticString"/>
			<xsd:element ref="ssqml:Current_userStaticString"/>
			<xsd:element ref="ssqml:Current_roleStaticString"/>
			<xsd:element ref="ssqml:Session_userStaticString"/>
			<xsd:element ref="ssqml:System_userStaticString"/>
			<xsd:element ref="ssqml:Current_pathStaticString"/>
			<xsd:element ref="ssqml:ImplicitlyTypedValueSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DefaultOption" type="ssqml:DefaultOptionType"/>

<xsd:complexType name="DeleteRuleType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OnDeleteStaticString"/>
			<xsd:element ref="ssqml:ReferentialAction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DeleteRule" type="ssqml:DeleteRuleType"/>

<xsd:complexType name="DeleteStatementPositionedType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeleteFromStaticString"/>
			<xsd:element ref="ssqml:TargetTable"/>
			<xsd:element ref="ssqml:WhereCurrentOfStaticString"/>
			<xsd:element ref="ssqml:CursorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DeleteStatementPositioned" type="ssqml:DeleteStatementPositionedType"/>

<xsd:complexType name="DeleteStatementSearchedType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeleteStaticString"/>
			<xsd:element ref="ssqml:WithStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlLexicallyScopedOptions" minOccurs="0"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:TargetTable"/>
			<xsd:element ref="ssqml:WhereStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SearchCondition" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DeleteStatementSearched" type="ssqml:DeleteStatementSearchedType"/>

<xsd:complexType name="DelimitedIdentifierBodyType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DelimitedIdentifierPart" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DelimitedIdentifierBody" type="ssqml:DelimitedIdentifierBodyType"/>

<xsd:complexType name="DelimitedIdentifierPartType">
	<xsd:choice>
			<xsd:element ref="ssqml:NondoublequoteCharacter"/>
			<xsd:element ref="ssqml:DoublequoteSymbol"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DelimitedIdentifierPart" type="ssqml:DelimitedIdentifierPartType"/>

<xsd:complexType name="DelimitedIdentifierType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DoubleQuote"/>
			<xsd:element ref="ssqml:DelimitedIdentifierBody"/>
			<xsd:element ref="ssqml:DoubleQuote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DelimitedIdentifier" type="ssqml:DelimitedIdentifierType"/>

<xsd:complexType name="DelimiterTokenType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterStringLiteral"/>
			<xsd:element ref="ssqml:DateString"/>
			<xsd:element ref="ssqml:TimeString"/>
			<xsd:element ref="ssqml:TimestampString"/>
			<xsd:element ref="ssqml:IntervalString"/>
			<xsd:element ref="ssqml:DelimitedIdentifier"/>
			<xsd:element ref="ssqml:UnicodeDelimitedIdentifier"/>
			<xsd:element ref="ssqml:SqlSpecialCharacter"/>
			<xsd:element ref="ssqml:NotEqualsOperator"/>
			<xsd:element ref="ssqml:GreaterThanOrEqualsOperator"/>
			<xsd:element ref="ssqml:LessThanOrEqualsOperator"/>
			<xsd:element ref="ssqml:ConcatenationOperator"/>
			<xsd:element ref="ssqml:RightArrow"/>
			<xsd:element ref="ssqml:LeftBracketTrigraph"/>
			<xsd:element ref="ssqml:RightBracketTrigraph"/>
			<xsd:element ref="ssqml:DoubleColon"/>
			<xsd:element ref="ssqml:DoublePeriod"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DelimiterToken" type="ssqml:DelimiterTokenType"/>

<xsd:complexType name="DereferenceOperationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ReferenceValueExpression"/>
			<xsd:element ref="ssqml:DereferenceOperator"/>
			<xsd:element ref="ssqml:AttributeName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DereferenceOperation" type="ssqml:DereferenceOperationType"/>

<xsd:complexType name="DerivedColumnType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:AsClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DerivedColumn" type="ssqml:DerivedColumnType"/>

<xsd:complexType name="DerivedRepresentationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RefFromStaticString"/>
			<xsd:element ref="ssqml:ListOfAttributes"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DerivedRepresentation" type="ssqml:DerivedRepresentationType"/>

<xsd:complexType name="DescribeInputStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DescribeInputStaticString"/>
			<xsd:element ref="ssqml:SqlStatementName"/>
			<xsd:element ref="ssqml:UsingDescriptor"/>
			<xsd:element ref="ssqml:NestingOption" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DescribeInputStatement" type="ssqml:DescribeInputStatementType"/>

<xsd:complexType name="DescribeOutputStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DescribeStaticString"/>
			<xsd:element ref="ssqml:OutputStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DescribedObject"/>
			<xsd:element ref="ssqml:UsingDescriptor"/>
			<xsd:element ref="ssqml:NestingOption" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DescribeOutputStatement" type="ssqml:DescribeOutputStatementType"/>

<xsd:complexType name="DescribeStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:DescribeInputStatement"/>
			<xsd:element ref="ssqml:DescribeOutputStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DescribeStatement" type="ssqml:DescribeStatementType"/>

<xsd:complexType name="DescribedObject_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CursorStaticString"/>
			<xsd:element ref="ssqml:ExtendedCursorName"/>
			<xsd:element ref="ssqml:StructureStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DescribedObject_ISO9075ChoiceGroup1" type="ssqml:DescribedObject_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="DescribedObjectType">
	<xsd:choice>
			<xsd:element ref="ssqml:SqlStatementName"/>
			<xsd:element ref="ssqml:DescribedObject_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DescribedObject" type="ssqml:DescribedObjectType"/>

<xsd:complexType name="DescriptorNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ScopeOption" minOccurs="0"/>
			<xsd:element ref="ssqml:SimpleValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DescriptorName" type="ssqml:DescriptorNameType"/>

<xsd:complexType name="DiagnosticsSizeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DiagnosticsSizeStaticString"/>
			<xsd:element ref="ssqml:NumberOfConditions"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DiagnosticsSize" type="ssqml:DiagnosticsSizeType"/>

<xsd:complexType name="DirectInvocationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:MethodName"/>
			<xsd:element ref="ssqml:SqlArgumentList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DirectInvocation" type="ssqml:DirectInvocationType"/>

<xsd:complexType name="DirectSqlDataStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:DeleteStatementSearched"/>
			<xsd:element ref="ssqml:DirectSelectStatementMultipleRows"/>
			<xsd:element ref="ssqml:InsertStatement"/>
			<xsd:element ref="ssqml:UpdateStatementSearched"/>
			<xsd:element ref="ssqml:MergeStatement"/>
			<xsd:element ref="ssqml:TemporaryTableDeclaration"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DirectSqlDataStatement" type="ssqml:DirectSqlDataStatementType"/>

<xsd:complexType name="DirectSqlStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DirectlyExecutableStatement"/>
			<xsd:element ref="ssqml:Semicolon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DirectSqlStatement" type="ssqml:DirectSqlStatementType"/>

<xsd:complexType name="DirectlyExecutableStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:DirectSqlDataStatement"/>
			<xsd:element ref="ssqml:SqlSchemaStatement"/>
			<xsd:element ref="ssqml:SqlTransactionStatement"/>
			<xsd:element ref="ssqml:SqlConnectionStatement"/>
			<xsd:element ref="ssqml:SqlSessionStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DirectlyExecutableStatement" type="ssqml:DirectlyExecutableStatementType"/>

<xsd:complexType name="DisconnectObjectType">
	<xsd:choice>
			<xsd:element ref="ssqml:ConnectionObject"/>
			<xsd:element ref="ssqml:AllStaticString"/>
			<xsd:element ref="ssqml:CurrentStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DisconnectObject" type="ssqml:DisconnectObjectType"/>

<xsd:complexType name="DisconnectStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DisconnectStaticString"/>
			<xsd:element ref="ssqml:DisconnectObject"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DisconnectStatement" type="ssqml:DisconnectStatementType"/>

<xsd:complexType name="DistinctPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:IsDistinctFromStaticString"/>
			<xsd:element ref="ssqml:RowValuePredicand4"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DistinctPredicatePart2" type="ssqml:DistinctPredicatePart2Type"/>

<xsd:complexType name="DistinctPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand3"/>
			<xsd:element ref="ssqml:DistinctPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DistinctPredicate" type="ssqml:DistinctPredicateType"/>

<xsd:complexType name="DocumentOrContentOrSequenceType">
	<xsd:choice>
			<xsd:element ref="ssqml:DocumentOrContent"/>
			<xsd:element ref="ssqml:SequenceStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DocumentOrContentOrSequence" type="ssqml:DocumentOrContentOrSequenceType"/>

<xsd:complexType name="DomainConstraintType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConstraintNameDefinition" minOccurs="0"/>
			<xsd:element ref="ssqml:CheckConstraintDefinition"/>
			<xsd:element ref="ssqml:ConstraintCharacteristics" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DomainConstraint" type="ssqml:DomainConstraintType"/>

<xsd:complexType name="DomainDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateDomainStaticString"/>
			<xsd:element ref="ssqml:DomainName"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:DefaultClause" minOccurs="0"/>
			<xsd:element ref="ssqml:DomainConstraint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:CollateClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DomainDefinition" type="ssqml:DomainDefinitionType"/>

<xsd:complexType name="DoubleColonType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColonColon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DoubleColon" type="ssqml:DoubleColonType"/>

<xsd:complexType name="DoublePeriodType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PeriodPeriod"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DoublePeriod" type="ssqml:DoublePeriodType"/>

<xsd:complexType name="DoublequoteSymbolType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DoubleQuoteDoubleQuote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DoublequoteSymbol" type="ssqml:DoublequoteSymbolType"/>

<xsd:complexType name="DropAssertionStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropAssertionStaticString"/>
			<xsd:element ref="ssqml:ConstraintName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropAssertionStatement" type="ssqml:DropAssertionStatementType"/>

<xsd:complexType name="DropAttributeDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropAttributeStaticString"/>
			<xsd:element ref="ssqml:AttributeName"/>
			<xsd:element ref="ssqml:RestrictStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropAttributeDefinition" type="ssqml:DropAttributeDefinitionType"/>

<xsd:complexType name="DropCharacterSetStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropCharacterSetStaticString"/>
			<xsd:element ref="ssqml:CharacterSetName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropCharacterSetStatement" type="ssqml:DropCharacterSetStatementType"/>

<xsd:complexType name="DropCollationStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropCollationStaticString"/>
			<xsd:element ref="ssqml:CollationName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropCollationStatement" type="ssqml:DropCollationStatementType"/>

<xsd:complexType name="DropColumnDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropStaticString"/>
			<xsd:element ref="ssqml:ColumnStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropColumnDefinition" type="ssqml:DropColumnDefinitionType"/>

<xsd:complexType name="DropColumnScopeClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropScopeStaticString"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropColumnScopeClause" type="ssqml:DropColumnScopeClauseType"/>

<xsd:complexType name="DropDataTypeStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropTypeStaticString"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropDataTypeStatement" type="ssqml:DropDataTypeStatementType"/>

<xsd:complexType name="DropDomainConstraintDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropConstraintStaticString"/>
			<xsd:element ref="ssqml:ConstraintName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropDomainConstraintDefinition" type="ssqml:DropDomainConstraintDefinitionType"/>

<xsd:complexType name="DropDomainStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropDomainStaticString"/>
			<xsd:element ref="ssqml:DomainName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropDomainStatement" type="ssqml:DropDomainStatementType"/>

<xsd:complexType name="DropMethodSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropStaticString"/>
			<xsd:element ref="ssqml:SpecificMethodSpecificationDesignator"/>
			<xsd:element ref="ssqml:RestrictStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropMethodSpecification" type="ssqml:DropMethodSpecificationType"/>

<xsd:complexType name="DropModuleStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropModuleStaticString"/>
			<xsd:element ref="ssqml:SqlServerModuleName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropModuleStatement" type="ssqml:DropModuleStatementType"/>

<xsd:complexType name="DropRoleStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropRoleStaticString"/>
			<xsd:element ref="ssqml:RoleName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropRoleStatement" type="ssqml:DropRoleStatementType"/>

<xsd:complexType name="DropRoutineStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropStaticString"/>
			<xsd:element ref="ssqml:SpecificRoutineDesignator"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropRoutineStatement" type="ssqml:DropRoutineStatementType"/>

<xsd:complexType name="DropSchemaStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropSchemaStaticString"/>
			<xsd:element ref="ssqml:SchemaName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropSchemaStatement" type="ssqml:DropSchemaStatementType"/>

<xsd:complexType name="DropSequenceGeneratorStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropSequenceStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropSequenceGeneratorStatement" type="ssqml:DropSequenceGeneratorStatementType"/>

<xsd:complexType name="DropTableConstraintDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropConstraintStaticString"/>
			<xsd:element ref="ssqml:ConstraintName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropTableConstraintDefinition" type="ssqml:DropTableConstraintDefinitionType"/>

<xsd:complexType name="DropTableStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropTableStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropTableStatement" type="ssqml:DropTableStatementType"/>

<xsd:complexType name="DropTransformElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TransformKind"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:TransformKind" minOccurs="0"/>
			<xsd:element ref="ssqml:DropBehavior"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropTransformElementList" type="ssqml:DropTransformElementListType"/>

<xsd:complexType name="DropTransformStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:TransformStaticString"/>
			<xsd:element ref="ssqml:TransformsStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:TransformsToBeDropped"/>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropTransformStatement" type="ssqml:DropTransformStatementType"/>

<xsd:complexType name="DropTransliterationStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropTranslationStaticString"/>
			<xsd:element ref="ssqml:TransliterationName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropTransliterationStatement" type="ssqml:DropTransliterationStatementType"/>

<xsd:complexType name="DropTriggerStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropTriggerStaticString"/>
			<xsd:element ref="ssqml:TriggerName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropTriggerStatement" type="ssqml:DropTriggerStatementType"/>

<xsd:complexType name="DropUserDefinedCastStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropCastStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SourceDataType"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:TargetDataType"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropUserDefinedCastStatement" type="ssqml:DropUserDefinedCastStatementType"/>

<xsd:complexType name="DropUserDefinedOrderingStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropOrderingForStaticString"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropUserDefinedOrderingStatement" type="ssqml:DropUserDefinedOrderingStatementType"/>

<xsd:complexType name="DropViewStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DropViewStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DropViewStatement" type="ssqml:DropViewStatementType"/>

<xsd:complexType name="DynamicCloseStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CloseStaticString"/>
			<xsd:element ref="ssqml:DynamicCursorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DynamicCloseStatement" type="ssqml:DynamicCloseStatementType"/>

<xsd:complexType name="DynamicCursorNameType">
	<xsd:choice>
			<xsd:element ref="ssqml:CursorName"/>
			<xsd:element ref="ssqml:ExtendedCursorName"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="DynamicCursorName" type="ssqml:DynamicCursorNameType"/>

<xsd:complexType name="DynamicDeclareCursorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeclareStaticString"/>
			<xsd:element ref="ssqml:CursorName"/>
			<xsd:element ref="ssqml:CursorSensitivity" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorScrollability" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorStaticString"/>
			<xsd:element ref="ssqml:CursorHoldability" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorReturnability" minOccurs="0"/>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:StatementName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DynamicDeclareCursor" type="ssqml:DynamicDeclareCursorType"/>

<xsd:complexType name="DynamicDeleteStatementPositionedType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeleteFromStaticString"/>
			<xsd:element ref="ssqml:TargetTable"/>
			<xsd:element ref="ssqml:WhereCurrentOfStaticString"/>
			<xsd:element ref="ssqml:DynamicCursorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DynamicDeleteStatementPositioned" type="ssqml:DynamicDeleteStatementPositionedType"/>

<xsd:complexType name="DynamicFetchStatement_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:FetchOrientation" minOccurs="0"/>
		<xsd:element ref="ssqml:FromStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DynamicFetchStatement_ISO9075ChoiceGroup1" type="ssqml:DynamicFetchStatement_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="DynamicFetchStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FetchStaticString"/>
			<xsd:element ref="ssqml:DynamicFetchStatement_ISO9075ChoiceGroup1" minOccurs="0"/>
			<xsd:element ref="ssqml:DynamicCursorName"/>
			<xsd:element ref="ssqml:OutputUsingClause"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DynamicFetchStatement" type="ssqml:DynamicFetchStatementType"/>

<xsd:complexType name="DynamicOpenStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OpenStaticString"/>
			<xsd:element ref="ssqml:DynamicCursorName"/>
			<xsd:element ref="ssqml:InputUsingClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DynamicOpenStatement" type="ssqml:DynamicOpenStatementType"/>

<xsd:complexType name="DynamicResultSetsCharacteristicType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DynamicResultSetsStaticString"/>
			<xsd:element ref="ssqml:MaximumDynamicResultSets"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DynamicResultSetsCharacteristic" type="ssqml:DynamicResultSetsCharacteristicType"/>

<xsd:complexType name="DynamicSingleRowSelectStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:QuerySpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DynamicSingleRowSelectStatement" type="ssqml:DynamicSingleRowSelectStatementType"/>

<xsd:complexType name="DynamicUpdateStatementPositionedType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UpdateStaticString"/>
			<xsd:element ref="ssqml:TargetTable"/>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:SetClauseList"/>
			<xsd:element ref="ssqml:WhereCurrentOfStaticString"/>
			<xsd:element ref="ssqml:DynamicCursorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="DynamicUpdateStatementPositioned" type="ssqml:DynamicUpdateStatementPositionedType"/>

<xsd:complexType name="ElseClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ElseStaticString"/>
			<xsd:element ref="ssqml:Result"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ElseClause" type="ssqml:ElseClauseType"/>

<xsd:complexType name="EmptyGroupingSetType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParenRightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="EmptyGroupingSet" type="ssqml:EmptyGroupingSetType"/>

<xsd:complexType name="EmptySpecificationType">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:ArrayStaticString"/>
			<xsd:element ref="ssqml:MultisetStaticString"/>
		</xsd:choice>
		<xsd:element ref="ssqml:LeftBracketOrTrigraph"/>
		<xsd:element ref="ssqml:RightBracketOrTrigraph"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="EmptySpecification" type="ssqml:EmptySpecificationType"/>

<xsd:complexType name="EndField_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SecondStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:IntervalFractionalSecondsPrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="EndField_ISO9075ChoiceGroup1" type="ssqml:EndField_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="EndFieldType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonSecondPrimaryDatetimeField"/>
			<xsd:element ref="ssqml:EndField_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="EndField" type="ssqml:EndFieldType"/>

<xsd:complexType name="EqualsOrderingFormType">
	<xsd:sequence>
			<xsd:element ref="ssqml:EqualsOnlyByStaticString"/>
			<xsd:element ref="ssqml:OrderingCategory"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="EqualsOrderingForm" type="ssqml:EqualsOrderingFormType"/>

<xsd:complexType name="ExactNumericLiteralType">
	<xsd:choice>
			<xsd:element ref="ssqml:UnsignedIntegerPeriodUnsignedInteger"/>
			<xsd:element ref="ssqml:PeriodUnsignedInteger"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ExactNumericLiteral" type="ssqml:ExactNumericLiteralType"/>

<xsd:complexType name="ExactNumericType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NumericStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:Precision" minOccurs="0"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:Scale" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExactNumericType_ISO9075ChoiceGroup1" type="ssqml:ExactNumericType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ExactNumericType_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:DecimalStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:Precision" minOccurs="0"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:Scale" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExactNumericType_ISO9075ChoiceGroup2" type="ssqml:ExactNumericType_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="ExactNumericType_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:DecStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:Precision" minOccurs="0"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:Scale" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExactNumericType_ISO9075ChoiceGroup3" type="ssqml:ExactNumericType_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="ExactNumericTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:ExactNumericType_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:ExactNumericType_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:ExactNumericType_ISO9075ChoiceGroup3"/>
			<xsd:element ref="ssqml:SmallintStaticString"/>
			<xsd:element ref="ssqml:IntegerStaticString"/>
			<xsd:element ref="ssqml:IntStaticString"/>
			<xsd:element ref="ssqml:BigintStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ExactNumericType" type="ssqml:ExactNumericTypeType"/>

<xsd:complexType name="ExclusiveUserDefinedTypeSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OnlyStaticString"/>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExclusiveUserDefinedTypeSpecification" type="ssqml:ExclusiveUserDefinedTypeSpecificationType"/>

<xsd:complexType name="ExecuteImmediateStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ExecuteImmediateStaticString"/>
			<xsd:element ref="ssqml:SqlStatementVariable"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExecuteImmediateStatement" type="ssqml:ExecuteImmediateStatementType"/>

<xsd:complexType name="ExecuteStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ExecuteStaticString"/>
			<xsd:element ref="ssqml:SqlStatementName"/>
			<xsd:element ref="ssqml:ResultUsingClause" minOccurs="0"/>
			<xsd:element ref="ssqml:ParameterUsingClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExecuteStatement" type="ssqml:ExecuteStatementType"/>

<xsd:complexType name="ExistsPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ExistsStaticString"/>
			<xsd:element ref="ssqml:TableSubquery"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExistsPredicate" type="ssqml:ExistsPredicateType"/>

<xsd:complexType name="ExplicitRowValueConstructor_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:RowValueConstructorElement"/>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:RowValueConstructorElementList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExplicitRowValueConstructor_ISO9075ChoiceGroup1" type="ssqml:ExplicitRowValueConstructor_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ExplicitRowValueConstructor_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:RowValueConstructorElementList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExplicitRowValueConstructor_ISO9075ChoiceGroup2" type="ssqml:ExplicitRowValueConstructor_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="ExplicitRowValueConstructorType">
	<xsd:choice>
			<xsd:element ref="ssqml:ExplicitRowValueConstructor_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:ExplicitRowValueConstructor_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:RowSubquery"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ExplicitRowValueConstructor" type="ssqml:ExplicitRowValueConstructorType"/>

<xsd:complexType name="ExplicitTableType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableStaticString"/>
			<xsd:element ref="ssqml:TableOrQueryName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExplicitTable" type="ssqml:ExplicitTableType"/>

<xsd:complexType name="ExponentialFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ExpStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NumericValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExponentialFunction" type="ssqml:ExponentialFunctionType"/>

<xsd:complexType name="ExtendedCursorNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ScopeOption" minOccurs="0"/>
			<xsd:element ref="ssqml:SimpleValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExtendedCursorName" type="ssqml:ExtendedCursorNameType"/>

<xsd:complexType name="ExtendedStatementNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ScopeOption" minOccurs="0"/>
			<xsd:element ref="ssqml:SimpleValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExtendedStatementName" type="ssqml:ExtendedStatementNameType"/>

<xsd:complexType name="ExternalBodyReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ExternalStaticString"/>
			<xsd:element ref="ssqml:NameStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ExternalRoutineName" minOccurs="0"/>
			<xsd:element ref="ssqml:ParameterStyleClause" minOccurs="0"/>
			<xsd:element ref="ssqml:TransformGroupSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:ExternalSecurityClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExternalBodyReference" type="ssqml:ExternalBodyReferenceType"/>

<xsd:complexType name="ExternalRoutineNameType">
	<xsd:choice>
			<xsd:element ref="ssqml:Identifier"/>
			<xsd:element ref="ssqml:CharacterStringLiteral"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ExternalRoutineName" type="ssqml:ExternalRoutineNameType"/>

<xsd:complexType name="ExternallyInvokedProcedureType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ProcedureStaticString"/>
			<xsd:element ref="ssqml:ProcedureName"/>
			<xsd:element ref="ssqml:HostParameterDeclarationList"/>
			<xsd:element ref="ssqml:Semicolon"/>
			<xsd:element ref="ssqml:SqlProcedureStatement"/>
			<xsd:element ref="ssqml:Semicolon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExternallyInvokedProcedure" type="ssqml:ExternallyInvokedProcedureType"/>

<xsd:complexType name="ExtractExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ExtractStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ExtractField"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:ExtractSource"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ExtractExpression" type="ssqml:ExtractExpressionType"/>

<xsd:complexType name="ExtractFieldType">
	<xsd:choice>
			<xsd:element ref="ssqml:PrimaryDatetimeField"/>
			<xsd:element ref="ssqml:TimeZoneField"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ExtractField" type="ssqml:ExtractFieldType"/>

<xsd:complexType name="ExtractSourceType">
	<xsd:choice>
			<xsd:element ref="ssqml:DatetimeValueExpression"/>
			<xsd:element ref="ssqml:IntervalValueExpression"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ExtractSource" type="ssqml:ExtractSourceType"/>

<xsd:complexType name="FactorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Sign" minOccurs="0"/>
			<xsd:element ref="ssqml:NumericPrimary"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Factor" type="ssqml:FactorType"/>

<xsd:complexType name="FetchOrientation_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:AbsoluteStaticString"/>
			<xsd:element ref="ssqml:RelativeStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:SimpleValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FetchOrientation_ISO9075ChoiceGroup1" type="ssqml:FetchOrientation_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="FetchOrientationType">
	<xsd:choice>
			<xsd:element ref="ssqml:NextStaticString"/>
			<xsd:element ref="ssqml:PriorStaticString"/>
			<xsd:element ref="ssqml:FirstStaticString"/>
			<xsd:element ref="ssqml:LastStaticString"/>
			<xsd:element ref="ssqml:FetchOrientation_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="FetchOrientation" type="ssqml:FetchOrientationType"/>

<xsd:complexType name="FetchStatement_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:FetchOrientation" minOccurs="0"/>
		<xsd:element ref="ssqml:FromStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FetchStatement_ISO9075ChoiceGroup1" type="ssqml:FetchStatement_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="FetchStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FetchStaticString"/>
			<xsd:element ref="ssqml:FetchStatement_ISO9075ChoiceGroup1" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorName"/>
			<xsd:element ref="ssqml:IntoStaticString"/>
			<xsd:element ref="ssqml:FetchTargetList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FetchStatement" type="ssqml:FetchStatementType"/>

<xsd:complexType name="FetchTargetListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TargetSpecification"/>
			<xsd:element ref="ssqml:CommaTargetSpecificationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FetchTargetList" type="ssqml:FetchTargetListType"/>

<xsd:complexType name="FieldDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FieldName"/>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:ReferenceScopeCheck" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FieldDefinition" type="ssqml:FieldDefinitionType"/>

<xsd:complexType name="FieldReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:FieldName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FieldReference" type="ssqml:FieldReferenceType"/>

<xsd:complexType name="FilterClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FilterStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:WhereStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FilterClause" type="ssqml:FilterClauseType"/>

<xsd:complexType name="FloorFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FloorStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NumericValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FloorFunction" type="ssqml:FloorFunctionType"/>

<xsd:complexType name="FoldType">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:UpperStaticString"/>
			<xsd:element ref="ssqml:LowerStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Fold" type="ssqml:FoldType"/>

<xsd:complexType name="ForStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:BeginningLabel" minOccurs="0"/>
			<xsd:element ref="ssqml:Colon" minOccurs="0"/>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:ForLoopVariableName" minOccurs="0"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorName" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorSensitivity" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorForStaticString"/>
			<xsd:element ref="ssqml:CursorSpecification"/>
			<xsd:element ref="ssqml:DoStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
			<xsd:element ref="ssqml:EndForStaticString"/>
			<xsd:element ref="ssqml:EndingLabel" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ForStatement" type="ssqml:ForStatementType"/>

<xsd:complexType name="ForestElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ForestElement"/>
			<xsd:element ref="ssqml:CommaForestElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ForestElementList" type="ssqml:ForestElementListType"/>

<xsd:complexType name="ForestElementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ForestElementValue"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ForestElementName" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ForestElement" type="ssqml:ForestElementType"/>

<xsd:complexType name="FreeLocatorStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FreeLocatorStaticString"/>
			<xsd:element ref="ssqml:LocatorReference"/>
			<xsd:element ref="ssqml:CommaLocatorReferenceItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FreeLocatorStatement" type="ssqml:FreeLocatorStatementType"/>

<xsd:complexType name="FromClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:TableReferenceList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FromClause" type="ssqml:FromClauseType"/>

<xsd:complexType name="FromConstructorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:InsertColumnList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
			<xsd:element ref="ssqml:OverrideClause" minOccurs="0"/>
			<xsd:element ref="ssqml:ContextuallyTypedTableValueConstructor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FromConstructor" type="ssqml:FromConstructorType"/>

<xsd:complexType name="FromSqlType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FromSqlWithStaticString"/>
			<xsd:element ref="ssqml:FromSqlFunction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FromSql" type="ssqml:FromSqlType"/>

<xsd:complexType name="FromSubqueryType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:InsertColumnList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
			<xsd:element ref="ssqml:OverrideClause" minOccurs="0"/>
			<xsd:element ref="ssqml:QueryExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FromSubquery" type="ssqml:FromSubqueryType"/>

<xsd:complexType name="FullOrderingFormType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OrderFullByStaticString"/>
			<xsd:element ref="ssqml:OrderingCategory"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FullOrderingForm" type="ssqml:FullOrderingFormType"/>

<xsd:complexType name="FunctionSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FunctionStaticString"/>
			<xsd:element ref="ssqml:SchemaQualifiedRoutineName"/>
			<xsd:element ref="ssqml:SqlParameterDeclarationList"/>
			<xsd:element ref="ssqml:ReturnsClause"/>
			<xsd:element ref="ssqml:RoutineCharacteristics"/>
			<xsd:element ref="ssqml:DispatchClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="FunctionSpecification" type="ssqml:FunctionSpecificationType"/>

<xsd:complexType name="GeneralLiteralType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterStringLiteral"/>
			<xsd:element ref="ssqml:NationalCharacterStringLiteral"/>
			<xsd:element ref="ssqml:UnicodeCharacterStringLiteral"/>
			<xsd:element ref="ssqml:BinaryStringLiteral"/>
			<xsd:element ref="ssqml:DatetimeLiteral"/>
			<xsd:element ref="ssqml:IntervalLiteral"/>
			<xsd:element ref="ssqml:BooleanLiteral"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="GeneralLiteral" type="ssqml:GeneralLiteralType"/>

<xsd:complexType name="GeneralSetFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetFunctionType"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SetQuantifier" minOccurs="0"/>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GeneralSetFunction" type="ssqml:GeneralSetFunctionType"/>

<xsd:complexType name="GeneralValueSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:HostParameterSpecification"/>
			<xsd:element ref="ssqml:SqlParameterReference"/>
			<xsd:element ref="ssqml:DynamicParameterSpecification"/>
			<xsd:element ref="ssqml:CurrentCollationSpecification"/>
			<xsd:element ref="ssqml:Current_default_transform_groupStaticString"/>
			<xsd:element ref="ssqml:Current_pathStaticString"/>
			<xsd:element ref="ssqml:Current_roleStaticString"/>
			<xsd:element ref="ssqml:Current_transform_group_for_typeStaticString"/>
			<xsd:element ref="ssqml:Current_userStaticString"/>
			<xsd:element ref="ssqml:Session_userStaticString"/>
			<xsd:element ref="ssqml:System_userStaticString"/>
			<xsd:element ref="ssqml:UserStaticString"/>
			<xsd:element ref="ssqml:ValueStaticString"/>
			<xsd:element ref="ssqml:SqlVariableReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="GeneralValueSpecification" type="ssqml:GeneralValueSpecificationType"/>

<xsd:complexType name="GeneralizedExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GeneralizedExpression" type="ssqml:GeneralizedExpressionType"/>

<xsd:complexType name="GeneralizedInvocationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:MethodName"/>
			<xsd:element ref="ssqml:SqlArgumentList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GeneralizedInvocation" type="ssqml:GeneralizedInvocationType"/>

<xsd:complexType name="GenerationClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GenerationRule"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:GenerationExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GenerationClause" type="ssqml:GenerationClauseType"/>

<xsd:complexType name="GenerationExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:WithStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlLexicallyScopedOptions" minOccurs="0"/>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GenerationExpression" type="ssqml:GenerationExpressionType"/>

<xsd:complexType name="GetDescriptorInformation_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:GetHeaderInformation"/>
			<xsd:element ref="ssqml:CommaGetHeaderInformationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GetDescriptorInformation_ISO9075ChoiceGroup1" type="ssqml:GetDescriptorInformation_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="GetDescriptorInformation_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueStaticString"/>
			<xsd:element ref="ssqml:ItemNumber"/>
			<xsd:element ref="ssqml:GetItemInformation"/>
			<xsd:element ref="ssqml:CommaGetItemInformationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GetDescriptorInformation_ISO9075ChoiceGroup2" type="ssqml:GetDescriptorInformation_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="GetDescriptorInformationType">
	<xsd:choice>
			<xsd:element ref="ssqml:GetDescriptorInformation_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:GetDescriptorInformation_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="GetDescriptorInformation" type="ssqml:GetDescriptorInformationType"/>

<xsd:complexType name="GetDescriptorStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GetStaticString"/>
			<xsd:element ref="ssqml:SqlStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DescriptorStaticString"/>
			<xsd:element ref="ssqml:DescriptorName"/>
			<xsd:element ref="ssqml:GetDescriptorInformation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GetDescriptorStatement" type="ssqml:GetDescriptorStatementType"/>

<xsd:complexType name="GetDiagnosticsStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GetDiagnosticsStaticString"/>
			<xsd:element ref="ssqml:SqlDiagnosticsInformation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GetDiagnosticsStatement" type="ssqml:GetDiagnosticsStatementType"/>

<xsd:complexType name="GetHeaderInformationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SimpleTargetSpecification1"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:HeaderItemName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GetHeaderInformation" type="ssqml:GetHeaderInformationType"/>

<xsd:complexType name="GetItemInformationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SimpleTargetSpecification2"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:DescriptorItemName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GetItemInformation" type="ssqml:GetItemInformationType"/>

<xsd:complexType name="GrantPrivilegeStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GrantStaticString"/>
			<xsd:element ref="ssqml:Privileges"/>
			<xsd:element ref="ssqml:ToStaticString"/>
			<xsd:element ref="ssqml:Grantee"/>
			<xsd:element ref="ssqml:CommaGranteeItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:WithHierarchyOptionStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:WithGrantOptionStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:GrantedByStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:Grantor" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GrantPrivilegeStatement" type="ssqml:GrantPrivilegeStatementType"/>

<xsd:complexType name="GrantRoleStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GrantStaticString"/>
			<xsd:element ref="ssqml:RoleGranted"/>
			<xsd:element ref="ssqml:CommaRoleGrantedItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:ToStaticString"/>
			<xsd:element ref="ssqml:Grantee"/>
			<xsd:element ref="ssqml:CommaGranteeItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:WithAdminOptionStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:GrantedByStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:Grantor" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GrantRoleStatement" type="ssqml:GrantRoleStatementType"/>

<xsd:complexType name="GrantStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:GrantPrivilegeStatement"/>
			<xsd:element ref="ssqml:GrantRoleStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="GrantStatement" type="ssqml:GrantStatementType"/>

<xsd:complexType name="GranteeType">
	<xsd:choice>
			<xsd:element ref="ssqml:PublicStaticString"/>
			<xsd:element ref="ssqml:AuthorizationIdentifier"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Grantee" type="ssqml:GranteeType"/>

<xsd:complexType name="GreaterThanOrEqualsOperatorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GreaterThanOperatorEqualsOperator"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GreaterThanOrEqualsOperator" type="ssqml:GreaterThanOrEqualsOperatorType"/>

<xsd:complexType name="GroupByClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupByStaticString"/>
			<xsd:element ref="ssqml:SetQuantifier" minOccurs="0"/>
			<xsd:element ref="ssqml:GroupingElementList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GroupByClause" type="ssqml:GroupByClauseType"/>

<xsd:complexType name="GroupSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupName"/>
			<xsd:element ref="ssqml:ForTypeStaticString"/>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GroupSpecification" type="ssqml:GroupSpecificationType"/>

<xsd:complexType name="GroupingColumnReferenceListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupingColumnReference"/>
			<xsd:element ref="ssqml:CommaGroupingColumnReferenceItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GroupingColumnReferenceList" type="ssqml:GroupingColumnReferenceListType"/>

<xsd:complexType name="GroupingColumnReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnReference"/>
			<xsd:element ref="ssqml:CollateClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GroupingColumnReference" type="ssqml:GroupingColumnReferenceType"/>

<xsd:complexType name="GroupingElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupingElement"/>
			<xsd:element ref="ssqml:CommaGroupingElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GroupingElementList" type="ssqml:GroupingElementListType"/>

<xsd:complexType name="GroupingElementType">
	<xsd:choice>
			<xsd:element ref="ssqml:OrdinaryGroupingSet"/>
			<xsd:element ref="ssqml:RollupList"/>
			<xsd:element ref="ssqml:CubeList"/>
			<xsd:element ref="ssqml:GroupingSetsSpecification"/>
			<xsd:element ref="ssqml:EmptyGroupingSet"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="GroupingElement" type="ssqml:GroupingElementType"/>

<xsd:complexType name="GroupingOperationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupingStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ColumnReference"/>
			<xsd:element ref="ssqml:CommaColumnReferenceItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GroupingOperation" type="ssqml:GroupingOperationType"/>

<xsd:complexType name="GroupingSetListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupingSet"/>
			<xsd:element ref="ssqml:CommaGroupingSetItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GroupingSetList" type="ssqml:GroupingSetListType"/>

<xsd:complexType name="GroupingSetType">
	<xsd:choice>
			<xsd:element ref="ssqml:OrdinaryGroupingSet"/>
			<xsd:element ref="ssqml:RollupList"/>
			<xsd:element ref="ssqml:CubeList"/>
			<xsd:element ref="ssqml:GroupingSetsSpecification"/>
			<xsd:element ref="ssqml:EmptyGroupingSet"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="GroupingSet" type="ssqml:GroupingSetType"/>

<xsd:complexType name="GroupingSetsSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupingSetsStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:GroupingSetList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="GroupingSetsSpecification" type="ssqml:GroupingSetsSpecificationType"/>

<xsd:complexType name="HandlerDeclarationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeclareStaticString"/>
			<xsd:element ref="ssqml:HandlerType"/>
			<xsd:element ref="ssqml:HandlerForStaticString"/>
			<xsd:element ref="ssqml:ConditionValueList"/>
			<xsd:element ref="ssqml:HandlerAction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HandlerDeclaration" type="ssqml:HandlerDeclarationType"/>

<xsd:complexType name="HavingClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:HavingStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HavingClause" type="ssqml:HavingClauseType"/>

<xsd:complexType name="HexitHexitItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:HexitHexit"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HexitHexitItemtype" type="ssqml:HexitHexitItemtypeType"/>

<xsd:complexType name="HoldLocatorStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:HoldLocatorStaticString"/>
			<xsd:element ref="ssqml:LocatorReference"/>
			<xsd:element ref="ssqml:CommaLocatorReferenceItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HoldLocatorStatement" type="ssqml:HoldLocatorStatementType"/>

<xsd:complexType name="HostParameterDataTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:LocatorIndication" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HostParameterDataType" type="ssqml:HostParameterDataTypeType"/>

<xsd:complexType name="HostParameterDeclarationListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:HostParameterDeclaration"/>
			<xsd:element ref="ssqml:CommaHostParameterDeclarationItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HostParameterDeclarationList" type="ssqml:HostParameterDeclarationListType"/>

<xsd:complexType name="HostParameterDeclaration_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:HostParameterName"/>
			<xsd:element ref="ssqml:HostParameterDataType"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HostParameterDeclaration_ISO9075ChoiceGroup1" type="ssqml:HostParameterDeclaration_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="HostParameterDeclarationType">
	<xsd:choice>
			<xsd:element ref="ssqml:HostParameterDeclaration_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:StatusParameter"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="HostParameterDeclaration" type="ssqml:HostParameterDeclarationType"/>

<xsd:complexType name="HostParameterNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Colon"/>
			<xsd:element ref="ssqml:Identifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HostParameterName" type="ssqml:HostParameterNameType"/>

<xsd:complexType name="HostParameterSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:HostParameterName"/>
			<xsd:element ref="ssqml:IndicatorParameter" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HostParameterSpecification" type="ssqml:HostParameterSpecificationType"/>

<xsd:complexType name="HypotheticalSetFunctionValueExpressionListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:CommaValueExpressionItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HypotheticalSetFunctionValueExpressionList" type="ssqml:HypotheticalSetFunctionValueExpressionListType"/>

<xsd:complexType name="HypotheticalSetFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RankFunctionType"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:HypotheticalSetFunctionValueExpressionList"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:WithinGroupSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="HypotheticalSetFunction" type="ssqml:HypotheticalSetFunctionType"/>

<xsd:complexType name="IdentifierBodyType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IdentifierStart"/>
			<xsd:element ref="ssqml:IdentifierPart" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IdentifierBody" type="ssqml:IdentifierBodyType"/>

<xsd:complexType name="IdentifierChainType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Identifier"/>
			<xsd:element ref="ssqml:PeriodIdentifierItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IdentifierChain" type="ssqml:IdentifierChainType"/>

<xsd:complexType name="IdentifierExtendType">
	<xsd:choice>
			<xsd:element ref="ssqml:SimpleLatinLetter"/>
			<xsd:element ref="ssqml:Digit"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="IdentifierExtend" type="ssqml:IdentifierExtendType"/>

<xsd:complexType name="IdentifierPartType">
	<xsd:choice>
			<xsd:element ref="ssqml:IdentifierStart"/>
			<xsd:element ref="ssqml:IdentifierExtend"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="IdentifierPart" type="ssqml:IdentifierPartType"/>

<xsd:complexType name="IdentityColumnSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GeneratedStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:AlwaysStaticString"/>
			<xsd:element ref="ssqml:ByDefaultStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:AsIdentityStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:CommonSequenceGeneratorOptions" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IdentityColumnSpecification" type="ssqml:IdentityColumnSpecificationType"/>

<xsd:complexType name="IfStatementElseClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ElseStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IfStatementElseClause" type="ssqml:IfStatementElseClauseType"/>

<xsd:complexType name="IfStatementElseifClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ElseifStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:ThenStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IfStatementElseifClause" type="ssqml:IfStatementElseifClauseType"/>

<xsd:complexType name="IfStatementThenClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ThenStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IfStatementThenClause" type="ssqml:IfStatementThenClauseType"/>

<xsd:complexType name="IfStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IfStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:IfStatementThenClause"/>
			<xsd:element ref="ssqml:IfStatementElseifClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:IfStatementElseClause" minOccurs="0"/>
			<xsd:element ref="ssqml:EndIfStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IfStatement" type="ssqml:IfStatementType"/>

<xsd:complexType name="ImplicitlyTypedValueSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:NullStaticString"/>
			<xsd:element ref="ssqml:EmptySpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ImplicitlyTypedValueSpecification" type="ssqml:ImplicitlyTypedValueSpecificationType"/>

<xsd:complexType name="InPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:InStaticString"/>
			<xsd:element ref="ssqml:InPredicateValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="InPredicatePart2" type="ssqml:InPredicatePart2Type"/>

<xsd:complexType name="InPredicateValue_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:InValueList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="InPredicateValue_ISO9075ChoiceGroup1" type="ssqml:InPredicateValue_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="InPredicateValueType">
	<xsd:choice>
			<xsd:element ref="ssqml:TableSubquery"/>
			<xsd:element ref="ssqml:InPredicateValue_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="InPredicateValue" type="ssqml:InPredicateValueType"/>

<xsd:complexType name="InPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:InPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="InPredicate" type="ssqml:InPredicateType"/>

<xsd:complexType name="InValueListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValueExpression"/>
			<xsd:element ref="ssqml:CommaRowValueExpressionItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="InValueList" type="ssqml:InValueListType"/>

<xsd:complexType name="InclusiveUserDefinedTypeSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="InclusiveUserDefinedTypeSpecification" type="ssqml:InclusiveUserDefinedTypeSpecificationType"/>

<xsd:complexType name="IndicatorParameterType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IndicatorStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:HostParameterName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IndicatorParameter" type="ssqml:IndicatorParameterType"/>

<xsd:complexType name="InputUsingClauseType">
	<xsd:choice>
			<xsd:element ref="ssqml:UsingArguments"/>
			<xsd:element ref="ssqml:UsingInputDescriptor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="InputUsingClause" type="ssqml:InputUsingClauseType"/>

<xsd:complexType name="InsertColumnsAndSourceType">
	<xsd:choice>
			<xsd:element ref="ssqml:FromSubquery"/>
			<xsd:element ref="ssqml:FromConstructor"/>
			<xsd:element ref="ssqml:FromDefault"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="InsertColumnsAndSource" type="ssqml:InsertColumnsAndSourceType"/>

<xsd:complexType name="InsertStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:InsertStaticString"/>
			<xsd:element ref="ssqml:WithStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlLexicallyScopedOptions" minOccurs="0"/>
			<xsd:element ref="ssqml:IntoStaticString"/>
			<xsd:element ref="ssqml:InsertionTarget"/>
			<xsd:element ref="ssqml:InsertColumnsAndSource"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="InsertStatement" type="ssqml:InsertStatementType"/>

<xsd:complexType name="IntervalAbsoluteValueFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AbsStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:IntervalValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalAbsoluteValueFunction" type="ssqml:IntervalAbsoluteValueFunctionType"/>

<xsd:complexType name="IntervalFactorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Sign" minOccurs="0"/>
			<xsd:element ref="ssqml:IntervalPrimary"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalFactor" type="ssqml:IntervalFactorType"/>

<xsd:complexType name="IntervalFractionalSecondsPrecisionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnsignedInteger"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalFractionalSecondsPrecision" type="ssqml:IntervalFractionalSecondsPrecisionType"/>

<xsd:complexType name="IntervalLeadingFieldPrecisionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnsignedInteger"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalLeadingFieldPrecision" type="ssqml:IntervalLeadingFieldPrecisionType"/>

<xsd:complexType name="IntervalLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IntervalStaticString"/>
			<xsd:element ref="ssqml:Sign" minOccurs="0"/>
			<xsd:element ref="ssqml:IntervalString"/>
			<xsd:element ref="ssqml:IntervalQualifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalLiteral" type="ssqml:IntervalLiteralType"/>

<xsd:complexType name="IntervalPrimary_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:IntervalQualifier" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalPrimary_ISO9075ChoiceGroup1" type="ssqml:IntervalPrimary_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="IntervalPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:IntervalPrimary_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:IntervalValueFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="IntervalPrimary" type="ssqml:IntervalPrimaryType"/>

<xsd:complexType name="IntervalQualifier_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:StartField"/>
			<xsd:element ref="ssqml:ToStaticString"/>
			<xsd:element ref="ssqml:EndField"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalQualifier_ISO9075ChoiceGroup1" type="ssqml:IntervalQualifier_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="IntervalQualifierType">
	<xsd:choice>
			<xsd:element ref="ssqml:IntervalQualifier_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:SingleDatetimeField"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="IntervalQualifier" type="ssqml:IntervalQualifierType"/>

<xsd:complexType name="IntervalStringType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:UnquotedIntervalString"/>
			<xsd:element ref="ssqml:Quote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalString" type="ssqml:IntervalStringType"/>

<xsd:complexType name="IntervalTerm_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:IntervalTerm2"/>
			<xsd:choice>
				<xsd:element ref="ssqml:IntervalTerm_ISO9075ChoiceGroup2"/>
				<xsd:element ref="ssqml:IntervalTerm_ISO9075ChoiceGroup3"/>
			</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalTerm_ISO9075ChoiceGroup1" type="ssqml:IntervalTerm_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="IntervalTerm_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:Term"/>
			<xsd:element ref="ssqml:Asterisk"/>
			<xsd:element ref="ssqml:IntervalFactor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalTerm_ISO9075ChoiceGroup2" type="ssqml:IntervalTerm_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="IntervalTerm_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:Asterisk"/>
			<xsd:element ref="ssqml:Solidus"/>
		</xsd:choice>
		<xsd:element ref="ssqml:Factor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalTerm_ISO9075ChoiceGroup3" type="ssqml:IntervalTerm_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="IntervalTermType">
	<xsd:choice>
			<xsd:element ref="ssqml:IntervalFactor"/>
			<xsd:element ref="ssqml:IntervalTerm_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="IntervalTerm" type="ssqml:IntervalTermType"/>

<xsd:complexType name="IntervalTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IntervalStaticString"/>
			<xsd:element ref="ssqml:IntervalQualifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalType" type="ssqml:IntervalTypeType"/>

<xsd:complexType name="IntervalValueExpression_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:IntervalValueExpression1"/>
			<xsd:choice>
				<xsd:element ref="ssqml:IntervalValueExpression_ISO9075ChoiceGroup3"/>
				<xsd:element ref="ssqml:IntervalValueExpression_ISO9075ChoiceGroup4"/>
			</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalValueExpression_ISO9075ChoiceGroup1" type="ssqml:IntervalValueExpression_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="IntervalValueExpression_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:MinusSign"/>
			<xsd:element ref="ssqml:IntervalTerm1"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalValueExpression_ISO9075ChoiceGroup3" type="ssqml:IntervalValueExpression_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="IntervalValueExpression_ISO9075ChoiceGroup4Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:PlusSign"/>
			<xsd:element ref="ssqml:IntervalTerm1"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalValueExpression_ISO9075ChoiceGroup4" type="ssqml:IntervalValueExpression_ISO9075ChoiceGroup4Type"/>

<xsd:complexType name="IntervalValueExpression_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:DatetimeValueExpression"/>
			<xsd:element ref="ssqml:MinusSign"/>
			<xsd:element ref="ssqml:DatetimeTerm"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:IntervalQualifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntervalValueExpression_ISO9075ChoiceGroup2" type="ssqml:IntervalValueExpression_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="IntervalValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:IntervalTerm"/>
			<xsd:element ref="ssqml:IntervalValueExpression_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:IntervalValueExpression_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="IntervalValueExpression" type="ssqml:IntervalValueExpressionType"/>

<xsd:complexType name="IntoArgumentsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IntoStaticString"/>
			<xsd:element ref="ssqml:IntoArgument"/>
			<xsd:element ref="ssqml:CommaIntoArgumentItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntoArguments" type="ssqml:IntoArgumentsType"/>

<xsd:complexType name="IntoDescriptorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IntoStaticString"/>
			<xsd:element ref="ssqml:SqlStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DescriptorStaticString"/>
			<xsd:element ref="ssqml:DescriptorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IntoDescriptor" type="ssqml:IntoDescriptorType"/>

<xsd:complexType name="InverseDistributionFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:InverseDistributionFunctionType"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:InverseDistributionFunctionArgument"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:WithinGroupSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="InverseDistributionFunction" type="ssqml:InverseDistributionFunctionType"/>

<xsd:complexType name="IsolationLevelType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IsolationLevelStaticString"/>
			<xsd:element ref="ssqml:LevelOfIsolation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IsolationLevel" type="ssqml:IsolationLevelType"/>

<xsd:complexType name="IterateStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IterateStaticString"/>
			<xsd:element ref="ssqml:StatementLabel"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="IterateStatement" type="ssqml:IterateStatementType"/>

<xsd:complexType name="JoinConditionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OnStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="JoinCondition" type="ssqml:JoinConditionType"/>

<xsd:complexType name="JoinSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:JoinCondition"/>
			<xsd:element ref="ssqml:NamedColumnsJoin"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="JoinSpecification" type="ssqml:JoinSpecificationType"/>

<xsd:complexType name="JoinType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:OuterJoinType"/>
			<xsd:element ref="ssqml:OuterStaticString" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="JoinType_ISO9075ChoiceGroup1" type="ssqml:JoinType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="JoinTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:InnerStaticString"/>
			<xsd:element ref="ssqml:JoinType_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="JoinType" type="ssqml:JoinTypeType"/>

<xsd:complexType name="JoinedTableType">
	<xsd:choice>
			<xsd:element ref="ssqml:CrossJoin"/>
			<xsd:element ref="ssqml:QualifiedJoin"/>
			<xsd:element ref="ssqml:NaturalJoin"/>
			<xsd:element ref="ssqml:UnionJoin"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="JoinedTable" type="ssqml:JoinedTableType"/>

<xsd:complexType name="KeyWordType">
	<xsd:choice>
			<xsd:element ref="ssqml:ReservedWord"/>
			<xsd:element ref="ssqml:NonReservedWord"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="KeyWord" type="ssqml:KeyWordType"/>

<xsd:complexType name="LargeObjectLengthTokenType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DigitMultiplier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LargeObjectLengthToken" type="ssqml:LargeObjectLengthTokenType"/>

<xsd:complexType name="LargeObjectLength_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnsignedInteger"/>
			<xsd:element ref="ssqml:Multiplier" minOccurs="0"/>
			<xsd:element ref="ssqml:CharLengthUnits" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LargeObjectLength_ISO9075ChoiceGroup1" type="ssqml:LargeObjectLength_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="LargeObjectLength_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LargeObjectLengthToken"/>
			<xsd:element ref="ssqml:CharLengthUnits" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LargeObjectLength_ISO9075ChoiceGroup2" type="ssqml:LargeObjectLength_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="LargeObjectLengthType">
	<xsd:choice>
			<xsd:element ref="ssqml:LargeObjectLength_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:LargeObjectLength_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="LargeObjectLength" type="ssqml:LargeObjectLengthType"/>

<xsd:complexType name="LateralDerivedTableType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LateralStaticString"/>
			<xsd:element ref="ssqml:TableSubquery"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LateralDerivedTable" type="ssqml:LateralDerivedTableType"/>

<xsd:complexType name="LeaveStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeaveStaticString"/>
			<xsd:element ref="ssqml:StatementLabel"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LeaveStatement" type="ssqml:LeaveStatementType"/>

<xsd:complexType name="LengthExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharLengthExpression"/>
			<xsd:element ref="ssqml:OctetLengthExpression"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="LengthExpression" type="ssqml:LengthExpressionType"/>

<xsd:complexType name="LessThanOrEqualsOperatorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LessThanOperatorEqualsOperator"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LessThanOrEqualsOperator" type="ssqml:LessThanOrEqualsOperatorType"/>

<xsd:complexType name="LikeClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LikeStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:LikeOptions" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LikeClause" type="ssqml:LikeClauseType"/>

<xsd:complexType name="LikeOptionsType">
	<xsd:choice>
			<xsd:element ref="ssqml:IdentityOption"/>
			<xsd:element ref="ssqml:ColumnDefaultOption"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="LikeOptions" type="ssqml:LikeOptionsType"/>

<xsd:complexType name="LikePredicateType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterLikePredicate"/>
			<xsd:element ref="ssqml:OctetLikePredicate"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="LikePredicate" type="ssqml:LikePredicateType"/>

<xsd:complexType name="ListOfAttributesType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:AttributeName"/>
			<xsd:element ref="ssqml:CommaAttributeNameItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ListOfAttributes" type="ssqml:ListOfAttributesType"/>

<xsd:complexType name="LiteralType">
	<xsd:choice>
			<xsd:element ref="ssqml:SignedNumericLiteral"/>
			<xsd:element ref="ssqml:GeneralLiteral"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Literal" type="ssqml:LiteralType"/>

<xsd:complexType name="LocalCursorDeclarationListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TerminatedLocalCursorDeclaration" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LocalCursorDeclarationList" type="ssqml:LocalCursorDeclarationListType"/>

<xsd:complexType name="LocalDeclarationListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TerminatedLocalDeclaration" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LocalDeclarationList" type="ssqml:LocalDeclarationListType"/>

<xsd:complexType name="LocalDeclarationType">
	<xsd:choice>
			<xsd:element ref="ssqml:SqlVariableDeclaration"/>
			<xsd:element ref="ssqml:ConditionDeclaration"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="LocalDeclaration" type="ssqml:LocalDeclarationType"/>

<xsd:complexType name="LocalHandlerDeclarationListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TerminatedLocalHandlerDeclaration" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LocalHandlerDeclarationList" type="ssqml:LocalHandlerDeclarationListType"/>

<xsd:complexType name="LocalOrSchemaQualifiedNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LocalOrSchemaQualifier" minOccurs="0"/>
			<xsd:element ref="ssqml:Period" minOccurs="0"/>
			<xsd:element ref="ssqml:QualifiedIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LocalOrSchemaQualifiedName" type="ssqml:LocalOrSchemaQualifiedNameType"/>

<xsd:complexType name="LocalOrSchemaQualifierType">
	<xsd:choice>
			<xsd:element ref="ssqml:SchemaName"/>
			<xsd:element ref="ssqml:ModuleStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="LocalOrSchemaQualifier" type="ssqml:LocalOrSchemaQualifierType"/>

<xsd:complexType name="LocalQualifiedNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LocalQualifier" minOccurs="0"/>
			<xsd:element ref="ssqml:Period" minOccurs="0"/>
			<xsd:element ref="ssqml:QualifiedIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LocalQualifiedName" type="ssqml:LocalQualifiedNameType"/>

<xsd:complexType name="LocatorReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:HostParameterName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LocatorReference" type="ssqml:LocatorReferenceType"/>

<xsd:complexType name="LoopStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:BeginningLabel" minOccurs="0"/>
			<xsd:element ref="ssqml:Colon" minOccurs="0"/>
			<xsd:element ref="ssqml:LoopStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
			<xsd:element ref="ssqml:EndLoopStaticString"/>
			<xsd:element ref="ssqml:EndingLabel" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="LoopStatement" type="ssqml:LoopStatementType"/>

<xsd:complexType name="MapCategoryType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MapWithStaticString"/>
			<xsd:element ref="ssqml:MapFunctionSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MapCategory" type="ssqml:MapCategoryType"/>

<xsd:complexType name="MapFunctionSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SpecificRoutineDesignator"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MapFunctionSpecification" type="ssqml:MapFunctionSpecificationType"/>

<xsd:complexType name="MatchPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:MatchStaticString"/>
			<xsd:element ref="ssqml:UniqueStaticString" minOccurs="0"/>
		<xsd:choice>
			<xsd:element ref="ssqml:SimpleStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:PartialstaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:FullStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:TableSubquery"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MatchPredicatePart2" type="ssqml:MatchPredicatePart2Type"/>

<xsd:complexType name="MatchPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:MatchPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MatchPredicate" type="ssqml:MatchPredicateType"/>

<xsd:complexType name="MemberListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:Member"/>
			<xsd:element ref="ssqml:CommaMemberItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MemberList" type="ssqml:MemberListType"/>

<xsd:complexType name="MemberNameAlternativesType">
	<xsd:choice>
			<xsd:element ref="ssqml:SchemaQualifiedRoutineName"/>
			<xsd:element ref="ssqml:MethodName"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MemberNameAlternatives" type="ssqml:MemberNameAlternativesType"/>

<xsd:complexType name="MemberNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MemberNameAlternatives"/>
			<xsd:element ref="ssqml:DataTypeList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MemberName" type="ssqml:MemberNameType"/>

<xsd:complexType name="MemberPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:MemberStaticString"/>
			<xsd:element ref="ssqml:OfStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:MultisetValueExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MemberPredicatePart2" type="ssqml:MemberPredicatePart2Type"/>

<xsd:complexType name="MemberPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:MemberPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MemberPredicate" type="ssqml:MemberPredicateType"/>

<xsd:complexType name="MergeInsertSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:InsertStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:InsertColumnList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
			<xsd:element ref="ssqml:OverrideClause" minOccurs="0"/>
			<xsd:element ref="ssqml:ValuesStaticString"/>
			<xsd:element ref="ssqml:MergeInsertValueList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MergeInsertSpecification" type="ssqml:MergeInsertSpecificationType"/>

<xsd:complexType name="MergeInsertValueElementType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:ContextuallyTypedValueSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MergeInsertValueElement" type="ssqml:MergeInsertValueElementType"/>

<xsd:complexType name="MergeInsertValueListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:MergeInsertValueElement"/>
			<xsd:element ref="ssqml:CommaMergeInsertValueElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MergeInsertValueList" type="ssqml:MergeInsertValueListType"/>

<xsd:complexType name="MergeOperationSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MergeWhenClause" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MergeOperationSpecification" type="ssqml:MergeOperationSpecificationType"/>

<xsd:complexType name="MergeStatement_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:WithStaticString"/>
		<xsd:element ref="ssqml:XmlLexicallyScopedOptions"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MergeStatement_ISO9075ChoiceGroup1" type="ssqml:MergeStatement_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="MergeStatement_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
		<xsd:element ref="ssqml:MergeCorrelationName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MergeStatement_ISO9075ChoiceGroup2" type="ssqml:MergeStatement_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="MergeStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MergeStaticString"/>
			<xsd:element ref="ssqml:MergeStatement_ISO9075ChoiceGroup1" minOccurs="0"/>
			<xsd:element ref="ssqml:IntoStaticString"/>
			<xsd:element ref="ssqml:TargetTable"/>
			<xsd:element ref="ssqml:MergeStatement_ISO9075ChoiceGroup2" minOccurs="0"/>
			<xsd:element ref="ssqml:UsingStaticString"/>
			<xsd:element ref="ssqml:TableReference"/>
			<xsd:element ref="ssqml:OnStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:MergeOperationSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MergeStatement" type="ssqml:MergeStatementType"/>

<xsd:complexType name="MergeUpdateSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UpdateSetStaticString"/>
			<xsd:element ref="ssqml:SetClauseList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MergeUpdateSpecification" type="ssqml:MergeUpdateSpecificationType"/>

<xsd:complexType name="MergeWhenClauseType">
	<xsd:choice>
			<xsd:element ref="ssqml:MergeWhenMatchedClause"/>
			<xsd:element ref="ssqml:MergeWhenNotMatchedClause"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MergeWhenClause" type="ssqml:MergeWhenClauseType"/>

<xsd:complexType name="MergeWhenMatchedClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WhenMatchedThenStaticString"/>
			<xsd:element ref="ssqml:MergeUpdateSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MergeWhenMatchedClause" type="ssqml:MergeWhenMatchedClauseType"/>

<xsd:complexType name="MergeWhenNotMatchedClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WhenNotMatchedThenStaticString"/>
			<xsd:element ref="ssqml:MergeInsertSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MergeWhenNotMatchedClause" type="ssqml:MergeWhenNotMatchedClauseType"/>

<xsd:complexType name="MethodCharacteristicType">
	<xsd:choice>
			<xsd:element ref="ssqml:ParameterStyleClause"/>
			<xsd:element ref="ssqml:DeterministicCharacteristic"/>
			<xsd:element ref="ssqml:SqlDataAccessIndication"/>
			<xsd:element ref="ssqml:NullCallClause"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MethodCharacteristic" type="ssqml:MethodCharacteristicType"/>

<xsd:complexType name="MethodCharacteristicsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MethodCharacteristic" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MethodCharacteristics" type="ssqml:MethodCharacteristicsType"/>

<xsd:complexType name="MethodInvocationType">
	<xsd:choice>
			<xsd:element ref="ssqml:DirectInvocation"/>
			<xsd:element ref="ssqml:GeneralizedInvocation"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MethodInvocation" type="ssqml:MethodInvocationType"/>

<xsd:complexType name="MethodReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:DereferenceOperator"/>
			<xsd:element ref="ssqml:MethodName"/>
			<xsd:element ref="ssqml:SqlArgumentList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MethodReference" type="ssqml:MethodReferenceType"/>

<xsd:complexType name="MethodSpecificationDesignator_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SpecificMethodStaticString"/>
			<xsd:element ref="ssqml:SpecificMethodName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MethodSpecificationDesignator_ISO9075ChoiceGroup1" type="ssqml:MethodSpecificationDesignator_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="MethodSpecificationDesignator_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:InstanceStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:StaticStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ConstructorStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:MethodStaticString"/>
			<xsd:element ref="ssqml:MethodName"/>
			<xsd:element ref="ssqml:SqlParameterDeclarationList"/>
			<xsd:element ref="ssqml:ReturnsClause" minOccurs="0"/>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MethodSpecificationDesignator_ISO9075ChoiceGroup2" type="ssqml:MethodSpecificationDesignator_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="MethodSpecificationDesignatorType">
	<xsd:choice>
			<xsd:element ref="ssqml:MethodSpecificationDesignator_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:MethodSpecificationDesignator_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MethodSpecificationDesignator" type="ssqml:MethodSpecificationDesignatorType"/>

<xsd:complexType name="MethodSpecificationListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MethodSpecification"/>
			<xsd:element ref="ssqml:CommaMethodSpecificationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MethodSpecificationList" type="ssqml:MethodSpecificationListType"/>

<xsd:complexType name="MethodSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:OriginalMethodSpecification"/>
			<xsd:element ref="ssqml:OverridingMethodSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MethodSpecification" type="ssqml:MethodSpecificationType"/>

<xsd:complexType name="ModifiedFieldReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ModifiedFieldTarget"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:FieldName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModifiedFieldReference" type="ssqml:ModifiedFieldReferenceType"/>

<xsd:complexType name="ModifiedFieldTarget_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TargetSpecification"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModifiedFieldTarget_ISO9075ChoiceGroup1" type="ssqml:ModifiedFieldTarget_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ModifiedFieldTargetType">
	<xsd:choice>
			<xsd:element ref="ssqml:TargetSpecification"/>
			<xsd:element ref="ssqml:ModifiedFieldTarget_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:ModifiedFieldReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ModifiedFieldTarget" type="ssqml:ModifiedFieldTargetType"/>

<xsd:complexType name="ModuleAuthorizationClause_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaStaticString"/>
			<xsd:element ref="ssqml:SchemaName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModuleAuthorizationClause_ISO9075ChoiceGroup1" type="ssqml:ModuleAuthorizationClause_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ModuleAuthorizationClause_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:AuthorizationStaticString"/>
			<xsd:element ref="ssqml:ModuleAuthorizationIdentifier"/>
			<xsd:element ref="ssqml:ForStaticStaticString" minOccurs="0"/>
		<xsd:choice>
			<xsd:element ref="ssqml:OnlyStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:AndDynamicStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:SchemaStaticString"/>
			<xsd:element ref="ssqml:SchemaName"/>
			<xsd:element ref="ssqml:AuthorizationStaticString"/>
			<xsd:element ref="ssqml:ModuleAuthorizationIdentifier"/>
			<xsd:element ref="ssqml:ForStaticStaticString" minOccurs="0"/>
		<xsd:choice>
			<xsd:element ref="ssqml:OnlyStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:AndDynamicStaticString" minOccurs="0"/>
		</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModuleAuthorizationClause_ISO9075ChoiceGroup2" type="ssqml:ModuleAuthorizationClause_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="ModuleAuthorizationClauseType">
	<xsd:choice>
			<xsd:element ref="ssqml:ModuleAuthorizationClause_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:ModuleAuthorizationClause_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ModuleAuthorizationClause" type="ssqml:ModuleAuthorizationClauseType"/>

<xsd:complexType name="ModuleCharacterSetSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NamesAreStaticString"/>
			<xsd:element ref="ssqml:CharacterSetSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModuleCharacterSetSpecification" type="ssqml:ModuleCharacterSetSpecificationType"/>

<xsd:complexType name="ModuleCollationSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CollationStaticString"/>
			<xsd:element ref="ssqml:CollationName"/>
			<xsd:element ref="ssqml:ForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharacterSetSpecificationList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModuleCollationSpecification" type="ssqml:ModuleCollationSpecificationType"/>

<xsd:complexType name="ModuleCollationsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ModuleCollationSpecification" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModuleCollations" type="ssqml:ModuleCollationsType"/>

<xsd:complexType name="ModuleContentsType">
	<xsd:choice>
			<xsd:element ref="ssqml:DeclareCursor"/>
			<xsd:element ref="ssqml:DynamicDeclareCursor"/>
			<xsd:element ref="ssqml:ExternallyInvokedProcedure"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ModuleContents" type="ssqml:ModuleContentsType"/>

<xsd:complexType name="ModuleFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeclareStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SqlInvokedFunction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModuleFunction" type="ssqml:ModuleFunctionType"/>

<xsd:complexType name="ModuleNameClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ModuleStaticString"/>
			<xsd:element ref="ssqml:SqlClientModuleName" minOccurs="0"/>
			<xsd:element ref="ssqml:ModuleCharacterSetSpecification" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModuleNameClause" type="ssqml:ModuleNameClauseType"/>

<xsd:complexType name="ModuleProcedureType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeclareStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SqlInvokedProcedure"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModuleProcedure" type="ssqml:ModuleProcedureType"/>

<xsd:complexType name="ModuleRoutineType">
	<xsd:choice>
			<xsd:element ref="ssqml:ModuleProcedure"/>
			<xsd:element ref="ssqml:ModuleFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ModuleRoutine" type="ssqml:ModuleRoutineType"/>

<xsd:complexType name="ModulusExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ModStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NumericValueExpressionDividend"/>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:NumericValueExpressionDivisor"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ModulusExpression" type="ssqml:ModulusExpressionType"/>

<xsd:complexType name="MultipleColumnAssignmentType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetTargetList"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:AssignedRow"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultipleColumnAssignment" type="ssqml:MultipleColumnAssignmentType"/>

<xsd:complexType name="MultipleGroupSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupSpecification"/>
			<xsd:element ref="ssqml:CommaGroupSpecificationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultipleGroupSpecification" type="ssqml:MultipleGroupSpecificationType"/>

<xsd:complexType name="MultipleVariableAssignmentType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:AssignmentTargetList"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:AssignedRow"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultipleVariableAssignment" type="ssqml:MultipleVariableAssignmentType"/>

<xsd:complexType name="MultisetElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MultisetElement"/>
			<xsd:element ref="ssqml:CommaMultisetElementItemtype" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultisetElementList" type="ssqml:MultisetElementListType"/>

<xsd:complexType name="MultisetElementReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ElementStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:MultisetValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultisetElementReference" type="ssqml:MultisetElementReferenceType"/>

<xsd:complexType name="MultisetPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:MultisetValueFunction"/>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MultisetPrimary" type="ssqml:MultisetPrimaryType"/>

<xsd:complexType name="MultisetSetFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:MultisetValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultisetSetFunction" type="ssqml:MultisetSetFunctionType"/>

<xsd:complexType name="MultisetTerm_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:MultisetTerm"/>
			<xsd:element ref="ssqml:MultisetIntersectStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:AllStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DistinctStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:MultisetPrimary"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultisetTerm_ISO9075ChoiceGroup1" type="ssqml:MultisetTerm_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="MultisetTermType">
	<xsd:choice>
			<xsd:element ref="ssqml:MultisetPrimary"/>
			<xsd:element ref="ssqml:MultisetTerm_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MultisetTerm" type="ssqml:MultisetTermType"/>

<xsd:complexType name="MultisetTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:MultisetStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultisetType" type="ssqml:MultisetTypeType"/>

<xsd:complexType name="MultisetValueConstructorByEnumerationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MultisetStaticString"/>
			<xsd:element ref="ssqml:LeftBracketOrTrigraph"/>
			<xsd:element ref="ssqml:MultisetElementList"/>
			<xsd:element ref="ssqml:RightBracketOrTrigraph"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultisetValueConstructorByEnumeration" type="ssqml:MultisetValueConstructorByEnumerationType"/>

<xsd:complexType name="MultisetValueConstructorByQueryType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MultisetStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:QueryExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultisetValueConstructorByQuery" type="ssqml:MultisetValueConstructorByQueryType"/>

<xsd:complexType name="MultisetValueConstructorType">
	<xsd:choice>
			<xsd:element ref="ssqml:MultisetValueConstructorByEnumeration"/>
			<xsd:element ref="ssqml:MultisetValueConstructorByQuery"/>
			<xsd:element ref="ssqml:TableValueConstructorByQuery"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MultisetValueConstructor" type="ssqml:MultisetValueConstructorType"/>

<xsd:complexType name="MultisetValueExpression_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:MultisetValueExpression"/>
		<xsd:choice>
			<xsd:element ref="ssqml:MultisetUnionStaticString"/>
			<xsd:element ref="ssqml:MultisetExceptStaticString"/>
		</xsd:choice>
		<xsd:choice>
			<xsd:element ref="ssqml:AllStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DistinctStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:MultisetTerm"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MultisetValueExpression_ISO9075ChoiceGroup1" type="ssqml:MultisetValueExpression_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="MultisetValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:MultisetTerm"/>
			<xsd:element ref="ssqml:MultisetValueExpression_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MultisetValueExpression" type="ssqml:MultisetValueExpressionType"/>

<xsd:complexType name="MutatedSetClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MutatedTarget"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:MethodName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MutatedSetClause" type="ssqml:MutatedSetClauseType"/>

<xsd:complexType name="MutatedTargetSpecification_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TargetSpecification"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MutatedTargetSpecification_ISO9075ChoiceGroup1" type="ssqml:MutatedTargetSpecification_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="MutatedTargetSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:TargetSpecification"/>
			<xsd:element ref="ssqml:MutatedTargetSpecification_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:MutatorReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MutatedTargetSpecification" type="ssqml:MutatedTargetSpecificationType"/>

<xsd:complexType name="MutatedTargetType">
	<xsd:choice>
			<xsd:element ref="ssqml:ObjectColumn"/>
			<xsd:element ref="ssqml:MutatedSetClause"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="MutatedTarget" type="ssqml:MutatedTargetType"/>

<xsd:complexType name="MutatorReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MutatedTargetSpecification"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:MethodName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="MutatorReference" type="ssqml:MutatorReferenceType"/>

<xsd:complexType name="NamedColumnsJoinType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UsingStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:JoinColumnList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NamedColumnsJoin" type="ssqml:NamedColumnsJoinType"/>

<xsd:complexType name="NationalCharacterStringLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NStaticString"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:CharacterRepresentation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:SeparatorQuoteCharacterRepresentationQuoteItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringLiteral" type="ssqml:NationalCharacterStringLiteralType"/>

<xsd:complexType name="NationalCharacterStringType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NationalCharacterStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:Length" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType_ISO9075ChoiceGroup1" type="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="NationalCharacterStringType_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NationalCharStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:Length" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType_ISO9075ChoiceGroup2" type="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="NationalCharacterStringType_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NcharStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:Length" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType_ISO9075ChoiceGroup3" type="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="NationalCharacterStringType_ISO9075ChoiceGroup4Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NationalCharacterVaryingStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:Length"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType_ISO9075ChoiceGroup4" type="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup4Type"/>

<xsd:complexType name="NationalCharacterStringType_ISO9075ChoiceGroup5Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NationalCharVaryingStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:Length"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType_ISO9075ChoiceGroup5" type="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup5Type"/>

<xsd:complexType name="NationalCharacterStringType_ISO9075ChoiceGroup6Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NcharVaryingStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:Length"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType_ISO9075ChoiceGroup6" type="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup6Type"/>

<xsd:complexType name="NationalCharacterStringType_ISO9075ChoiceGroup7Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NationalCharacterLargeObjectStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:LargeObjectLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType_ISO9075ChoiceGroup7" type="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup7Type"/>

<xsd:complexType name="NationalCharacterStringType_ISO9075ChoiceGroup8Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NcharLargeObjectStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:LargeObjectLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType_ISO9075ChoiceGroup8" type="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup8Type"/>

<xsd:complexType name="NationalCharacterStringType_ISO9075ChoiceGroup9Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NclobStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:LargeObjectLength" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType_ISO9075ChoiceGroup9" type="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup9Type"/>

<xsd:complexType name="NationalCharacterStringTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup3"/>
			<xsd:element ref="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup4"/>
			<xsd:element ref="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup5"/>
			<xsd:element ref="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup6"/>
			<xsd:element ref="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup7"/>
			<xsd:element ref="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup8"/>
			<xsd:element ref="ssqml:NationalCharacterStringType_ISO9075ChoiceGroup9"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NationalCharacterStringType" type="ssqml:NationalCharacterStringTypeType"/>

<xsd:complexType name="NaturalJoinType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableReference"/>
			<xsd:element ref="ssqml:NaturalStaticString"/>
			<xsd:element ref="ssqml:JoinType" minOccurs="0"/>
			<xsd:element ref="ssqml:JoinStaticString"/>
			<xsd:element ref="ssqml:TablePrimary"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NaturalJoin" type="ssqml:NaturalJoinType"/>

<xsd:complexType name="NaturalLogarithmType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LnStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NumericValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NaturalLogarithm" type="ssqml:NaturalLogarithmType"/>

<xsd:complexType name="NewInvocationType">
	<xsd:choice>
			<xsd:element ref="ssqml:MethodInvocation"/>
			<xsd:element ref="ssqml:RoutineInvocation"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NewInvocation" type="ssqml:NewInvocationType"/>

<xsd:complexType name="NewSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NewStaticString"/>
			<xsd:element ref="ssqml:RoutineInvocation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NewSpecification" type="ssqml:NewSpecificationType"/>

<xsd:complexType name="NextValueExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NextValueForStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NextValueExpression" type="ssqml:NextValueExpressionType"/>

<xsd:complexType name="NonJoinQueryExpression_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:QueryExpressionBody"/>
		<xsd:choice>
			<xsd:element ref="ssqml:UnionStaticString"/>
			<xsd:element ref="ssqml:ExceptStaticString"/>
		</xsd:choice>
		<xsd:choice>
			<xsd:element ref="ssqml:AllStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DistinctStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:CorrespondingSpec" minOccurs="0"/>
			<xsd:element ref="ssqml:QueryTerm"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NonJoinQueryExpression_ISO9075ChoiceGroup1" type="ssqml:NonJoinQueryExpression_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="NonJoinQueryExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonJoinQueryTerm"/>
			<xsd:element ref="ssqml:NonJoinQueryExpression_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NonJoinQueryExpression" type="ssqml:NonJoinQueryExpressionType"/>

<xsd:complexType name="NonJoinQueryPrimary_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NonJoinQueryExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NonJoinQueryPrimary_ISO9075ChoiceGroup1" type="ssqml:NonJoinQueryPrimary_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="NonJoinQueryPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:SimpleTable"/>
			<xsd:element ref="ssqml:NonJoinQueryPrimary_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NonJoinQueryPrimary" type="ssqml:NonJoinQueryPrimaryType"/>

<xsd:complexType name="NonJoinQueryTerm_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:QueryTerm"/>
			<xsd:element ref="ssqml:IntersectStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:AllStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DistinctStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:CorrespondingSpec" minOccurs="0"/>
			<xsd:element ref="ssqml:QueryPrimary"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NonJoinQueryTerm_ISO9075ChoiceGroup1" type="ssqml:NonJoinQueryTerm_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="NonJoinQueryTermType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonJoinQueryPrimary"/>
			<xsd:element ref="ssqml:NonJoinQueryTerm_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NonJoinQueryTerm" type="ssqml:NonJoinQueryTermType"/>

<xsd:complexType name="NondelimiterTokenType">
	<xsd:choice>
			<xsd:element ref="ssqml:RegularIdentifier"/>
			<xsd:element ref="ssqml:KeyWord"/>
			<xsd:element ref="ssqml:UnsignedNumericLiteral"/>
			<xsd:element ref="ssqml:NationalCharacterStringLiteral"/>
			<xsd:element ref="ssqml:BitStringLiteral"/>
			<xsd:element ref="ssqml:HexStringLiteral"/>
			<xsd:element ref="ssqml:LargeObjectLengthToken"/>
			<xsd:element ref="ssqml:Multiplier"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NondelimiterToken" type="ssqml:NondelimiterTokenType"/>

<xsd:complexType name="NonparenthesizedValueExpressionPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:UnsignedValueSpecification"/>
			<xsd:element ref="ssqml:ColumnReference"/>
			<xsd:element ref="ssqml:SetFunctionSpecification"/>
			<xsd:element ref="ssqml:WindowFunction"/>
			<xsd:element ref="ssqml:ScalarSubquery"/>
			<xsd:element ref="ssqml:CaseExpression"/>
			<xsd:element ref="ssqml:CastSpecification"/>
			<xsd:element ref="ssqml:FieldReference"/>
			<xsd:element ref="ssqml:SubtypeTreatment"/>
			<xsd:element ref="ssqml:MethodInvocation"/>
			<xsd:element ref="ssqml:StaticMethodInvocation"/>
			<xsd:element ref="ssqml:NewSpecification"/>
			<xsd:element ref="ssqml:AttributeOrMethodReference"/>
			<xsd:element ref="ssqml:ReferenceResolution"/>
			<xsd:element ref="ssqml:CollectionValueConstructor"/>
			<xsd:element ref="ssqml:ArrayElementReference"/>
			<xsd:element ref="ssqml:MultisetElementReference"/>
			<xsd:element ref="ssqml:RoutineInvocation"/>
			<xsd:element ref="ssqml:NextValueExpression"/>
			<xsd:element ref="ssqml:XmlCastSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NonparenthesizedValueExpressionPrimary" type="ssqml:NonparenthesizedValueExpressionPrimaryType"/>

<xsd:complexType name="NormalizeFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NormalizeStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NormalizeFunction" type="ssqml:NormalizeFunctionType"/>

<xsd:complexType name="NormalizedPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:StringValueExpression"/>
			<xsd:element ref="ssqml:IsStaticString"/>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:NormalizedStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NormalizedPredicate" type="ssqml:NormalizedPredicateType"/>

<xsd:complexType name="NotEqualsOperatorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LessThanOperatorGreaterThanOperator"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NotEqualsOperator" type="ssqml:NotEqualsOperatorType"/>

<xsd:complexType name="NullPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:IsStaticString"/>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:NullStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NullPredicatePart2" type="ssqml:NullPredicatePart2Type"/>

<xsd:complexType name="NullPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:NullPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NullPredicate" type="ssqml:NullPredicateType"/>

<xsd:complexType name="NumericPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:NumericValueFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NumericPrimary" type="ssqml:NumericPrimaryType"/>

<xsd:complexType name="NumericTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:ExactNumericType"/>
			<xsd:element ref="ssqml:ApproximateNumericType"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NumericType" type="ssqml:NumericTypeType"/>

<xsd:complexType name="NumericValueExpression_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NumericValueExpression"/>
			<xsd:choice>
				<xsd:element ref="ssqml:PlusSign"/>
				<xsd:element ref="ssqml:MinusSign"/>
			</xsd:choice>
			<xsd:element ref="ssqml:Term"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="NumericValueExpression_ISO9075ChoiceGroup1" type="ssqml:NumericValueExpression_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="NumericValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:Term"/>
			<xsd:element ref="ssqml:NumericValueExpression_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NumericValueExpression" type="ssqml:NumericValueExpressionType"/>

<xsd:complexType name="NumericValueFunctionType">
	<xsd:choice>
			<xsd:element ref="ssqml:PositionExpression"/>
			<xsd:element ref="ssqml:ExtractExpression"/>
			<xsd:element ref="ssqml:LengthExpression"/>
			<xsd:element ref="ssqml:CardinalityExpression"/>
			<xsd:element ref="ssqml:AbsoluteValueExpression"/>
			<xsd:element ref="ssqml:ModulusExpression"/>
			<xsd:element ref="ssqml:NaturalLogarithm"/>
			<xsd:element ref="ssqml:ExponentialFunction"/>
			<xsd:element ref="ssqml:PowerFunction"/>
			<xsd:element ref="ssqml:SquareRoot"/>
			<xsd:element ref="ssqml:FloorFunction"/>
			<xsd:element ref="ssqml:CeilingFunction"/>
			<xsd:element ref="ssqml:WidthBucketFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="NumericValueFunction" type="ssqml:NumericValueFunctionType"/>

<xsd:complexType name="ObjectName_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:TableName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ObjectName_ISO9075ChoiceGroup1" type="ssqml:ObjectName_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ObjectName_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:DomainStaticString"/>
			<xsd:element ref="ssqml:DomainName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ObjectName_ISO9075ChoiceGroup2" type="ssqml:ObjectName_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="ObjectName_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CollationStaticString"/>
			<xsd:element ref="ssqml:CollationName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ObjectName_ISO9075ChoiceGroup3" type="ssqml:ObjectName_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="ObjectName_ISO9075ChoiceGroup4Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterSetStaticString"/>
			<xsd:element ref="ssqml:CharacterSetName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ObjectName_ISO9075ChoiceGroup4" type="ssqml:ObjectName_ISO9075ChoiceGroup4Type"/>

<xsd:complexType name="ObjectName_ISO9075ChoiceGroup5Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:TranslationStaticString"/>
			<xsd:element ref="ssqml:TransliterationName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ObjectName_ISO9075ChoiceGroup5" type="ssqml:ObjectName_ISO9075ChoiceGroup5Type"/>

<xsd:complexType name="ObjectName_ISO9075ChoiceGroup6Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:TypeStaticString"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ObjectName_ISO9075ChoiceGroup6" type="ssqml:ObjectName_ISO9075ChoiceGroup6Type"/>

<xsd:complexType name="ObjectName_ISO9075ChoiceGroup7Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SequenceStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ObjectName_ISO9075ChoiceGroup7" type="ssqml:ObjectName_ISO9075ChoiceGroup7Type"/>

<xsd:complexType name="ObjectName_ISO9075ChoiceGroup8Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ModuleStaticString"/>
			<xsd:element ref="ssqml:SqlServerModuleName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ObjectName_ISO9075ChoiceGroup8" type="ssqml:ObjectName_ISO9075ChoiceGroup8Type"/>

<xsd:complexType name="ObjectNameType">
	<xsd:choice>
			<xsd:element ref="ssqml:ObjectName_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:ObjectName_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:ObjectName_ISO9075ChoiceGroup3"/>
			<xsd:element ref="ssqml:ObjectName_ISO9075ChoiceGroup4"/>
			<xsd:element ref="ssqml:ObjectName_ISO9075ChoiceGroup5"/>
			<xsd:element ref="ssqml:ObjectName_ISO9075ChoiceGroup6"/>
			<xsd:element ref="ssqml:ObjectName_ISO9075ChoiceGroup7"/>
			<xsd:element ref="ssqml:SpecificRoutineDesignator"/>
			<xsd:element ref="ssqml:ObjectName_ISO9075ChoiceGroup8"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ObjectName" type="ssqml:ObjectNameType"/>

<xsd:complexType name="ObjectPrivileges_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:Action"/>
			<xsd:element ref="ssqml:CommaActionItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ObjectPrivileges_ISO9075ChoiceGroup1" type="ssqml:ObjectPrivileges_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ObjectPrivilegesType">
	<xsd:choice>
			<xsd:element ref="ssqml:AllPrivilegesStaticString"/>
			<xsd:element ref="ssqml:ObjectPrivileges_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ObjectPrivileges" type="ssqml:ObjectPrivilegesType"/>

<xsd:complexType name="OctetLengthExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Octet_lengthStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:StringValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OctetLengthExpression" type="ssqml:OctetLengthExpressionType"/>

<xsd:complexType name="OctetLikePredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:LikeStaticString"/>
			<xsd:element ref="ssqml:OctetPattern"/>
			<xsd:element ref="ssqml:EscapeStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:EscapeOctet" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OctetLikePredicatePart2" type="ssqml:OctetLikePredicatePart2Type"/>

<xsd:complexType name="OctetLikePredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:OctetLikePredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OctetLikePredicate" type="ssqml:OctetLikePredicateType"/>

<xsd:complexType name="OldOrNewValuesAliasListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OldOrNewValuesAlias" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OldOrNewValuesAliasList" type="ssqml:OldOrNewValuesAliasListType"/>

<xsd:complexType name="OldOrNewValuesAlias_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:OldStaticString"/>
			<xsd:element ref="ssqml:RowStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:OldValuesCorrelationName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OldOrNewValuesAlias_ISO9075ChoiceGroup1" type="ssqml:OldOrNewValuesAlias_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="OldOrNewValuesAlias_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NewStaticString"/>
			<xsd:element ref="ssqml:RowStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:NewValuesCorrelationName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OldOrNewValuesAlias_ISO9075ChoiceGroup2" type="ssqml:OldOrNewValuesAlias_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="OldOrNewValuesAlias_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:OldTableStaticString"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:OldValuesTableAlias"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OldOrNewValuesAlias_ISO9075ChoiceGroup3" type="ssqml:OldOrNewValuesAlias_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="OldOrNewValuesAlias_ISO9075ChoiceGroup4Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NewTableStaticString"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:NewValuesTableAlias"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OldOrNewValuesAlias_ISO9075ChoiceGroup4" type="ssqml:OldOrNewValuesAlias_ISO9075ChoiceGroup4Type"/>

<xsd:complexType name="OldOrNewValuesAliasType">
	<xsd:choice>
			<xsd:element ref="ssqml:OldOrNewValuesAlias_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:OldOrNewValuesAlias_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:OldOrNewValuesAlias_ISO9075ChoiceGroup3"/>
			<xsd:element ref="ssqml:OldOrNewValuesAlias_ISO9075ChoiceGroup4"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="OldOrNewValuesAlias" type="ssqml:OldOrNewValuesAliasType"/>

<xsd:complexType name="OnlySpecType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OnlyStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TableOrQueryName"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OnlySpec" type="ssqml:OnlySpecType"/>

<xsd:complexType name="OpenStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OpenStaticString"/>
			<xsd:element ref="ssqml:CursorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OpenStatement" type="ssqml:OpenStatementType"/>

<xsd:complexType name="OrderByClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OrderByStaticString"/>
			<xsd:element ref="ssqml:SortSpecificationList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OrderByClause" type="ssqml:OrderByClauseType"/>

<xsd:complexType name="OrderedSetFunctionType">
	<xsd:choice>
			<xsd:element ref="ssqml:HypotheticalSetFunction"/>
			<xsd:element ref="ssqml:InverseDistributionFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="OrderedSetFunction" type="ssqml:OrderedSetFunctionType"/>

<xsd:complexType name="OrderingCategoryType">
	<xsd:choice>
			<xsd:element ref="ssqml:RelativeCategory"/>
			<xsd:element ref="ssqml:MapCategory"/>
			<xsd:element ref="ssqml:StateCategory"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="OrderingCategory" type="ssqml:OrderingCategoryType"/>

<xsd:complexType name="OrderingFormType">
	<xsd:choice>
			<xsd:element ref="ssqml:EqualsOrderingForm"/>
			<xsd:element ref="ssqml:FullOrderingForm"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="OrderingForm" type="ssqml:OrderingFormType"/>

<xsd:complexType name="OrdinaryGroupingSetListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OrdinaryGroupingSet"/>
			<xsd:element ref="ssqml:CommaOrdinaryGroupingSetItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OrdinaryGroupingSetList" type="ssqml:OrdinaryGroupingSetListType"/>

<xsd:complexType name="OrdinaryGroupingSet_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:GroupingColumnReferenceList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OrdinaryGroupingSet_ISO9075ChoiceGroup1" type="ssqml:OrdinaryGroupingSet_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="OrdinaryGroupingSetType">
	<xsd:choice>
			<xsd:element ref="ssqml:GroupingColumnReference"/>
			<xsd:element ref="ssqml:OrdinaryGroupingSet_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="OrdinaryGroupingSet" type="ssqml:OrdinaryGroupingSetType"/>

<xsd:complexType name="OriginalMethodSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PartialMethodSpecification"/>
			<xsd:element ref="ssqml:SelfAsResultStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SelfAsLocatorStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:MethodCharacteristics" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OriginalMethodSpecification" type="ssqml:OriginalMethodSpecificationType"/>

<xsd:complexType name="OutputUsingClauseType">
	<xsd:choice>
			<xsd:element ref="ssqml:IntoArguments"/>
			<xsd:element ref="ssqml:IntoDescriptor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="OutputUsingClause" type="ssqml:OutputUsingClauseType"/>

<xsd:complexType name="OverlapsPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:OverlapsStaticString"/>
			<xsd:element ref="ssqml:RowValuePredicand2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OverlapsPredicatePart2" type="ssqml:OverlapsPredicatePart2Type"/>

<xsd:complexType name="OverlapsPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OverlapsPredicatePart1"/>
			<xsd:element ref="ssqml:OverlapsPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OverlapsPredicate" type="ssqml:OverlapsPredicateType"/>

<xsd:complexType name="OverridingMethodSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OverridingStaticString"/>
			<xsd:element ref="ssqml:PartialMethodSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="OverridingMethodSpecification" type="ssqml:OverridingMethodSpecificationType"/>

<xsd:complexType name="ParameterStyleClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ParameterStyleStaticString"/>
			<xsd:element ref="ssqml:ParameterStyle"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ParameterStyleClause" type="ssqml:ParameterStyleClauseType"/>

<xsd:complexType name="ParameterTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:LocatorIndication" minOccurs="0"/>
			<xsd:element ref="ssqml:DocumentOrContent" minOccurs="0"/>
			<xsd:element ref="ssqml:StringTypeOption" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ParameterType" type="ssqml:ParameterTypeType"/>

<xsd:complexType name="ParenthesizedBooleanValueExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:BooleanValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ParenthesizedBooleanValueExpression" type="ssqml:ParenthesizedBooleanValueExpressionType"/>

<xsd:complexType name="ParenthesizedValueExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ParenthesizedValueExpression" type="ssqml:ParenthesizedValueExpressionType"/>

<xsd:complexType name="PartialMethodSpecificationType">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:InstanceStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:StaticStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ConstructorStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:MethodStaticString"/>
			<xsd:element ref="ssqml:MethodName"/>
			<xsd:element ref="ssqml:SqlParameterDeclarationList"/>
			<xsd:element ref="ssqml:ReturnsClause"/>
			<xsd:element ref="ssqml:SpecificStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SpecificMethodName" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PartialMethodSpecification" type="ssqml:PartialMethodSpecificationType"/>

<xsd:complexType name="PathSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PathStaticString"/>
			<xsd:element ref="ssqml:SchemaNameList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PathSpecification" type="ssqml:PathSpecificationType"/>

<xsd:complexType name="PeriodAsteriskedIdentifierItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:AsteriskedIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PeriodAsteriskedIdentifierItemtype" type="ssqml:PeriodAsteriskedIdentifierItemtypeType"/>

<xsd:complexType name="PeriodIdentifierItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:Identifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PeriodIdentifierItemtype" type="ssqml:PeriodIdentifierItemtypeType"/>

<xsd:complexType name="PositionExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:StringPositionExpression"/>
			<xsd:element ref="ssqml:BlobPositionExpression"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="PositionExpression" type="ssqml:PositionExpressionType"/>

<xsd:complexType name="PowerFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PowerStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NumericValueExpressionBase"/>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:NumericValueExpressionExponent"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PowerFunction" type="ssqml:PowerFunctionType"/>

<xsd:complexType name="PredefinedType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterStringType"/>
			<xsd:element ref="ssqml:CharacterSetStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharacterSetSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:CollateClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PredefinedType_ISO9075ChoiceGroup1" type="ssqml:PredefinedType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="PredefinedType_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NationalCharacterStringType"/>
			<xsd:element ref="ssqml:CollateClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PredefinedType_ISO9075ChoiceGroup2" type="ssqml:PredefinedType_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="PredefinedTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:PredefinedType_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:PredefinedType_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:BinaryLargeObjectStringType"/>
			<xsd:element ref="ssqml:NumericType"/>
			<xsd:element ref="ssqml:BooleanStaticString"/>
			<xsd:element ref="ssqml:DatetimeType"/>
			<xsd:element ref="ssqml:IntervalType"/>
			<xsd:element ref="ssqml:XmlType"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="PredefinedType" type="ssqml:PredefinedTypeType"/>

<xsd:complexType name="PredicateType">
	<xsd:choice>
			<xsd:element ref="ssqml:ComparisonPredicate"/>
			<xsd:element ref="ssqml:BetweenPredicate"/>
			<xsd:element ref="ssqml:InPredicate"/>
			<xsd:element ref="ssqml:LikePredicate"/>
			<xsd:element ref="ssqml:SimilarPredicate"/>
			<xsd:element ref="ssqml:NullPredicate"/>
			<xsd:element ref="ssqml:QuantifiedComparisonPredicate"/>
			<xsd:element ref="ssqml:ExistsPredicate"/>
			<xsd:element ref="ssqml:UniquePredicate"/>
			<xsd:element ref="ssqml:NormalizedPredicate"/>
			<xsd:element ref="ssqml:MatchPredicate"/>
			<xsd:element ref="ssqml:OverlapsPredicate"/>
			<xsd:element ref="ssqml:DistinctPredicate"/>
			<xsd:element ref="ssqml:MemberPredicate"/>
			<xsd:element ref="ssqml:SubmultisetPredicate"/>
			<xsd:element ref="ssqml:SetPredicate"/>
			<xsd:element ref="ssqml:TypePredicate"/>
			<xsd:element ref="ssqml:XmlContentPredicate"/>
			<xsd:element ref="ssqml:XmlDocumentPredicate"/>
			<xsd:element ref="ssqml:XmlValidPredicate"/>
			<xsd:element ref="ssqml:XmlExistsPredicate"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Predicate" type="ssqml:PredicateType"/>

<xsd:complexType name="PreparableDynamicDeleteStatementPositionedType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeleteStaticString"/>
			<xsd:element ref="ssqml:FromStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:TargetTable" minOccurs="0"/>
			<xsd:element ref="ssqml:WhereCurrentOfStaticString"/>
			<xsd:element ref="ssqml:ScopeOption" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PreparableDynamicDeleteStatementPositioned" type="ssqml:PreparableDynamicDeleteStatementPositionedType"/>

<xsd:complexType name="PreparableDynamicUpdateStatementPositionedType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UpdateStaticString"/>
			<xsd:element ref="ssqml:TargetTable" minOccurs="0"/>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:SetClauseList"/>
			<xsd:element ref="ssqml:WhereCurrentOfStaticString"/>
			<xsd:element ref="ssqml:ScopeOption" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PreparableDynamicUpdateStatementPositioned" type="ssqml:PreparableDynamicUpdateStatementPositionedType"/>

<xsd:complexType name="PreparableSqlDataStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:DeleteStatementSearched"/>
			<xsd:element ref="ssqml:DynamicSingleRowSelectStatement"/>
			<xsd:element ref="ssqml:InsertStatement"/>
			<xsd:element ref="ssqml:DynamicSelectStatement"/>
			<xsd:element ref="ssqml:UpdateStatementSearched"/>
			<xsd:element ref="ssqml:MergeStatement"/>
			<xsd:element ref="ssqml:PreparableDynamicDeleteStatementPositioned"/>
			<xsd:element ref="ssqml:PreparableDynamicUpdateStatementPositioned"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="PreparableSqlDataStatement" type="ssqml:PreparableSqlDataStatementType"/>

<xsd:complexType name="PreparableStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:PreparableSqlDataStatement"/>
			<xsd:element ref="ssqml:PreparableSqlSchemaStatement"/>
			<xsd:element ref="ssqml:PreparableSqlTransactionStatement"/>
			<xsd:element ref="ssqml:PreparableSqlControlStatement"/>
			<xsd:element ref="ssqml:PreparableSqlSessionStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="PreparableStatement" type="ssqml:PreparableStatementType"/>

<xsd:complexType name="PrepareStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PrepareStaticString"/>
			<xsd:element ref="ssqml:SqlStatementName"/>
			<xsd:element ref="ssqml:AttributesSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:SqlStatementVariable"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PrepareStatement" type="ssqml:PrepareStatementType"/>

<xsd:complexType name="PrimaryDatetimeFieldType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonSecondPrimaryDatetimeField"/>
			<xsd:element ref="ssqml:SecondStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="PrimaryDatetimeField" type="ssqml:PrimaryDatetimeFieldType"/>

<xsd:complexType name="PrivilegeMethodListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SpecificRoutineDesignator"/>
			<xsd:element ref="ssqml:CommaSpecificRoutineDesignatorItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="PrivilegeMethodList" type="ssqml:PrivilegeMethodListType"/>

<xsd:complexType name="PrivilegesType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ObjectPrivileges"/>
			<xsd:element ref="ssqml:OnStaticString"/>
			<xsd:element ref="ssqml:ObjectName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Privileges" type="ssqml:PrivilegesType"/>

<xsd:complexType name="QualifiedAsterisk_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:AsteriskedIdentifierChain"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:Asterisk"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="QualifiedAsterisk_ISO9075ChoiceGroup1" type="ssqml:QualifiedAsterisk_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="QualifiedAsteriskType">
	<xsd:choice>
			<xsd:element ref="ssqml:QualifiedAsterisk_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:AllFieldsReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="QualifiedAsterisk" type="ssqml:QualifiedAsteriskType"/>

<xsd:complexType name="QualifiedJoinType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableReference"/>
			<xsd:element ref="ssqml:JoinType" minOccurs="0"/>
			<xsd:element ref="ssqml:JoinStaticString"/>
			<xsd:element ref="ssqml:TableReference"/>
			<xsd:element ref="ssqml:JoinSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="QualifiedJoin" type="ssqml:QualifiedJoinType"/>

<xsd:complexType name="QuantifiedComparisonPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:CompOp"/>
			<xsd:element ref="ssqml:Quantifier"/>
			<xsd:element ref="ssqml:TableSubquery"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="QuantifiedComparisonPredicatePart2" type="ssqml:QuantifiedComparisonPredicatePart2Type"/>

<xsd:complexType name="QuantifiedComparisonPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:QuantifiedComparisonPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="QuantifiedComparisonPredicate" type="ssqml:QuantifiedComparisonPredicateType"/>

<xsd:complexType name="QuantifierType">
	<xsd:choice>
			<xsd:element ref="ssqml:All"/>
			<xsd:element ref="ssqml:Some"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Quantifier" type="ssqml:QuantifierType"/>

<xsd:complexType name="QueryExpressionBodyType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonJoinQueryExpression"/>
			<xsd:element ref="ssqml:JoinedTable"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="QueryExpressionBody" type="ssqml:QueryExpressionBodyType"/>

<xsd:complexType name="QueryExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WithClause" minOccurs="0"/>
			<xsd:element ref="ssqml:QueryExpressionBody"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="QueryExpression" type="ssqml:QueryExpressionType"/>

<xsd:complexType name="QueryPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonJoinQueryPrimary"/>
			<xsd:element ref="ssqml:JoinedTable"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="QueryPrimary" type="ssqml:QueryPrimaryType"/>

<xsd:complexType name="QuerySpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SelectStaticString"/>
			<xsd:element ref="ssqml:SetQuantifier" minOccurs="0"/>
			<xsd:element ref="ssqml:SelectList"/>
			<xsd:element ref="ssqml:TableExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="QuerySpecification" type="ssqml:QuerySpecificationType"/>

<xsd:complexType name="QueryTermType">
	<xsd:choice>
			<xsd:element ref="ssqml:NonJoinQueryTerm"/>
			<xsd:element ref="ssqml:JoinedTable"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="QueryTerm" type="ssqml:QueryTermType"/>

<xsd:complexType name="QuoteSymbolType">
	<xsd:sequence>
			<xsd:element ref="ssqml:QuoteQuote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="QuoteSymbol" type="ssqml:QuoteSymbolType"/>

<xsd:complexType name="RecursiveSearchOrder_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:DepthFirstByStaticString"/>
			<xsd:element ref="ssqml:SortSpecificationList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RecursiveSearchOrder_ISO9075ChoiceGroup1" type="ssqml:RecursiveSearchOrder_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="RecursiveSearchOrder_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:BreadthFirstByStaticString"/>
			<xsd:element ref="ssqml:SortSpecificationList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RecursiveSearchOrder_ISO9075ChoiceGroup2" type="ssqml:RecursiveSearchOrder_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="RecursiveSearchOrderType">
	<xsd:choice>
			<xsd:element ref="ssqml:RecursiveSearchOrder_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:RecursiveSearchOrder_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RecursiveSearchOrder" type="ssqml:RecursiveSearchOrderType"/>

<xsd:complexType name="RefCastOptionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CastToRef" minOccurs="0"/>
			<xsd:element ref="ssqml:CastToType" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RefCastOption" type="ssqml:RefCastOptionType"/>

<xsd:complexType name="ReferenceResolutionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DerefStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ReferenceValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReferenceResolution" type="ssqml:ReferenceResolutionType"/>

<xsd:complexType name="ReferenceScopeCheckType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ReferencesAreStaticString"/>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CheckedStaticString"/>
			<xsd:element ref="ssqml:OnDeleteStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ReferenceScopeCheckAction" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReferenceScopeCheck" type="ssqml:ReferenceScopeCheckType"/>

<xsd:complexType name="ReferenceTypeSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:UserDefinedRepresentation"/>
			<xsd:element ref="ssqml:DerivedRepresentation"/>
			<xsd:element ref="ssqml:SystemGeneratedRepresentation"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ReferenceTypeSpecification" type="ssqml:ReferenceTypeSpecificationType"/>

<xsd:complexType name="ReferenceTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RefStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ReferencedType"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:ScopeClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReferenceType" type="ssqml:ReferenceTypeType"/>

<xsd:complexType name="ReferenceableViewSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OfStaticString"/>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:SubviewClause" minOccurs="0"/>
			<xsd:element ref="ssqml:ViewElementList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReferenceableViewSpecification" type="ssqml:ReferenceableViewSpecificationType"/>

<xsd:complexType name="ReferencedTableAndColumnsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:ReferenceColumnList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReferencedTableAndColumns" type="ssqml:ReferencedTableAndColumnsType"/>

<xsd:complexType name="ReferencesSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ReferencesStaticString"/>
			<xsd:element ref="ssqml:ReferencedTableAndColumns"/>
			<xsd:element ref="ssqml:MatchStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:MatchType" minOccurs="0"/>
			<xsd:element ref="ssqml:ReferentialTriggeredAction" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReferencesSpecification" type="ssqml:ReferencesSpecificationType"/>

<xsd:complexType name="ReferentialConstraintDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ForeignKeyStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ReferencingColumns"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:ReferencesSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReferentialConstraintDefinition" type="ssqml:ReferentialConstraintDefinitionType"/>

<xsd:complexType name="ReferentialTriggeredAction_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:UpdateRule"/>
			<xsd:element ref="ssqml:DeleteRule" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReferentialTriggeredAction_ISO9075ChoiceGroup1" type="ssqml:ReferentialTriggeredAction_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ReferentialTriggeredAction_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeleteRule"/>
			<xsd:element ref="ssqml:UpdateRule" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReferentialTriggeredAction_ISO9075ChoiceGroup2" type="ssqml:ReferentialTriggeredAction_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="ReferentialTriggeredActionType">
	<xsd:choice>
			<xsd:element ref="ssqml:ReferentialTriggeredAction_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:ReferentialTriggeredAction_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ReferentialTriggeredAction" type="ssqml:ReferentialTriggeredActionType"/>

<xsd:complexType name="RegularCharacterSetIdentifierType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Identifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularCharacterSetIdentifier" type="ssqml:RegularCharacterSetIdentifierType"/>

<xsd:complexType name="RegularCharacterSet_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftBracket"/>
			<xsd:element ref="ssqml:CharacterEnumeration" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightBracket"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularCharacterSet_ISO9075ChoiceGroup1" type="ssqml:RegularCharacterSet_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="RegularCharacterSet_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftBracket2"/>
			<xsd:element ref="ssqml:Circumflex"/>
			<xsd:element ref="ssqml:CharacterEnumeration" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightBracket2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularCharacterSet_ISO9075ChoiceGroup2" type="ssqml:RegularCharacterSet_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="RegularCharacterSet_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftBracket3"/>
			<xsd:element ref="ssqml:CharacterEnumerationInclude" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:Circumflex"/>
			<xsd:element ref="ssqml:CharacterEnumerationExclude" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightBracket3"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularCharacterSet_ISO9075ChoiceGroup3" type="ssqml:RegularCharacterSet_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="RegularCharacterSetType">
	<xsd:choice>
			<xsd:element ref="ssqml:Underscore"/>
			<xsd:element ref="ssqml:RegularCharacterSet_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:RegularCharacterSet_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:RegularCharacterSet_ISO9075ChoiceGroup3"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RegularCharacterSet" type="ssqml:RegularCharacterSetType"/>

<xsd:complexType name="RegularExpressionSubstringFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SubstringStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:SimilarStaticString"/>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:EscapeStaticString"/>
			<xsd:element ref="ssqml:EscapeCharacter"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularExpressionSubstringFunction" type="ssqml:RegularExpressionSubstringFunctionType"/>

<xsd:complexType name="RegularExpression_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:RegularExpression"/>
			<xsd:element ref="ssqml:VerticalBar"/>
			<xsd:element ref="ssqml:RegularTerm"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularExpression_ISO9075ChoiceGroup1" type="ssqml:RegularExpression_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="RegularExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:RegularTerm"/>
			<xsd:element ref="ssqml:RegularExpression_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RegularExpression" type="ssqml:RegularExpressionType"/>

<xsd:complexType name="RegularFactor_ISO9075ChoiceGroup1Type">
			<xsd:choice>
				<xsd:element ref="ssqml:Asterisk"/>
				<xsd:element ref="ssqml:PlusSign"/>
				<xsd:element ref="ssqml:QuestionMark"/>
				<xsd:element ref="ssqml:RepeatFactor"/>
			</xsd:choice>
</xsd:complexType>

<xsd:element name="RegularFactor_ISO9075ChoiceGroup1" type="ssqml:RegularFactor_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="RegularFactorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RegularPrimary"/>
			<xsd:element ref="ssqml:RegularFactor_ISO9075ChoiceGroup1" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularFactor" type="ssqml:RegularFactorType"/>

<xsd:complexType name="RegularPrimary_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:RegularExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularPrimary_ISO9075ChoiceGroup1" type="ssqml:RegularPrimary_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="RegularPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterSpecifier"/>
			<xsd:element ref="ssqml:Percent"/>
			<xsd:element ref="ssqml:RegularCharacterSet"/>
			<xsd:element ref="ssqml:RegularPrimary_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RegularPrimary" type="ssqml:RegularPrimaryType"/>
<xsd:element name="RegularPrimary2" type="ssqml:RegularPrimaryType"/>

<xsd:complexType name="RegularTerm_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:RegularTerm"/>
			<xsd:element ref="ssqml:RegularFactor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularTerm_ISO9075ChoiceGroup1" type="ssqml:RegularTerm_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="RegularTermType">
	<xsd:choice>
			<xsd:element ref="ssqml:RegularFactor"/>
			<xsd:element ref="ssqml:RegularTerm_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RegularTerm" type="ssqml:RegularTermType"/>

<xsd:complexType name="RegularViewSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:ViewColumnList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RegularViewSpecification" type="ssqml:RegularViewSpecificationType"/>

<xsd:complexType name="RelativeCategoryType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RelativeWithStaticString"/>
			<xsd:element ref="ssqml:RelativeFunctionSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RelativeCategory" type="ssqml:RelativeCategoryType"/>

<xsd:complexType name="RelativeFunctionSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SpecificRoutineDesignator"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RelativeFunctionSpecification" type="ssqml:RelativeFunctionSpecificationType"/>

<xsd:complexType name="ReleaseSavepointStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ReleaseSavepointStaticString"/>
			<xsd:element ref="ssqml:SavepointSpecifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReleaseSavepointStatement" type="ssqml:ReleaseSavepointStatementType"/>

<xsd:complexType name="RepeatFactorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftBrace"/>
			<xsd:element ref="ssqml:LowValue"/>
			<xsd:element ref="ssqml:UpperLimit" minOccurs="0"/>
			<xsd:element ref="ssqml:RightBrace"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RepeatFactor" type="ssqml:RepeatFactorType"/>

<xsd:complexType name="RepeatStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:BeginningLabel" minOccurs="0"/>
			<xsd:element ref="ssqml:Colon" minOccurs="0"/>
			<xsd:element ref="ssqml:RepeatStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
			<xsd:element ref="ssqml:UntilStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:EndRepeatStaticString"/>
			<xsd:element ref="ssqml:EndingLabel" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RepeatStatement" type="ssqml:RepeatStatementType"/>

<xsd:complexType name="RepeatableClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RepeatableStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:RepeatArgument"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RepeatableClause" type="ssqml:RepeatableClauseType"/>

<xsd:complexType name="RepresentationType">
	<xsd:choice>
			<xsd:element ref="ssqml:PredefinedType"/>
			<xsd:element ref="ssqml:MemberList"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Representation" type="ssqml:RepresentationType"/>

<xsd:complexType name="ResignalStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ResignalStaticString"/>
			<xsd:element ref="ssqml:SignalValue" minOccurs="0"/>
			<xsd:element ref="ssqml:SetSignalInformation" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ResignalStatement" type="ssqml:ResignalStatementType"/>

<xsd:complexType name="ResultCastFromTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:LocatorIndication" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ResultCastFromType" type="ssqml:ResultCastFromTypeType"/>

<xsd:complexType name="ResultCastType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CastFromStaticString"/>
			<xsd:element ref="ssqml:ResultCastFromType"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ResultCast" type="ssqml:ResultCastType"/>

<xsd:complexType name="ResultSetCursorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ForProcedureStaticString"/>
			<xsd:element ref="ssqml:SpecificRoutineDesignator"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ResultSetCursor" type="ssqml:ResultSetCursorType"/>

<xsd:complexType name="ResultType">
	<xsd:choice>
			<xsd:element ref="ssqml:ResultExpression"/>
			<xsd:element ref="ssqml:NullStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Result" type="ssqml:ResultType"/>

<xsd:complexType name="ReturnStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ReturnStaticString"/>
			<xsd:element ref="ssqml:ReturnValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReturnStatement" type="ssqml:ReturnStatementType"/>

<xsd:complexType name="ReturnValueType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:NullStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ReturnValue" type="ssqml:ReturnValueType"/>

<xsd:complexType name="ReturnsClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ReturnsStaticString"/>
			<xsd:element ref="ssqml:ReturnsType"/>
			<xsd:element ref="ssqml:XmlPassingMechanism" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReturnsClause" type="ssqml:ReturnsClauseType"/>

<xsd:complexType name="ReturnsDataTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:LocatorIndication" minOccurs="0"/>
			<xsd:element ref="ssqml:DocumentOrContent" minOccurs="0"/>
			<xsd:element ref="ssqml:StringTypeOption" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReturnsDataType" type="ssqml:ReturnsDataTypeType"/>

<xsd:complexType name="ReturnsTableTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableStaticString"/>
			<xsd:element ref="ssqml:TableFunctionColumnList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReturnsTableType" type="ssqml:ReturnsTableTypeType"/>

<xsd:complexType name="ReturnsType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ReturnsDataType"/>
			<xsd:element ref="ssqml:ResultCast" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ReturnsType_ISO9075ChoiceGroup1" type="ssqml:ReturnsType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="ReturnsTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:ReturnsType_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:ReturnsTableType"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ReturnsType" type="ssqml:ReturnsTypeType"/>

<xsd:complexType name="RevokePrivilegeStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RevokeStaticString"/>
			<xsd:element ref="ssqml:RevokeOptionExtension" minOccurs="0"/>
			<xsd:element ref="ssqml:Privileges"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:Grantee"/>
			<xsd:element ref="ssqml:CommaGranteeItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:GrantedByStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:Grantor" minOccurs="0"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RevokePrivilegeStatement" type="ssqml:RevokePrivilegeStatementType"/>

<xsd:complexType name="RevokeRoleStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RevokeStaticString"/>
			<xsd:element ref="ssqml:AdminOptionForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:RoleRevoked"/>
			<xsd:element ref="ssqml:CommaRoleRevokedItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:Grantee"/>
			<xsd:element ref="ssqml:CommaGranteeItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:GrantedByStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:Grantor" minOccurs="0"/>
			<xsd:element ref="ssqml:DropBehavior"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RevokeRoleStatement" type="ssqml:RevokeRoleStatementType"/>

<xsd:complexType name="RevokeStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:RevokePrivilegeStatement"/>
			<xsd:element ref="ssqml:RevokeRoleStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RevokeStatement" type="ssqml:RevokeStatementType"/>

<xsd:complexType name="RightArrowType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MinusSignGreaterThanOperator"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RightArrow" type="ssqml:RightArrowType"/>

<xsd:complexType name="RoleDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateRoleStaticString"/>
			<xsd:element ref="ssqml:RoleName"/>
			<xsd:element ref="ssqml:WithAdminStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:Grantor" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RoleDefinition" type="ssqml:RoleDefinitionType"/>

<xsd:complexType name="RoleSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueSpecification"/>
			<xsd:element ref="ssqml:NoneStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RoleSpecification" type="ssqml:RoleSpecificationType"/>

<xsd:complexType name="RollbackStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RollbackStaticString"/>
			<xsd:element ref="ssqml:WorkStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:AndStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:NoStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ChainStaticString"/>
			<xsd:element ref="ssqml:SavepointClause"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RollbackStatement" type="ssqml:RollbackStatementType"/>

<xsd:complexType name="RollupListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RollupStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:OrdinaryGroupingSetList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RollupList" type="ssqml:RollupListType"/>

<xsd:complexType name="RoutineBodyType">
	<xsd:choice>
			<xsd:element ref="ssqml:SqlRoutineSpec"/>
			<xsd:element ref="ssqml:ExternalBodyReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RoutineBody" type="ssqml:RoutineBodyType"/>

<xsd:complexType name="RoutineCharacteristic_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SpecificStaticString"/>
			<xsd:element ref="ssqml:SpecificName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RoutineCharacteristic_ISO9075ChoiceGroup1" type="ssqml:RoutineCharacteristic_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="RoutineCharacteristicType">
	<xsd:choice>
			<xsd:element ref="ssqml:ParameterStyleClause"/>
			<xsd:element ref="ssqml:RoutineCharacteristic_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:DeterministicCharacteristic"/>
			<xsd:element ref="ssqml:SqlDataAccessIndication"/>
			<xsd:element ref="ssqml:NullCallClause"/>
			<xsd:element ref="ssqml:DynamicResultSetsCharacteristic"/>
			<xsd:element ref="ssqml:SavepointLevelIndication"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RoutineCharacteristic" type="ssqml:RoutineCharacteristicType"/>

<xsd:complexType name="RoutineCharacteristicsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RoutineCharacteristic" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RoutineCharacteristics" type="ssqml:RoutineCharacteristicsType"/>

<xsd:complexType name="RoutineInvocationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RoutineName"/>
			<xsd:element ref="ssqml:SqlArgumentList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RoutineInvocation" type="ssqml:RoutineInvocationType"/>

<xsd:complexType name="RoutineNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaName" minOccurs="0"/>
			<xsd:element ref="ssqml:Period" minOccurs="0"/>
			<xsd:element ref="ssqml:QualifiedIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RoutineName" type="ssqml:RoutineNameType"/>

<xsd:complexType name="RoutineType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:InstanceStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:StaticStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ConstructorStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:MethodStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RoutineType_ISO9075ChoiceGroup1" type="ssqml:RoutineType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="RoutineTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:RoutineStaticString"/>
			<xsd:element ref="ssqml:FunctionStaticString"/>
			<xsd:element ref="ssqml:ProcedureStaticString"/>
			<xsd:element ref="ssqml:RoutineType_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RoutineType" type="ssqml:RoutineTypeType"/>

<xsd:complexType name="RowTypeBodyType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:FieldDefinition"/>
			<xsd:element ref="ssqml:CommaFieldDefinitionItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RowTypeBody" type="ssqml:RowTypeBodyType"/>

<xsd:complexType name="RowTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowStaticString"/>
			<xsd:element ref="ssqml:RowTypeBody"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RowType" type="ssqml:RowTypeType"/>

<xsd:complexType name="RowValueConstructorElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValueConstructorElement"/>
			<xsd:element ref="ssqml:CommaRowValueConstructorElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RowValueConstructorElementList" type="ssqml:RowValueConstructorElementListType"/>

<xsd:complexType name="RowValueConstructorPredicandType">
	<xsd:choice>
			<xsd:element ref="ssqml:CommonValueExpression"/>
			<xsd:element ref="ssqml:BooleanPredicand"/>
			<xsd:element ref="ssqml:ExplicitRowValueConstructor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RowValueConstructorPredicand" type="ssqml:RowValueConstructorPredicandType"/>

<xsd:complexType name="RowValueConstructorType">
	<xsd:choice>
			<xsd:element ref="ssqml:CommonValueExpression"/>
			<xsd:element ref="ssqml:BooleanValueExpression"/>
			<xsd:element ref="ssqml:ExplicitRowValueConstructor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RowValueConstructor" type="ssqml:RowValueConstructorType"/>

<xsd:complexType name="RowValueExpressionListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableRowValueExpression"/>
			<xsd:element ref="ssqml:CommaTableRowValueExpressionItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="RowValueExpressionList" type="ssqml:RowValueExpressionListType"/>

<xsd:complexType name="RowValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:RowValueSpecialCase"/>
			<xsd:element ref="ssqml:ExplicitRowValueConstructor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RowValueExpression" type="ssqml:RowValueExpressionType"/>

<xsd:complexType name="RowValuePredicandType">
	<xsd:choice>
			<xsd:element ref="ssqml:RowValueSpecialCase"/>
			<xsd:element ref="ssqml:RowValueConstructorPredicand"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="RowValuePredicand" type="ssqml:RowValuePredicandType"/>

<xsd:complexType name="SampleClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TablesampleStaticString"/>
			<xsd:element ref="ssqml:SampleMethod"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SamplePercentage"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:RepeatableClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SampleClause" type="ssqml:SampleClauseType"/>

<xsd:complexType name="SavepointClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ToSavepointStaticString"/>
			<xsd:element ref="ssqml:SavepointSpecifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SavepointClause" type="ssqml:SavepointClauseType"/>

<xsd:complexType name="SavepointStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SavepointStaticString"/>
			<xsd:element ref="ssqml:SavepointSpecifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SavepointStatement" type="ssqml:SavepointStatementType"/>

<xsd:complexType name="SchemaCharacterSetOrPath_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaCharacterSetSpecification2"/>
			<xsd:element ref="ssqml:SchemaPathSpecification2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaCharacterSetOrPath_ISO9075ChoiceGroup1" type="ssqml:SchemaCharacterSetOrPath_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SchemaCharacterSetOrPath_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaPathSpecification3"/>
			<xsd:element ref="ssqml:SchemaCharacterSetSpecification3"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaCharacterSetOrPath_ISO9075ChoiceGroup2" type="ssqml:SchemaCharacterSetOrPath_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="SchemaCharacterSetOrPathType">
	<xsd:choice>
			<xsd:element ref="ssqml:SchemaCharacterSetSpecification"/>
			<xsd:element ref="ssqml:SchemaPathSpecification"/>
			<xsd:element ref="ssqml:SchemaCharacterSetOrPath_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:SchemaCharacterSetOrPath_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SchemaCharacterSetOrPath" type="ssqml:SchemaCharacterSetOrPathType"/>

<xsd:complexType name="SchemaCharacterSetSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DefaultCharacterSetStaticString"/>
			<xsd:element ref="ssqml:CharacterSetSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaCharacterSetSpecification" type="ssqml:SchemaCharacterSetSpecificationType"/>
<xsd:element name="SchemaCharacterSetSpecification2" type="ssqml:SchemaCharacterSetSpecificationType"/>
<xsd:element name="SchemaCharacterSetSpecification3" type="ssqml:SchemaCharacterSetSpecificationType"/>

<xsd:complexType name="SchemaDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateSchemaStaticString"/>
			<xsd:element ref="ssqml:SchemaNameClause"/>
			<xsd:element ref="ssqml:SchemaCharacterSetOrPath" minOccurs="0"/>
			<xsd:element ref="ssqml:SchemaElement" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaDefinition" type="ssqml:SchemaDefinitionType"/>

<xsd:complexType name="SchemaElementType">
	<xsd:choice>
			<xsd:element ref="ssqml:TableDefinition"/>
			<xsd:element ref="ssqml:ViewDefinition"/>
			<xsd:element ref="ssqml:DomainDefinition"/>
			<xsd:element ref="ssqml:CharacterSetDefinition"/>
			<xsd:element ref="ssqml:CollationDefinition"/>
			<xsd:element ref="ssqml:TransliterationDefinition"/>
			<xsd:element ref="ssqml:AssertionDefinition"/>
			<xsd:element ref="ssqml:TriggerDefinition"/>
			<xsd:element ref="ssqml:UserDefinedTypeDefinition"/>
			<xsd:element ref="ssqml:UserDefinedCastDefinition"/>
			<xsd:element ref="ssqml:UserDefinedOrderingDefinition"/>
			<xsd:element ref="ssqml:TransformDefinition"/>
			<xsd:element ref="ssqml:SchemaRoutine"/>
			<xsd:element ref="ssqml:SequenceGeneratorDefinition"/>
			<xsd:element ref="ssqml:GrantStatement"/>
			<xsd:element ref="ssqml:RoleDefinition"/>
			<xsd:element ref="ssqml:SqlServerModuleDefinition"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SchemaElement" type="ssqml:SchemaElementType"/>

<xsd:complexType name="SchemaFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateStaticString"/>
			<xsd:element ref="ssqml:SqlInvokedFunction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaFunction" type="ssqml:SchemaFunctionType"/>

<xsd:complexType name="SchemaNameCharacteristicType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaStaticString"/>
			<xsd:element ref="ssqml:ValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaNameCharacteristic" type="ssqml:SchemaNameCharacteristicType"/>

<xsd:complexType name="SchemaNameClause_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:AuthorizationStaticString"/>
			<xsd:element ref="ssqml:SchemaAuthorizationIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaNameClause_ISO9075ChoiceGroup1" type="ssqml:SchemaNameClause_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SchemaNameClause_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaName2"/>
			<xsd:element ref="ssqml:AuthorizationStaticString"/>
			<xsd:element ref="ssqml:SchemaAuthorizationIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaNameClause_ISO9075ChoiceGroup2" type="ssqml:SchemaNameClause_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="SchemaNameClauseType">
	<xsd:choice>
			<xsd:element ref="ssqml:SchemaName"/>
			<xsd:element ref="ssqml:SchemaNameClause_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:SchemaNameClause_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SchemaNameClause" type="ssqml:SchemaNameClauseType"/>

<xsd:complexType name="SchemaNameListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaName"/>
			<xsd:element ref="ssqml:CommaSchemaNameItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaNameList" type="ssqml:SchemaNameListType"/>

<xsd:complexType name="SchemaNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CatalogName" minOccurs="0"/>
			<xsd:element ref="ssqml:Period" minOccurs="0"/>
			<xsd:element ref="ssqml:UnqualifiedSchemaName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaName" type="ssqml:SchemaNameType"/>
<xsd:element name="SchemaName2" type="ssqml:SchemaNameType"/>

<xsd:complexType name="SchemaProcedureType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateStaticString"/>
			<xsd:element ref="ssqml:SqlInvokedProcedure"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaProcedure" type="ssqml:SchemaProcedureType"/>

<xsd:complexType name="SchemaQualifiedNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaName" minOccurs="0"/>
			<xsd:element ref="ssqml:Period" minOccurs="0"/>
			<xsd:element ref="ssqml:QualifiedIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaQualifiedName" type="ssqml:SchemaQualifiedNameType"/>

<xsd:complexType name="SchemaQualifiedTypeNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaName" minOccurs="0"/>
			<xsd:element ref="ssqml:Period" minOccurs="0"/>
			<xsd:element ref="ssqml:QualifiedIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SchemaQualifiedTypeName" type="ssqml:SchemaQualifiedTypeNameType"/>

<xsd:complexType name="SchemaRoutineType">
	<xsd:choice>
			<xsd:element ref="ssqml:SchemaProcedure"/>
			<xsd:element ref="ssqml:SchemaFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SchemaRoutine" type="ssqml:SchemaRoutineType"/>

<xsd:complexType name="ScopeClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ScopeStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ScopeClause" type="ssqml:ScopeClauseType"/>

<xsd:complexType name="SearchClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SearchStaticString"/>
			<xsd:element ref="ssqml:RecursiveSearchOrder"/>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:SequenceColumn"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SearchClause" type="ssqml:SearchClauseType"/>
<xsd:element name="SearchClause2" type="ssqml:SearchClauseType"/>

<xsd:complexType name="SearchOrCycleClause_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SearchClause2"/>
			<xsd:element ref="ssqml:CycleClause2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SearchOrCycleClause_ISO9075ChoiceGroup1" type="ssqml:SearchOrCycleClause_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SearchOrCycleClauseType">
	<xsd:choice>
			<xsd:element ref="ssqml:SearchClause"/>
			<xsd:element ref="ssqml:CycleClause"/>
			<xsd:element ref="ssqml:SearchOrCycleClause_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SearchOrCycleClause" type="ssqml:SearchOrCycleClauseType"/>

<xsd:complexType name="SearchedCaseStatementWhenClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WhenStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:ThenStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SearchedCaseStatementWhenClause" type="ssqml:SearchedCaseStatementWhenClauseType"/>

<xsd:complexType name="SearchedCaseStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CaseStaticString"/>
			<xsd:element ref="ssqml:SearchedCaseStatementWhenClause" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:CaseStatementElseClause" minOccurs="0"/>
			<xsd:element ref="ssqml:EndCaseStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SearchedCaseStatement" type="ssqml:SearchedCaseStatementType"/>

<xsd:complexType name="SearchedCaseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CaseStaticString"/>
			<xsd:element ref="ssqml:SearchedWhenClause" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:ElseClause" minOccurs="0"/>
			<xsd:element ref="ssqml:EndStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SearchedCase" type="ssqml:SearchedCaseType"/>

<xsd:complexType name="SearchedWhenClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WhenStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:ThenStaticString"/>
			<xsd:element ref="ssqml:Result"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SearchedWhenClause" type="ssqml:SearchedWhenClauseType"/>

<xsd:complexType name="SecondsValueType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SecondsIntegerValue"/>
			<xsd:element ref="ssqml:Period" minOccurs="0"/>
			<xsd:element ref="ssqml:SecondsFraction" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SecondsValue" type="ssqml:SecondsValueType"/>

<xsd:complexType name="SelectList_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SelectSublist"/>
			<xsd:element ref="ssqml:CommaSelectSublistItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SelectList_ISO9075ChoiceGroup1" type="ssqml:SelectList_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SelectListType">
	<xsd:choice>
			<xsd:element ref="ssqml:Asterisk"/>
			<xsd:element ref="ssqml:SelectList_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SelectList" type="ssqml:SelectListType"/>

<xsd:complexType name="SelectStatementSingleRowType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SelectStaticString"/>
			<xsd:element ref="ssqml:SetQuantifier" minOccurs="0"/>
			<xsd:element ref="ssqml:SelectList"/>
			<xsd:element ref="ssqml:IntoStaticString"/>
			<xsd:element ref="ssqml:SelectTargetList"/>
			<xsd:element ref="ssqml:TableExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SelectStatementSingleRow" type="ssqml:SelectStatementSingleRowType"/>

<xsd:complexType name="SelectSublistType">
	<xsd:choice>
			<xsd:element ref="ssqml:DerivedColumn"/>
			<xsd:element ref="ssqml:QualifiedAsterisk"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SelectSublist" type="ssqml:SelectSublistType"/>

<xsd:complexType name="SelectTargetListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TargetSpecification"/>
			<xsd:element ref="ssqml:CommaTargetSpecificationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SelectTargetList" type="ssqml:SelectTargetListType"/>

<xsd:complexType name="SelfReferencingColumnSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RefIsStaticString"/>
			<xsd:element ref="ssqml:SelfReferencingColumnName"/>
			<xsd:element ref="ssqml:ReferenceGeneration"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SelfReferencingColumnSpecification" type="ssqml:SelfReferencingColumnSpecificationType"/>

<xsd:complexType name="SeparatorQuoteCharacterRepresentationQuoteItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Separator"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:CharacterRepresentation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:Quote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SeparatorQuoteCharacterRepresentationQuoteItemtype" type="ssqml:SeparatorQuoteCharacterRepresentationQuoteItemtypeType"/>

<xsd:complexType name="SeparatorQuoteHexitHexitItemtypeQuoteItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Separator"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:HexitHexitItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:Quote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SeparatorQuoteHexitHexitItemtypeQuoteItemtype" type="ssqml:SeparatorQuoteHexitHexitItemtypeQuoteItemtypeType"/>

<xsd:complexType name="SeparatorQuoteUnicodeRepresentationQuoteItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Separator"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:UnicodeRepresentation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:Quote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SeparatorQuoteUnicodeRepresentationQuoteItemtype" type="ssqml:SeparatorQuoteUnicodeRepresentationQuoteItemtypeType"/>

<xsd:complexType name="SeparatorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CommentWhiteSpaceItemtype" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Separator" type="ssqml:SeparatorType"/>

<xsd:complexType name="SequenceGeneratorDataTypeOptionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:DataType"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SequenceGeneratorDataTypeOption" type="ssqml:SequenceGeneratorDataTypeOptionType"/>

<xsd:complexType name="SequenceGeneratorDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateSequenceStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorName"/>
			<xsd:element ref="ssqml:SequenceGeneratorOptions" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SequenceGeneratorDefinition" type="ssqml:SequenceGeneratorDefinitionType"/>

<xsd:complexType name="SequenceGeneratorIncrementByOptionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IncrementByStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorIncrement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SequenceGeneratorIncrementByOption" type="ssqml:SequenceGeneratorIncrementByOptionType"/>

<xsd:complexType name="SequenceGeneratorMaxvalueOption_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:MaxvalueStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorMaxValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SequenceGeneratorMaxvalueOption_ISO9075ChoiceGroup1" type="ssqml:SequenceGeneratorMaxvalueOption_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SequenceGeneratorMaxvalueOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:SequenceGeneratorMaxvalueOption_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:NoMaxvalueStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SequenceGeneratorMaxvalueOption" type="ssqml:SequenceGeneratorMaxvalueOptionType"/>

<xsd:complexType name="SequenceGeneratorMinvalueOption_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:MinvalueStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorMinValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SequenceGeneratorMinvalueOption_ISO9075ChoiceGroup1" type="ssqml:SequenceGeneratorMinvalueOption_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SequenceGeneratorMinvalueOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:SequenceGeneratorMinvalueOption_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:NoMinvalueStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SequenceGeneratorMinvalueOption" type="ssqml:SequenceGeneratorMinvalueOptionType"/>

<xsd:complexType name="SequenceGeneratorOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:SequenceGeneratorDataTypeOption"/>
			<xsd:element ref="ssqml:CommonSequenceGeneratorOptions"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SequenceGeneratorOption" type="ssqml:SequenceGeneratorOptionType"/>

<xsd:complexType name="SequenceGeneratorOptionsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SequenceGeneratorOption" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SequenceGeneratorOptions" type="ssqml:SequenceGeneratorOptionsType"/>

<xsd:complexType name="SequenceGeneratorStartWithOptionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:StartWithStaticString"/>
			<xsd:element ref="ssqml:SequenceGeneratorStartValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SequenceGeneratorStartWithOption" type="ssqml:SequenceGeneratorStartWithOptionType"/>

<xsd:complexType name="SessionCharacteristicListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SessionCharacteristic"/>
			<xsd:element ref="ssqml:CommaSessionCharacteristicItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SessionCharacteristicList" type="ssqml:SessionCharacteristicListType"/>

<xsd:complexType name="SetCatalogStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:CatalogNameCharacteristic"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetCatalogStatement" type="ssqml:SetCatalogStatementType"/>

<xsd:complexType name="SetClauseListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetClause"/>
			<xsd:element ref="ssqml:CommaSetClauseItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetClauseList" type="ssqml:SetClauseListType"/>

<xsd:complexType name="SetClause_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetTarget"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:UpdateSource"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetClause_ISO9075ChoiceGroup1" type="ssqml:SetClause_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SetClauseType">
	<xsd:choice>
			<xsd:element ref="ssqml:MultipleColumnAssignment"/>
			<xsd:element ref="ssqml:SetClause_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SetClause" type="ssqml:SetClauseType"/>

<xsd:complexType name="SetColumnDefaultClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:DefaultClause"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetColumnDefaultClause" type="ssqml:SetColumnDefaultClauseType"/>

<xsd:complexType name="SetConnectionStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetConnectionStaticString"/>
			<xsd:element ref="ssqml:ConnectionObject"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetConnectionStatement" type="ssqml:SetConnectionStatementType"/>

<xsd:complexType name="SetConstraintsModeStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetConstrainstStaticString"/>
			<xsd:element ref="ssqml:ConstraintNameList"/>
		<xsd:choice>
			<xsd:element ref="ssqml:DeferredStaticString"/>
			<xsd:element ref="ssqml:ImmediateStaticString"/>
		</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetConstraintsModeStatement" type="ssqml:SetConstraintsModeStatementType"/>

<xsd:complexType name="SetDescriptorInformation_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetHeaderInformation"/>
			<xsd:element ref="ssqml:CommaSetHeaderInformationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetDescriptorInformation_ISO9075ChoiceGroup1" type="ssqml:SetDescriptorInformation_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SetDescriptorInformation_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueStaticString"/>
			<xsd:element ref="ssqml:ItemNumber"/>
			<xsd:element ref="ssqml:SetItemInformation"/>
			<xsd:element ref="ssqml:CommaSetItemInformationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetDescriptorInformation_ISO9075ChoiceGroup2" type="ssqml:SetDescriptorInformation_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="SetDescriptorInformationType">
	<xsd:choice>
			<xsd:element ref="ssqml:SetDescriptorInformation_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:SetDescriptorInformation_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SetDescriptorInformation" type="ssqml:SetDescriptorInformationType"/>

<xsd:complexType name="SetDescriptorStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:SqlStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DescriptorStaticString"/>
			<xsd:element ref="ssqml:DescriptorName"/>
			<xsd:element ref="ssqml:SetDescriptorInformation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetDescriptorStatement" type="ssqml:SetDescriptorStatementType"/>

<xsd:complexType name="SetDomainDefaultClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:DefaultClause"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetDomainDefaultClause" type="ssqml:SetDomainDefaultClauseType"/>

<xsd:complexType name="SetFunctionSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:AggregateFunction"/>
			<xsd:element ref="ssqml:GroupingOperation"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SetFunctionSpecification" type="ssqml:SetFunctionSpecificationType"/>

<xsd:complexType name="SetHeaderInformationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:HeaderItemName"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:SimpleValueSpecification1"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetHeaderInformation" type="ssqml:SetHeaderInformationType"/>

<xsd:complexType name="SetItemInformationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DescriptorItemName"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:SimpleValueSpecification2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetItemInformation" type="ssqml:SetItemInformationType"/>

<xsd:complexType name="SetLocalTimeZoneStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetTimeZoneStaticString"/>
			<xsd:element ref="ssqml:SetTimeZoneValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetLocalTimeZoneStatement" type="ssqml:SetLocalTimeZoneStatementType"/>

<xsd:complexType name="SetNamesStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:CharacterSetNameCharacteristic"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetNamesStatement" type="ssqml:SetNamesStatementType"/>

<xsd:complexType name="SetPathStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:SqlPathCharacteristic"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetPathStatement" type="ssqml:SetPathStatementType"/>

<xsd:complexType name="SetPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:IsStaticString"/>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ASetStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetPredicatePart2" type="ssqml:SetPredicatePart2Type"/>

<xsd:complexType name="SetPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:SetPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetPredicate" type="ssqml:SetPredicateType"/>

<xsd:complexType name="SetRoleStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetRoleStaticString"/>
			<xsd:element ref="ssqml:RoleSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetRoleStatement" type="ssqml:SetRoleStatementType"/>

<xsd:complexType name="SetSchemaStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:SchemaNameCharacteristic"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetSchemaStatement" type="ssqml:SetSchemaStatementType"/>

<xsd:complexType name="SetSessionCharacteristicsStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetSessionCharacteristicsAsStaticString"/>
			<xsd:element ref="ssqml:SessionCharacteristicList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetSessionCharacteristicsStatement" type="ssqml:SetSessionCharacteristicsStatementType"/>

<xsd:complexType name="SetSessionCollationStatement_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetCollationStaticString"/>
			<xsd:element ref="ssqml:CollationSpecification"/>
			<xsd:element ref="ssqml:ForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharacterSetSpecificationList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetSessionCollationStatement_ISO9075ChoiceGroup1" type="ssqml:SetSessionCollationStatement_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SetSessionCollationStatement_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetNoCollationStaticString"/>
			<xsd:element ref="ssqml:ForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharacterSetSpecificationList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetSessionCollationStatement_ISO9075ChoiceGroup2" type="ssqml:SetSessionCollationStatement_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="SetSessionCollationStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:SetSessionCollationStatement_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:SetSessionCollationStatement_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SetSessionCollationStatement" type="ssqml:SetSessionCollationStatementType"/>

<xsd:complexType name="SetSessionUserIdentifierStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetSessionAuthorizationStaticString"/>
			<xsd:element ref="ssqml:ValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetSessionUserIdentifierStatement" type="ssqml:SetSessionUserIdentifierStatementType"/>

<xsd:complexType name="SetSignalInformationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:SignalInformationItemList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetSignalInformation" type="ssqml:SetSignalInformationType"/>

<xsd:complexType name="SetTargetListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SetTarget"/>
			<xsd:element ref="ssqml:CommaSetTargetItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetTargetList" type="ssqml:SetTargetListType"/>

<xsd:complexType name="SetTargetType">
	<xsd:choice>
			<xsd:element ref="ssqml:UpdateTarget"/>
			<xsd:element ref="ssqml:MutatedSetClause"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SetTarget" type="ssqml:SetTargetType"/>

<xsd:complexType name="SetTimeZoneValueType">
	<xsd:choice>
			<xsd:element ref="ssqml:IntervalValueExpression"/>
			<xsd:element ref="ssqml:LocalStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SetTimeZoneValue" type="ssqml:SetTimeZoneValueType"/>

<xsd:complexType name="SetTransactionStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:LocalStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:TransactionCharacteristics"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetTransactionStatement" type="ssqml:SetTransactionStatementType"/>

<xsd:complexType name="SetTransformGroupStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:TransformGroupCharacteristic"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetTransformGroupStatement" type="ssqml:SetTransformGroupStatementType"/>

<xsd:complexType name="SetXmlOptionStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:XmlOptionStaticString"/>
			<xsd:element ref="ssqml:DocumentOrContent"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SetXmlOptionStatement" type="ssqml:SetXmlOptionStatementType"/>

<xsd:complexType name="SignType">
	<xsd:choice>
			<xsd:element ref="ssqml:PlusSign"/>
			<xsd:element ref="ssqml:MinusSign"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Sign" type="ssqml:SignType"/>

<xsd:complexType name="SignalInformationItemListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SignalInformationItem"/>
			<xsd:element ref="ssqml:CommaSignalInformationItemItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SignalInformationItemList" type="ssqml:SignalInformationItemListType"/>

<xsd:complexType name="SignalInformationItemType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConditionInformationItemName"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:SimpleValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SignalInformationItem" type="ssqml:SignalInformationItemType"/>

<xsd:complexType name="SignalStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SignalStaticString"/>
			<xsd:element ref="ssqml:SignalValue"/>
			<xsd:element ref="ssqml:SetSignalInformation" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SignalStatement" type="ssqml:SignalStatementType"/>

<xsd:complexType name="SignalValueType">
	<xsd:choice>
			<xsd:element ref="ssqml:ConditionName"/>
			<xsd:element ref="ssqml:SqlstateValue"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SignalValue" type="ssqml:SignalValueType"/>

<xsd:complexType name="SignedIntegerType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Sign" minOccurs="0"/>
			<xsd:element ref="ssqml:UnsignedInteger"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SignedInteger" type="ssqml:SignedIntegerType"/>

<xsd:complexType name="SignedNumericLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Sign" minOccurs="0"/>
			<xsd:element ref="ssqml:UnsignedNumericLiteral"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SignedNumericLiteral" type="ssqml:SignedNumericLiteralType"/>

<xsd:complexType name="SimilarPatternType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SimilarPattern" type="ssqml:SimilarPatternType"/>

<xsd:complexType name="SimilarPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SimilarToStaticString"/>
			<xsd:element ref="ssqml:SimilarPattern"/>
			<xsd:element ref="ssqml:EscapeStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:EscapeCharacter" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SimilarPredicatePart2" type="ssqml:SimilarPredicatePart2Type"/>

<xsd:complexType name="SimilarPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:SimilarPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SimilarPredicate" type="ssqml:SimilarPredicateType"/>

<xsd:complexType name="SimpleCaseStatementWhenClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WhenStaticString"/>
			<xsd:element ref="ssqml:WhenOperandList"/>
			<xsd:element ref="ssqml:ThenStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SimpleCaseStatementWhenClause" type="ssqml:SimpleCaseStatementWhenClauseType"/>

<xsd:complexType name="SimpleCaseStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CaseStaticString"/>
			<xsd:element ref="ssqml:CaseOperand"/>
			<xsd:element ref="ssqml:SimpleCaseStatementWhenClause" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:CaseStatementElseClause" minOccurs="0"/>
			<xsd:element ref="ssqml:EndCaseStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SimpleCaseStatement" type="ssqml:SimpleCaseStatementType"/>

<xsd:complexType name="SimpleCaseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CaseStaticString"/>
			<xsd:element ref="ssqml:CaseOperand"/>
			<xsd:element ref="ssqml:SimpleWhenClause" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:ElseClause" minOccurs="0"/>
			<xsd:element ref="ssqml:EndStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SimpleCase" type="ssqml:SimpleCaseType"/>

<xsd:complexType name="SimpleCommentIntroducerType">
	<xsd:sequence>
			<xsd:element ref="ssqml:MinusSignMinusSignMinusSign"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SimpleCommentIntroducer" type="ssqml:SimpleCommentIntroducerType"/>

<xsd:complexType name="SimpleCommentType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SimpleCommentIntroducer" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:CommentCharacter" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:Newline"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SimpleComment" type="ssqml:SimpleCommentType"/>

<xsd:complexType name="SimpleTableType">
	<xsd:choice>
			<xsd:element ref="ssqml:QuerySpecification"/>
			<xsd:element ref="ssqml:TableValueConstructor"/>
			<xsd:element ref="ssqml:ExplicitTable"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SimpleTable" type="ssqml:SimpleTableType"/>

<xsd:complexType name="SimpleTargetSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:HostParameterSpecification"/>
			<xsd:element ref="ssqml:SqlParameterReference"/>
			<xsd:element ref="ssqml:ColumnReference"/>
			<xsd:element ref="ssqml:SqlVariableReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SimpleTargetSpecification" type="ssqml:SimpleTargetSpecificationType"/>

<xsd:complexType name="SimpleValueSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:Literal"/>
			<xsd:element ref="ssqml:HostParameterName"/>
			<xsd:element ref="ssqml:SqlParameterReference"/>
			<xsd:element ref="ssqml:SqlVariableReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SimpleValueSpecification" type="ssqml:SimpleValueSpecificationType"/>

<xsd:complexType name="SimpleWhenClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WhenStaticString"/>
			<xsd:element ref="ssqml:WhenOperand"/>
			<xsd:element ref="ssqml:ThenStaticString"/>
			<xsd:element ref="ssqml:Result"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SimpleWhenClause" type="ssqml:SimpleWhenClauseType"/>

<xsd:complexType name="SingleDatetimeField_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NonSecondPrimaryDatetimeField"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:IntervalLeadingFieldPrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SingleDatetimeField_ISO9075ChoiceGroup1" type="ssqml:SingleDatetimeField_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SingleDatetimeField_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SecondStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:IntervalLeadingFieldPrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:IntervalFractionalSecondsPrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SingleDatetimeField_ISO9075ChoiceGroup2" type="ssqml:SingleDatetimeField_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="SingleDatetimeFieldType">
	<xsd:choice>
			<xsd:element ref="ssqml:SingleDatetimeField_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:SingleDatetimeField_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SingleDatetimeField" type="ssqml:SingleDatetimeFieldType"/>

<xsd:complexType name="SingletonVariableAssignmentType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:AssignmentTarget"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:AssignmentSource"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SingletonVariableAssignment" type="ssqml:SingletonVariableAssignmentType"/>

<xsd:complexType name="SortSpecificationListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SortSpecification"/>
			<xsd:element ref="ssqml:CommaSortSpecificationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SortSpecificationList" type="ssqml:SortSpecificationListType"/>

<xsd:complexType name="SortSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SortKey"/>
			<xsd:element ref="ssqml:OrderingSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:NullOrdering" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SortSpecification" type="ssqml:SortSpecificationType"/>

<xsd:complexType name="SpecificMethodNameType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaName" minOccurs="0"/>
			<xsd:element ref="ssqml:Period" minOccurs="0"/>
			<xsd:element ref="ssqml:QualifiedIdentifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SpecificMethodName" type="ssqml:SpecificMethodNameType"/>

<xsd:complexType name="SpecificMethodSpecificationDesignatorType">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:InstanceStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:StaticStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ConstructorStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:MethodStaticString"/>
			<xsd:element ref="ssqml:MethodName"/>
			<xsd:element ref="ssqml:DataTypeList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SpecificMethodSpecificationDesignator" type="ssqml:SpecificMethodSpecificationDesignatorType"/>

<xsd:complexType name="SpecificRoutineDesignator_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:SpecificStaticString"/>
			<xsd:element ref="ssqml:RoutineType"/>
			<xsd:element ref="ssqml:SpecificName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SpecificRoutineDesignator_ISO9075ChoiceGroup1" type="ssqml:SpecificRoutineDesignator_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="SpecificRoutineDesignator_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:RoutineType"/>
			<xsd:element ref="ssqml:MemberName"/>
			<xsd:element ref="ssqml:ForStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SpecificRoutineDesignator_ISO9075ChoiceGroup2" type="ssqml:SpecificRoutineDesignator_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="SpecificRoutineDesignatorType">
	<xsd:choice>
			<xsd:element ref="ssqml:SpecificRoutineDesignator_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:SpecificRoutineDesignator_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SpecificRoutineDesignator" type="ssqml:SpecificRoutineDesignatorType"/>

<xsd:complexType name="SpecificTypeMethodType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UserDefinedTypeValueExpression"/>
			<xsd:element ref="ssqml:Period"/>
			<xsd:element ref="ssqml:SpecifictypeStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SpecificTypeMethod" type="ssqml:SpecificTypeMethodType"/>

<xsd:complexType name="SqlArgumentListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SqlArgument" minOccurs="0"/>
			<xsd:element ref="ssqml:CommaSqlArgumentItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlArgumentList" type="ssqml:SqlArgumentListType"/>

<xsd:complexType name="SqlArgumentType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:GeneralizedExpression"/>
			<xsd:element ref="ssqml:TargetSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlArgument" type="ssqml:SqlArgumentType"/>

<xsd:complexType name="SqlConnectionStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:ConnectStatement"/>
			<xsd:element ref="ssqml:SetConnectionStatement"/>
			<xsd:element ref="ssqml:DisconnectStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlConnectionStatement" type="ssqml:SqlConnectionStatementType"/>

<xsd:complexType name="SqlControlStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:CallStatement"/>
			<xsd:element ref="ssqml:ReturnStatement"/>
			<xsd:element ref="ssqml:AssignmentStatement"/>
			<xsd:element ref="ssqml:CompoundStatement"/>
			<xsd:element ref="ssqml:CaseStatement"/>
			<xsd:element ref="ssqml:IfStatement"/>
			<xsd:element ref="ssqml:IterateStatement"/>
			<xsd:element ref="ssqml:LeaveStatement"/>
			<xsd:element ref="ssqml:LoopStatement"/>
			<xsd:element ref="ssqml:WhileStatement"/>
			<xsd:element ref="ssqml:RepeatStatement"/>
			<xsd:element ref="ssqml:ForStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlControlStatement" type="ssqml:SqlControlStatementType"/>

<xsd:complexType name="SqlDataChangeStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:DeleteStatementPositioned"/>
			<xsd:element ref="ssqml:DeleteStatementSearched"/>
			<xsd:element ref="ssqml:InsertStatement"/>
			<xsd:element ref="ssqml:UpdateStatementPositioned"/>
			<xsd:element ref="ssqml:UpdateStatementSearched"/>
			<xsd:element ref="ssqml:MergeStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlDataChangeStatement" type="ssqml:SqlDataChangeStatementType"/>

<xsd:complexType name="SqlDataStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:OpenStatement"/>
			<xsd:element ref="ssqml:FetchStatement"/>
			<xsd:element ref="ssqml:CloseStatement"/>
			<xsd:element ref="ssqml:SelectStatementSingleRow"/>
			<xsd:element ref="ssqml:FreeLocatorStatement"/>
			<xsd:element ref="ssqml:HoldLocatorStatement"/>
			<xsd:element ref="ssqml:SqlDataChangeStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlDataStatement" type="ssqml:SqlDataStatementType"/>

<xsd:complexType name="SqlDiagnosticsInformationType">
	<xsd:choice>
			<xsd:element ref="ssqml:StatementInformation"/>
			<xsd:element ref="ssqml:ConditionInformation"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlDiagnosticsInformation" type="ssqml:SqlDiagnosticsInformationType"/>

<xsd:complexType name="SqlDynamicDataStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:AllocateCursorStatement"/>
			<xsd:element ref="ssqml:DynamicOpenStatement"/>
			<xsd:element ref="ssqml:DynamicFetchStatement"/>
			<xsd:element ref="ssqml:DynamicCloseStatement"/>
			<xsd:element ref="ssqml:DynamicDeleteStatementPositioned"/>
			<xsd:element ref="ssqml:DynamicUpdateStatementPositioned"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlDynamicDataStatement" type="ssqml:SqlDynamicDataStatementType"/>

<xsd:complexType name="SqlDynamicStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:SystemDescriptorStatement"/>
			<xsd:element ref="ssqml:PrepareStatement"/>
			<xsd:element ref="ssqml:DeallocatePreparedStatement"/>
			<xsd:element ref="ssqml:DescribeStatement"/>
			<xsd:element ref="ssqml:ExecuteStatement"/>
			<xsd:element ref="ssqml:ExecuteImmediateStatement"/>
			<xsd:element ref="ssqml:SqlDynamicDataStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlDynamicStatement" type="ssqml:SqlDynamicStatementType"/>

<xsd:complexType name="SqlExecutableStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:SqlSchemaStatement"/>
			<xsd:element ref="ssqml:SqlDataStatement"/>
			<xsd:element ref="ssqml:SqlControlStatement"/>
			<xsd:element ref="ssqml:SqlTransactionStatement"/>
			<xsd:element ref="ssqml:SqlConnectionStatement"/>
			<xsd:element ref="ssqml:SqlSessionStatement"/>
			<xsd:element ref="ssqml:SqlDiagnosticsStatement"/>
			<xsd:element ref="ssqml:SqlDynamicStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlExecutableStatement" type="ssqml:SqlExecutableStatementType"/>

<xsd:complexType name="SqlInvokedFunctionType">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:FunctionSpecification"/>
			<xsd:element ref="ssqml:MethodSpecificationDesignator"/>
		</xsd:choice>
			<xsd:element ref="ssqml:RoutineBody"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlInvokedFunction" type="ssqml:SqlInvokedFunctionType"/>

<xsd:complexType name="SqlInvokedProcedureType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ProcedureStaticString"/>
			<xsd:element ref="ssqml:SchemaQualifiedRoutineName"/>
			<xsd:element ref="ssqml:SqlParameterDeclarationList"/>
			<xsd:element ref="ssqml:RoutineCharacteristics"/>
			<xsd:element ref="ssqml:RoutineBody"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlInvokedProcedure" type="ssqml:SqlInvokedProcedureType"/>

<xsd:complexType name="SqlLanguageIdentifierPartType">
	<xsd:choice>
			<xsd:element ref="ssqml:SimpleLatinLetter"/>
			<xsd:element ref="ssqml:Digit"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlLanguageIdentifierPart" type="ssqml:SqlLanguageIdentifierPartType"/>

<xsd:complexType name="SqlLanguageIdentifierType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SqlLanguageIdentifierStart"/>
			<xsd:element ref="ssqml:UnderscoreSqlLanguageIdentifierPartItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlLanguageIdentifier" type="ssqml:SqlLanguageIdentifierType"/>

<xsd:complexType name="SqlParameterDeclarationListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SqlParameterDeclaration" minOccurs="0"/>
			<xsd:element ref="ssqml:CommaSqlParameterDeclarationItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlParameterDeclarationList" type="ssqml:SqlParameterDeclarationListType"/>

<xsd:complexType name="SqlParameterDeclarationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ParameterMode" minOccurs="0"/>
			<xsd:element ref="ssqml:SqlParameterName" minOccurs="0"/>
			<xsd:element ref="ssqml:ParameterType"/>
			<xsd:element ref="ssqml:ResultStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlPassingMechanism" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlParameterDeclaration" type="ssqml:SqlParameterDeclarationType"/>

<xsd:complexType name="SqlPathCharacteristicType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PathStaticString"/>
			<xsd:element ref="ssqml:ValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlPathCharacteristic" type="ssqml:SqlPathCharacteristicType"/>

<xsd:complexType name="SqlProcedureStatementSemicolonItemtypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SqlProcedureStatement"/>
			<xsd:element ref="ssqml:Semicolon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlProcedureStatementSemicolonItemtype" type="ssqml:SqlProcedureStatementSemicolonItemtypeType"/>

<xsd:complexType name="SqlRoutineSpecType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RightsClause" minOccurs="0"/>
			<xsd:element ref="ssqml:SqlRoutineBody"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlRoutineSpec" type="ssqml:SqlRoutineSpecType"/>

<xsd:complexType name="SqlSchemaDefinitionStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:SchemaDefinition"/>
			<xsd:element ref="ssqml:TableDefinition"/>
			<xsd:element ref="ssqml:ViewDefinition"/>
			<xsd:element ref="ssqml:SqlInvokedRoutine"/>
			<xsd:element ref="ssqml:GrantStatement"/>
			<xsd:element ref="ssqml:RoleDefinition"/>
			<xsd:element ref="ssqml:DomainDefinition"/>
			<xsd:element ref="ssqml:CharacterSetDefinition"/>
			<xsd:element ref="ssqml:CollationDefinition"/>
			<xsd:element ref="ssqml:TransliterationDefinition"/>
			<xsd:element ref="ssqml:AssertionDefinition"/>
			<xsd:element ref="ssqml:TriggerDefinition"/>
			<xsd:element ref="ssqml:UserDefinedTypeDefinition"/>
			<xsd:element ref="ssqml:UserDefinedCastDefinition"/>
			<xsd:element ref="ssqml:UserDefinedOrderingDefinition"/>
			<xsd:element ref="ssqml:TransformDefinition"/>
			<xsd:element ref="ssqml:SequenceGeneratorDefinition"/>
			<xsd:element ref="ssqml:SqlServerModuleDefinition"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlSchemaDefinitionStatement" type="ssqml:SqlSchemaDefinitionStatementType"/>

<xsd:complexType name="SqlSchemaManipulationStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:DropSchemaStatement"/>
			<xsd:element ref="ssqml:AlterTableStatement"/>
			<xsd:element ref="ssqml:DropTableStatement"/>
			<xsd:element ref="ssqml:DropViewStatement"/>
			<xsd:element ref="ssqml:AlterRoutineStatement"/>
			<xsd:element ref="ssqml:DropRoutineStatement"/>
			<xsd:element ref="ssqml:DropUserDefinedCastStatement"/>
			<xsd:element ref="ssqml:RevokeStatement"/>
			<xsd:element ref="ssqml:DropRoleStatement"/>
			<xsd:element ref="ssqml:AlterDomainStatement"/>
			<xsd:element ref="ssqml:DropDomainStatement"/>
			<xsd:element ref="ssqml:DropCharacterSetStatement"/>
			<xsd:element ref="ssqml:DropCollationStatement"/>
			<xsd:element ref="ssqml:DropTransliterationStatement"/>
			<xsd:element ref="ssqml:DropAssertionStatement"/>
			<xsd:element ref="ssqml:DropTriggerStatement"/>
			<xsd:element ref="ssqml:AlterTypeStatement"/>
			<xsd:element ref="ssqml:DropDataTypeStatement"/>
			<xsd:element ref="ssqml:DropUserDefinedOrderingStatement"/>
			<xsd:element ref="ssqml:AlterTransformStatement"/>
			<xsd:element ref="ssqml:DropTransformStatement"/>
			<xsd:element ref="ssqml:AlterSequenceGeneratorStatement"/>
			<xsd:element ref="ssqml:DropSequenceGeneratorStatement"/>
			<xsd:element ref="ssqml:DropModuleStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlSchemaManipulationStatement" type="ssqml:SqlSchemaManipulationStatementType"/>

<xsd:complexType name="SqlSchemaStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:SqlSchemaDefinitionStatement"/>
			<xsd:element ref="ssqml:SqlSchemaManipulationStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlSchemaStatement" type="ssqml:SqlSchemaStatementType"/>

<xsd:complexType name="SqlServerModuleCharacterSetSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NamesAreStaticString"/>
			<xsd:element ref="ssqml:CharacterSetSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlServerModuleCharacterSetSpecification" type="ssqml:SqlServerModuleCharacterSetSpecificationType"/>

<xsd:complexType name="SqlServerModuleContentsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SqlInvokedRoutine"/>
			<xsd:element ref="ssqml:Semicolon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlServerModuleContents" type="ssqml:SqlServerModuleContentsType"/>

<xsd:complexType name="SqlServerModuleDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateModuleStaticString"/>
			<xsd:element ref="ssqml:SqlServerModuleName"/>
			<xsd:element ref="ssqml:SqlServerModuleCharacterSetSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:SqlServerModuleSchemaClause" minOccurs="0"/>
			<xsd:element ref="ssqml:SqlServerModulePathSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:TemporaryTableDeclaration" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:SqlServerModuleContents" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:EndModuleStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlServerModuleDefinition" type="ssqml:SqlServerModuleDefinitionType"/>

<xsd:complexType name="SqlServerModuleSchemaClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaStaticString"/>
			<xsd:element ref="ssqml:DefaultSchemaName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlServerModuleSchemaClause" type="ssqml:SqlServerModuleSchemaClauseType"/>

<xsd:complexType name="SqlSessionStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:SetSessionUserIdentifierStatement"/>
			<xsd:element ref="ssqml:SetRoleStatement"/>
			<xsd:element ref="ssqml:SetLocalTimeZoneStatement"/>
			<xsd:element ref="ssqml:SetSessionCharacteristicsStatement"/>
			<xsd:element ref="ssqml:SetCatalogStatement"/>
			<xsd:element ref="ssqml:SetSchemaStatement"/>
			<xsd:element ref="ssqml:SetNamesStatement"/>
			<xsd:element ref="ssqml:SetPathStatement"/>
			<xsd:element ref="ssqml:SetTransformGroupStatement"/>
			<xsd:element ref="ssqml:SetSessionCollationStatement"/>
			<xsd:element ref="ssqml:SetXmlOptionStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlSessionStatement" type="ssqml:SqlSessionStatementType"/>

<xsd:complexType name="SqlStatementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TerminatedSqlStatement" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlStatementList" type="ssqml:SqlStatementListType"/>

<xsd:complexType name="SqlStatementNameType">
	<xsd:choice>
			<xsd:element ref="ssqml:StatementName"/>
			<xsd:element ref="ssqml:ExtendedStatementName"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlStatementName" type="ssqml:SqlStatementNameType"/>

<xsd:complexType name="SqlTransactionStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:StartTransactionStatement"/>
			<xsd:element ref="ssqml:SetTransactionStatement"/>
			<xsd:element ref="ssqml:SetConstraintsModeStatement"/>
			<xsd:element ref="ssqml:SavepointStatement"/>
			<xsd:element ref="ssqml:ReleaseSavepointStatement"/>
			<xsd:element ref="ssqml:CommitStatement"/>
			<xsd:element ref="ssqml:RollbackStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SqlTransactionStatement" type="ssqml:SqlTransactionStatementType"/>

<xsd:complexType name="SqlVariableDeclarationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeclareStaticString"/>
			<xsd:element ref="ssqml:SqlVariableNameList"/>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:DefaultClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlVariableDeclaration" type="ssqml:SqlVariableDeclarationType"/>

<xsd:complexType name="SqlVariableNameListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SqlVariableName"/>
			<xsd:element ref="ssqml:CommaSqlVariableNameItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlVariableNameList" type="ssqml:SqlVariableNameListType"/>

<xsd:complexType name="SqlstateValueType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SqlstateStaticString"/>
			<xsd:element ref="ssqml:ValueStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharacterStringLiteral"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SqlstateValue" type="ssqml:SqlstateValueType"/>

<xsd:complexType name="SquareRootType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SqrtStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NumericValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SquareRoot" type="ssqml:SquareRootType"/>

<xsd:complexType name="StartFieldType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NonSecondPrimaryDatetimeField"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:IntervalLeadingFieldPrecision" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StartField" type="ssqml:StartFieldType"/>

<xsd:complexType name="StartTransactionStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:StartTransactionStaticString"/>
			<xsd:element ref="ssqml:TransactionMode" minOccurs="0"/>
			<xsd:element ref="ssqml:CommaTransactionModeItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StartTransactionStatement" type="ssqml:StartTransactionStatementType"/>

<xsd:complexType name="StateCategoryType">
	<xsd:sequence>
			<xsd:element ref="ssqml:StateStaticString"/>
			<xsd:element ref="ssqml:SpecificName" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StateCategory" type="ssqml:StateCategoryType"/>

<xsd:complexType name="StatementCursorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CursorSensitivity" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorScrollability" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorStaticString"/>
			<xsd:element ref="ssqml:CursorHoldability" minOccurs="0"/>
			<xsd:element ref="ssqml:CursorReturnability" minOccurs="0"/>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:ExtendedStatementName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StatementCursor" type="ssqml:StatementCursorType"/>

<xsd:complexType name="StatementInformationItemType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SimpleTargetSpecification"/>
			<xsd:element ref="ssqml:EqualsOperator"/>
			<xsd:element ref="ssqml:StatementInformationItemName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StatementInformationItem" type="ssqml:StatementInformationItemType"/>

<xsd:complexType name="StatementInformationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:StatementInformationItem"/>
			<xsd:element ref="ssqml:CommaStatementInformationItemItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StatementInformation" type="ssqml:StatementInformationType"/>

<xsd:complexType name="StaticMethodInvocationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:DoubleColon"/>
			<xsd:element ref="ssqml:MethodName"/>
			<xsd:element ref="ssqml:SqlArgumentList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StaticMethodInvocation" type="ssqml:StaticMethodInvocationType"/>

<xsd:complexType name="StaticMethodSelectionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RoutineInvocation"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StaticMethodSelection" type="ssqml:StaticMethodSelectionType"/>

<xsd:complexType name="StringPositionExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PositionStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:StringValueExpression"/>
			<xsd:element ref="ssqml:InStaticString"/>
			<xsd:element ref="ssqml:StringValueExpression"/>
			<xsd:element ref="ssqml:UsingStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CharLengthUnits" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StringPositionExpression" type="ssqml:StringPositionExpressionType"/>

<xsd:complexType name="StringTypeOptionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:CharacterStringType"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="StringTypeOption" type="ssqml:StringTypeOptionType"/>

<xsd:complexType name="StringValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:BlobValueExpression"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="StringValueExpression" type="ssqml:StringValueExpressionType"/>

<xsd:complexType name="StringValueFunctionType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterValueFunction"/>
			<xsd:element ref="ssqml:BlobValueFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="StringValueFunction" type="ssqml:StringValueFunctionType"/>

<xsd:complexType name="SubmultisetPredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SubmultisetStaticString"/>
			<xsd:element ref="ssqml:OfStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:MultisetValueExpression"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SubmultisetPredicatePart2" type="ssqml:SubmultisetPredicatePart2Type"/>

<xsd:complexType name="SubmultisetPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:SubmultisetPredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SubmultisetPredicate" type="ssqml:SubmultisetPredicateType"/>

<xsd:complexType name="SubqueryType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:QueryExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Subquery" type="ssqml:SubqueryType"/>

<xsd:complexType name="SubtableClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnderStaticString"/>
			<xsd:element ref="ssqml:SupertableClause"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SubtableClause" type="ssqml:SubtableClauseType"/>

<xsd:complexType name="SubtypeClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnderStaticString"/>
			<xsd:element ref="ssqml:SupertypeName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SubtypeClause" type="ssqml:SubtypeClauseType"/>

<xsd:complexType name="SubtypeTreatmentType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TreatStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SubtypeOperand"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:TargetSubtype"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SubtypeTreatment" type="ssqml:SubtypeTreatmentType"/>

<xsd:complexType name="SubviewClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnderStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="SubviewClause" type="ssqml:SubviewClauseType"/>

<xsd:complexType name="SystemDescriptorStatementType">
	<xsd:choice>
			<xsd:element ref="ssqml:AllocateDescriptorStatement"/>
			<xsd:element ref="ssqml:DeallocateDescriptorStatement"/>
			<xsd:element ref="ssqml:SetDescriptorStatement"/>
			<xsd:element ref="ssqml:GetDescriptorStatement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="SystemDescriptorStatement" type="ssqml:SystemDescriptorStatementType"/>

<xsd:complexType name="TableConstraintDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConstraintNameDefinition" minOccurs="0"/>
			<xsd:element ref="ssqml:TableConstraint"/>
			<xsd:element ref="ssqml:ConstraintCharacteristics" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableConstraintDefinition" type="ssqml:TableConstraintDefinitionType"/>

<xsd:complexType name="TableConstraintType">
	<xsd:choice>
			<xsd:element ref="ssqml:UniqueConstraintDefinition"/>
			<xsd:element ref="ssqml:ReferentialConstraintDefinition"/>
			<xsd:element ref="ssqml:CheckConstraintDefinition"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TableConstraint" type="ssqml:TableConstraintType"/>

<xsd:complexType name="TableContentsSource_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:OfStaticString"/>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:SubtableClause" minOccurs="0"/>
			<xsd:element ref="ssqml:TableElementList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableContentsSource_ISO9075ChoiceGroup1" type="ssqml:TableContentsSource_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="TableContentsSourceType">
	<xsd:choice>
			<xsd:element ref="ssqml:TableElementList"/>
			<xsd:element ref="ssqml:TableContentsSource_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:AsSubqueryClause"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TableContentsSource" type="ssqml:TableContentsSourceType"/>

<xsd:complexType name="TableDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateStaticString"/>
			<xsd:element ref="ssqml:TableScope" minOccurs="0"/>
			<xsd:element ref="ssqml:TableStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:TableContentsSource"/>
			<xsd:element ref="ssqml:OnCommitStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:TableCommitAction" minOccurs="0"/>
			<xsd:element ref="ssqml:RowsStaticString" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableDefinition" type="ssqml:TableDefinitionType"/>

<xsd:complexType name="TableElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TableElement"/>
			<xsd:element ref="ssqml:CommaTableElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableElementList" type="ssqml:TableElementListType"/>

<xsd:complexType name="TableElementType">
	<xsd:choice>
			<xsd:element ref="ssqml:ColumnDefinition"/>
			<xsd:element ref="ssqml:TableConstraintDefinition"/>
			<xsd:element ref="ssqml:LikeClause"/>
			<xsd:element ref="ssqml:SelfReferencingColumnSpecification"/>
			<xsd:element ref="ssqml:ColumnOptions"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TableElement" type="ssqml:TableElementType"/>

<xsd:complexType name="TableExpressionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:FromClause"/>
			<xsd:element ref="ssqml:WhereClause" minOccurs="0"/>
			<xsd:element ref="ssqml:GroupByClause" minOccurs="0"/>
			<xsd:element ref="ssqml:HavingClause" minOccurs="0"/>
			<xsd:element ref="ssqml:WindowClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableExpression" type="ssqml:TableExpressionType"/>

<xsd:complexType name="TableFunctionColumnListElementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnName"/>
			<xsd:element ref="ssqml:DataType"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableFunctionColumnListElement" type="ssqml:TableFunctionColumnListElementType"/>

<xsd:complexType name="TableFunctionColumnListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TableFunctionColumnListElement"/>
			<xsd:element ref="ssqml:CommaTableFunctionColumnListElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableFunctionColumnList" type="ssqml:TableFunctionColumnListType"/>

<xsd:complexType name="TableFunctionDerivedTableType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CollectionValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableFunctionDerivedTable" type="ssqml:TableFunctionDerivedTableType"/>

<xsd:complexType name="TableOrQueryNameType">
	<xsd:choice>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:QueryName"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TableOrQueryName" type="ssqml:TableOrQueryNameType"/>

<xsd:complexType name="TablePrimaryOrJoinedTableType">
	<xsd:choice>
			<xsd:element ref="ssqml:TablePrimary"/>
			<xsd:element ref="ssqml:JoinedTable"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TablePrimaryOrJoinedTable" type="ssqml:TablePrimaryOrJoinedTableType"/>

<xsd:complexType name="TablePrimary_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:TableOrQueryName"/>
			<xsd:element ref="ssqml:DerivedTable"/>
			<xsd:element ref="ssqml:LateralDerivedTable"/>
			<xsd:element ref="ssqml:CollectionDerivedTable"/>
			<xsd:element ref="ssqml:TableFunctionDerivedTable"/>
			<xsd:element ref="ssqml:OnlySpec"/>
			<xsd:element ref="ssqml:XmlIterate"/>
			<xsd:element ref="ssqml:XmlTable"/>
		</xsd:choice>
		<xsd:element ref="ssqml:TablePrimary_ISO9075ChoiceGroup11" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TablePrimary_ISO9075ChoiceGroup1" type="ssqml:TablePrimary_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="TablePrimary_ISO9075ChoiceGroup11Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:CorrelationName"/>
			<xsd:element ref="ssqml:TablePrimary_ISO9075ChoiceGroup111" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TablePrimary_ISO9075ChoiceGroup11" type="ssqml:TablePrimary_ISO9075ChoiceGroup11Type"/>

<xsd:complexType name="TablePrimary_ISO9075ChoiceGroup111Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:DerivedColumnList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TablePrimary_ISO9075ChoiceGroup111" type="ssqml:TablePrimary_ISO9075ChoiceGroup111Type"/>

<xsd:complexType name="TablePrimary_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:JoinedTable"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TablePrimary_ISO9075ChoiceGroup2" type="ssqml:TablePrimary_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="TablePrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:TablePrimary_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:TablePrimary_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TablePrimary" type="ssqml:TablePrimaryType"/>

<xsd:complexType name="TableReferenceListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableReference"/>
			<xsd:element ref="ssqml:CommaTableReferenceItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableReferenceList" type="ssqml:TableReferenceListType"/>

<xsd:complexType name="TableReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TablePrimaryOrJoinedTable"/>
			<xsd:element ref="ssqml:SampleClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableReference" type="ssqml:TableReferenceType"/>

<xsd:complexType name="TableRowValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:RowValueSpecialCase"/>
			<xsd:element ref="ssqml:RowValueConstructor"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TableRowValueExpression" type="ssqml:TableRowValueExpressionType"/>

<xsd:complexType name="TableScopeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GlobalOrLocal"/>
			<xsd:element ref="ssqml:TemporaryStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableScope" type="ssqml:TableScopeType"/>

<xsd:complexType name="TableValueConstructorByQueryType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:QueryExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableValueConstructorByQuery" type="ssqml:TableValueConstructorByQueryType"/>

<xsd:complexType name="TableValueConstructorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValuesStaticString"/>
			<xsd:element ref="ssqml:RowValueExpressionList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TableValueConstructor" type="ssqml:TableValueConstructorType"/>

<xsd:complexType name="TargetArrayElementSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TargetArrayReference"/>
			<xsd:element ref="ssqml:LeftBracketOrTrigraph"/>
			<xsd:element ref="ssqml:SimpleValueSpecification"/>
			<xsd:element ref="ssqml:RightBracketOrTrigraph"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TargetArrayElementSpecification" type="ssqml:TargetArrayElementSpecificationType"/>

<xsd:complexType name="TargetArrayReferenceType">
	<xsd:choice>
			<xsd:element ref="ssqml:SqlParameterReference"/>
			<xsd:element ref="ssqml:ColumnReference"/>
			<xsd:element ref="ssqml:SqlVariableReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TargetArrayReference" type="ssqml:TargetArrayReferenceType"/>

<xsd:complexType name="TargetSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:HostParameterSpecification"/>
			<xsd:element ref="ssqml:SqlParameterReference"/>
			<xsd:element ref="ssqml:ColumnReference"/>
			<xsd:element ref="ssqml:TargetArrayElementSpecification"/>
			<xsd:element ref="ssqml:DynamicParameterSpecification"/>
			<xsd:element ref="ssqml:SqlVariableReference"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TargetSpecification" type="ssqml:TargetSpecificationType"/>

<xsd:complexType name="TargetSubtypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:ReferenceType"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TargetSubtype" type="ssqml:TargetSubtypeType"/>

<xsd:complexType name="TargetTable_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:OnlyStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TargetTable_ISO9075ChoiceGroup1" type="ssqml:TargetTable_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="TargetTableType">
	<xsd:choice>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:TargetTable_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TargetTable" type="ssqml:TargetTableType"/>

<xsd:complexType name="TemporaryTableDeclarationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeclareLocalTemporaryTableStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:TableElementList"/>
			<xsd:element ref="ssqml:OnCommitStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:TableCommitAction" minOccurs="0"/>
			<xsd:element ref="ssqml:RowsStaticString" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TemporaryTableDeclaration" type="ssqml:TemporaryTableDeclarationType"/>

<xsd:complexType name="Term_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:Term"/>
			<xsd:choice>
				<xsd:element ref="ssqml:Term_ISO9075ChoiceGroup2"/>
				<xsd:element ref="ssqml:Term_ISO9075ChoiceGroup3"/>
			</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Term_ISO9075ChoiceGroup1" type="ssqml:Term_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="Term_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:Solidus"/>
			<xsd:element ref="ssqml:Factor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Term_ISO9075ChoiceGroup2" type="ssqml:Term_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="Term_ISO9075ChoiceGroup3Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:Asterisk"/>
			<xsd:element ref="ssqml:Factor"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Term_ISO9075ChoiceGroup3" type="ssqml:Term_ISO9075ChoiceGroup3Type"/>

<xsd:complexType name="TermType">
	<xsd:choice>
			<xsd:element ref="ssqml:Factor"/>
			<xsd:element ref="ssqml:Term_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Term" type="ssqml:TermType"/>

<xsd:complexType name="TerminatedLocalCursorDeclarationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:DeclareCursor"/>
			<xsd:element ref="ssqml:Semicolon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TerminatedLocalCursorDeclaration" type="ssqml:TerminatedLocalCursorDeclarationType"/>

<xsd:complexType name="TerminatedLocalDeclarationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LocalDeclaration"/>
			<xsd:element ref="ssqml:Semicolon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TerminatedLocalDeclaration" type="ssqml:TerminatedLocalDeclarationType"/>

<xsd:complexType name="TerminatedLocalHandlerDeclarationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:HandlerDeclaration"/>
			<xsd:element ref="ssqml:Semicolon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TerminatedLocalHandlerDeclaration" type="ssqml:TerminatedLocalHandlerDeclarationType"/>

<xsd:complexType name="TerminatedSqlStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SqlProcedureStatement"/>
			<xsd:element ref="ssqml:Semicolon"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TerminatedSqlStatement" type="ssqml:TerminatedSqlStatementType"/>

<xsd:complexType name="TimeInterval_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:HoursValue"/>
			<xsd:element ref="ssqml:Colon" minOccurs="0"/>
			<xsd:element ref="ssqml:MinutesValue" minOccurs="0"/>
			<xsd:element ref="ssqml:Colon2" minOccurs="0"/>
			<xsd:element ref="ssqml:SecondsValue" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimeInterval_ISO9075ChoiceGroup1" type="ssqml:TimeInterval_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="TimeInterval_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:MinutesValue"/>
			<xsd:element ref="ssqml:Colon" minOccurs="0"/>
			<xsd:element ref="ssqml:SecondsValue" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimeInterval_ISO9075ChoiceGroup2" type="ssqml:TimeInterval_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="TimeIntervalType">
	<xsd:choice>
			<xsd:element ref="ssqml:TimeInterval_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:TimeInterval_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:SecondsValue"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TimeInterval" type="ssqml:TimeIntervalType"/>

<xsd:complexType name="TimeLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TimeStaticString"/>
			<xsd:element ref="ssqml:TimeString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimeLiteral" type="ssqml:TimeLiteralType"/>

<xsd:complexType name="TimeStringType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:UnquotedTimeString"/>
			<xsd:element ref="ssqml:Quote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimeString" type="ssqml:TimeStringType"/>

<xsd:complexType name="TimeValueType">
	<xsd:sequence>
			<xsd:element ref="ssqml:HoursValue"/>
			<xsd:element ref="ssqml:Colon"/>
			<xsd:element ref="ssqml:MinutesValue"/>
			<xsd:element ref="ssqml:Colon"/>
			<xsd:element ref="ssqml:SecondsValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimeValue" type="ssqml:TimeValueType"/>

<xsd:complexType name="TimeZoneIntervalType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Sign"/>
			<xsd:element ref="ssqml:HoursValue"/>
			<xsd:element ref="ssqml:Colon"/>
			<xsd:element ref="ssqml:MinutesValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimeZoneInterval" type="ssqml:TimeZoneIntervalType"/>

<xsd:complexType name="TimeZoneSpecifier_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:TimeZoneStaticString"/>
			<xsd:element ref="ssqml:IntervalPrimary"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimeZoneSpecifier_ISO9075ChoiceGroup1" type="ssqml:TimeZoneSpecifier_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="TimeZoneSpecifierType">
	<xsd:choice>
			<xsd:element ref="ssqml:LocalStaticString"/>
			<xsd:element ref="ssqml:TimeZoneSpecifier_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TimeZoneSpecifier" type="ssqml:TimeZoneSpecifierType"/>

<xsd:complexType name="TimeZoneType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AtStaticString"/>
			<xsd:element ref="ssqml:TimeZoneSpecifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimeZone" type="ssqml:TimeZoneType"/>

<xsd:complexType name="TimestampLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TimestampStaticString"/>
			<xsd:element ref="ssqml:TimestampString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimestampLiteral" type="ssqml:TimestampLiteralType"/>

<xsd:complexType name="TimestampStringType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:UnquotedTimestampString"/>
			<xsd:element ref="ssqml:Quote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TimestampString" type="ssqml:TimestampStringType"/>

<xsd:complexType name="ToSqlType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ToSqlWithStaticString"/>
			<xsd:element ref="ssqml:ToSqlFunction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ToSql" type="ssqml:ToSqlType"/>

<xsd:complexType name="TokenType">
	<xsd:choice>
			<xsd:element ref="ssqml:NondelimiterToken"/>
			<xsd:element ref="ssqml:DelimiterToken"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="Token" type="ssqml:TokenType"/>

<xsd:complexType name="TransactionCharacteristicsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TransactionStaticString"/>
			<xsd:element ref="ssqml:TransactionMode"/>
			<xsd:element ref="ssqml:CommaTransactionModeItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TransactionCharacteristics" type="ssqml:TransactionCharacteristicsType"/>

<xsd:complexType name="TransactionModeType">
	<xsd:choice>
			<xsd:element ref="ssqml:IsolationLevel"/>
			<xsd:element ref="ssqml:TransactionAccessMode"/>
			<xsd:element ref="ssqml:DiagnosticsSize"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TransactionMode" type="ssqml:TransactionModeType"/>

<xsd:complexType name="TranscodingType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ConvertStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:CharacterValueExpression"/>
			<xsd:element ref="ssqml:UsingStaticString"/>
			<xsd:element ref="ssqml:TranscodingName"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Transcoding" type="ssqml:TranscodingType"/>

<xsd:complexType name="TransformDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:TransformStaticString"/>
			<xsd:element ref="ssqml:TransformsStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:TransformGroup" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TransformDefinition" type="ssqml:TransformDefinitionType"/>

<xsd:complexType name="TransformElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TransformElement"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:TransformElement" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TransformElementList" type="ssqml:TransformElementListType"/>

<xsd:complexType name="TransformElementType">
	<xsd:choice>
			<xsd:element ref="ssqml:ToSql"/>
			<xsd:element ref="ssqml:FromSql"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TransformElement" type="ssqml:TransformElementType"/>

<xsd:complexType name="TransformGroupCharacteristic_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:DefaultTransformGroupStaticString"/>
			<xsd:element ref="ssqml:ValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TransformGroupCharacteristic_ISO9075ChoiceGroup1" type="ssqml:TransformGroupCharacteristic_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="TransformGroupCharacteristic_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:TransformGroupForTypeStaticString"/>
			<xsd:element ref="ssqml:PathResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:ValueSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TransformGroupCharacteristic_ISO9075ChoiceGroup2" type="ssqml:TransformGroupCharacteristic_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="TransformGroupCharacteristicType">
	<xsd:choice>
			<xsd:element ref="ssqml:TransformGroupCharacteristic_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:TransformGroupCharacteristic_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TransformGroupCharacteristic" type="ssqml:TransformGroupCharacteristicType"/>

<xsd:complexType name="TransformGroupSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TransformGroupStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:SingleGroupSpecification"/>
			<xsd:element ref="ssqml:MultipleGroupSpecification"/>
		</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TransformGroupSpecification" type="ssqml:TransformGroupSpecificationType"/>

<xsd:complexType name="TransformGroupType">
	<xsd:sequence>
			<xsd:element ref="ssqml:GroupName"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TransformElementList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TransformGroup" type="ssqml:TransformGroupType"/>

<xsd:complexType name="TransformsToBeDroppedType">
	<xsd:choice>
			<xsd:element ref="ssqml:AllStaticString"/>
			<xsd:element ref="ssqml:TransformGroupElement"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TransformsToBeDropped" type="ssqml:TransformsToBeDroppedType"/>

<xsd:complexType name="TransliterationDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateTranslationStaticString"/>
			<xsd:element ref="ssqml:TransliterationName"/>
			<xsd:element ref="ssqml:ForStaticString"/>
			<xsd:element ref="ssqml:SourceCharacterSetSpecification"/>
			<xsd:element ref="ssqml:ToStaticString"/>
			<xsd:element ref="ssqml:TargetCharacterSetSpecification"/>
			<xsd:element ref="ssqml:FromStaticString"/>
			<xsd:element ref="ssqml:TransliterationSource"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TransliterationDefinition" type="ssqml:TransliterationDefinitionType"/>

<xsd:complexType name="TransliterationSourceType">
	<xsd:choice>
			<xsd:element ref="ssqml:ExistingTransliterationName"/>
			<xsd:element ref="ssqml:TransliterationRoutine"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TransliterationSource" type="ssqml:TransliterationSourceType"/>

<xsd:complexType name="TriggerDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateTriggerStaticString"/>
			<xsd:element ref="ssqml:TriggerName"/>
			<xsd:element ref="ssqml:TriggerActionTime"/>
			<xsd:element ref="ssqml:TriggerEvent"/>
			<xsd:element ref="ssqml:OnStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:ReferencingStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:OldOrNewValuesAliasList" minOccurs="0"/>
			<xsd:element ref="ssqml:TriggeredAction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TriggerDefinition" type="ssqml:TriggerDefinitionType"/>

<xsd:complexType name="TriggerEvent_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:UpdateStaticString"/>
			<xsd:element ref="ssqml:OfStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:TriggerColumnList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TriggerEvent_ISO9075ChoiceGroup1" type="ssqml:TriggerEvent_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="TriggerEventType">
	<xsd:choice>
			<xsd:element ref="ssqml:InsertStaticString"/>
			<xsd:element ref="ssqml:DeleteStaticString"/>
			<xsd:element ref="ssqml:TriggerEvent_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="TriggerEvent" type="ssqml:TriggerEventType"/>

<xsd:complexType name="TriggeredActionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ForEachStaticString" minOccurs="0"/>
		<xsd:choice>
			<xsd:element ref="ssqml:RowStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:StatementStaticString" minOccurs="0"/>
		</xsd:choice>
			<xsd:element ref="ssqml:WhenStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:SearchCondition" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
			<xsd:element ref="ssqml:TriggeredSqlStatement"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TriggeredAction" type="ssqml:TriggeredActionType"/>

<xsd:complexType name="TrimFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TrimStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TrimOperands"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TrimFunction" type="ssqml:TrimFunctionType"/>

<xsd:complexType name="TrimOperands_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:TrimSpecification" minOccurs="0"/>
		<xsd:element ref="ssqml:TrimCharacter" minOccurs="0"/>
		<xsd:element ref="ssqml:FromStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TrimOperands_ISO9075ChoiceGroup1" type="ssqml:TrimOperands_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="TrimOperandsType">
	<xsd:sequence>
		<xsd:element ref="ssqml:TrimOperands_ISO9075ChoiceGroup1" minOccurs="0"/>
		<xsd:element ref="ssqml:TrimSource"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TrimOperands" type="ssqml:TrimOperandsType"/>

<xsd:complexType name="TypeListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UserDefinedTypeSpecification"/>
			<xsd:element ref="ssqml:CommaUserDefinedTypeSpecificationItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TypeList" type="ssqml:TypeListType"/>

<xsd:complexType name="TypePredicatePart2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:IsStaticString"/>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:OfStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:TypeList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TypePredicatePart2" type="ssqml:TypePredicatePart2Type"/>

<xsd:complexType name="TypePredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:TypePredicatePart2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="TypePredicate" type="ssqml:TypePredicateType"/>

<xsd:complexType name="UnderscoreSqlLanguageIdentifierPartItemtypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:Underscore"/>
			<xsd:element ref="ssqml:SqlLanguageIdentifierPart"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UnderscoreSqlLanguageIdentifierPartItemtype" type="ssqml:UnderscoreSqlLanguageIdentifierPartItemtypeType"/>

<xsd:complexType name="Unicode4DigitEscapeValueType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnicodeEscapeCharacterHexitHexitHexitHexit"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Unicode4DigitEscapeValue" type="ssqml:Unicode4DigitEscapeValueType"/>

<xsd:complexType name="Unicode6DigitEscapeValueType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnicodeEscapeCharacterPlusSignHexitHexitHexitHexitHexitHexit"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="Unicode6DigitEscapeValue" type="ssqml:Unicode6DigitEscapeValueType"/>

<xsd:complexType name="UnicodeCharacterEscapeValueType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnicodeEscapeCharacterUnicodeEscapeCharacter"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UnicodeCharacterEscapeValue" type="ssqml:UnicodeCharacterEscapeValueType"/>

<xsd:complexType name="UnicodeCharacterStringLiteralType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Introducer" minOccurs="0"/>
			<xsd:element ref="ssqml:CharacterSetSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:UStaticString"/>
			<xsd:element ref="ssqml:Ampersand"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:UnicodeRepresentation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:Quote"/>
			<xsd:element ref="ssqml:SeparatorQuoteUnicodeRepresentationQuoteItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:EscapeStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:EscapeCharacter" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UnicodeCharacterStringLiteral" type="ssqml:UnicodeCharacterStringLiteralType"/>

<xsd:complexType name="UnicodeDelimitedIdentifierType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UStaticString"/>
			<xsd:element ref="ssqml:Ampersand"/>
			<xsd:element ref="ssqml:DoubleQuote"/>
			<xsd:element ref="ssqml:UnicodeDelimiterBody"/>
			<xsd:element ref="ssqml:DoubleQuote"/>
			<xsd:element ref="ssqml:UnicodeEscapeSpecifier"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UnicodeDelimitedIdentifier" type="ssqml:UnicodeDelimitedIdentifierType"/>

<xsd:complexType name="UnicodeDelimiterBodyType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnicodeIdentifierPart" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UnicodeDelimiterBody" type="ssqml:UnicodeDelimiterBodyType"/>

<xsd:complexType name="UnicodeEscapeSpecifierType">
	<xsd:sequence>
			<xsd:element ref="ssqml:QuoteUnicodeEscapeCharacterQuote"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UnicodeEscapeSpecifier" type="ssqml:UnicodeEscapeSpecifierType"/>

<xsd:complexType name="UnicodeEscapeValueType">
	<xsd:choice>
			<xsd:element ref="ssqml:Unicode4DigitEscapeValue"/>
			<xsd:element ref="ssqml:Unicode6DigitEscapeValue"/>
			<xsd:element ref="ssqml:UnicodeCharacterEscapeValue"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UnicodeEscapeValue" type="ssqml:UnicodeEscapeValueType"/>

<xsd:complexType name="UnicodeIdentifierPartType">
	<xsd:choice>
			<xsd:element ref="ssqml:DelimitedIdentifierPart"/>
			<xsd:element ref="ssqml:UnicodeEscapeValue"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UnicodeIdentifierPart" type="ssqml:UnicodeIdentifierPartType"/>

<xsd:complexType name="UnicodeRepresentationType">
	<xsd:choice>
			<xsd:element ref="ssqml:CharacterRepresentation"/>
			<xsd:element ref="ssqml:UnicodeEscapeValue"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UnicodeRepresentation" type="ssqml:UnicodeRepresentationType"/>

<xsd:complexType name="UnionJoinType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TableReference"/>
			<xsd:element ref="ssqml:UnionJoinStaticString"/>
			<xsd:element ref="ssqml:TablePrimary"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UnionJoin" type="ssqml:UnionJoinType"/>

<xsd:complexType name="UniqueConstraintDefinition_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:UniqueSpecification"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:UniqueColumnList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UniqueConstraintDefinition_ISO9075ChoiceGroup1" type="ssqml:UniqueConstraintDefinition_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="UniqueConstraintDefinition_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:UniqueStaticString"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:ValueStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UniqueConstraintDefinition_ISO9075ChoiceGroup2" type="ssqml:UniqueConstraintDefinition_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="UniqueConstraintDefinitionType">
	<xsd:choice>
			<xsd:element ref="ssqml:UniqueConstraintDefinition_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:UniqueConstraintDefinition_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UniqueConstraintDefinition" type="ssqml:UniqueConstraintDefinitionType"/>

<xsd:complexType name="UniquePredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UniqueStaticString"/>
			<xsd:element ref="ssqml:TableSubquery"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UniquePredicate" type="ssqml:UniquePredicateType"/>

<xsd:complexType name="UnquotedIntervalStringType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Sign" minOccurs="0"/>
		<xsd:choice>
			<xsd:element ref="ssqml:YearMonthLiteral"/>
			<xsd:element ref="ssqml:DayTimeLiteral"/>
		</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UnquotedIntervalString" type="ssqml:UnquotedIntervalStringType"/>

<xsd:complexType name="UnquotedTimeStringType">
	<xsd:sequence>
			<xsd:element ref="ssqml:TimeValue"/>
			<xsd:element ref="ssqml:TimeZoneInterval" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UnquotedTimeString" type="ssqml:UnquotedTimeStringType"/>

<xsd:complexType name="UnquotedTimestampStringType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnquotedDateString"/>
			<xsd:element ref="ssqml:Space"/>
			<xsd:element ref="ssqml:UnquotedTimeString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UnquotedTimestampString" type="ssqml:UnquotedTimestampStringType"/>

<xsd:complexType name="UnsignedLiteralType">
	<xsd:choice>
			<xsd:element ref="ssqml:UnsignedNumericLiteral"/>
			<xsd:element ref="ssqml:GeneralLiteral"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UnsignedLiteral" type="ssqml:UnsignedLiteralType"/>

<xsd:complexType name="UnsignedNumericLiteralType">
	<xsd:choice>
			<xsd:element ref="ssqml:ExactNumericLiteral"/>
			<xsd:element ref="ssqml:ApproximateNumericLiteral"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UnsignedNumericLiteral" type="ssqml:UnsignedNumericLiteralType"/>

<xsd:complexType name="UnsignedValueSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:UnsignedLiteral"/>
			<xsd:element ref="ssqml:GeneralValueSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UnsignedValueSpecification" type="ssqml:UnsignedValueSpecificationType"/>

<xsd:complexType name="UpdatabilityClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ForStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:ReadOnlyStaticString"/>
			<xsd:element ref="ssqml:UpdateStaticString"/>
			<xsd:element ref="ssqml:OfStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnNameList" minOccurs="0"/>
		</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UpdatabilityClause" type="ssqml:UpdatabilityClauseType"/>

<xsd:complexType name="UpdateRuleType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OnUpdateStaticString"/>
			<xsd:element ref="ssqml:ReferentialAction"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UpdateRule" type="ssqml:UpdateRuleType"/>

<xsd:complexType name="UpdateSourceType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:ContextuallyTypedValueSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UpdateSource" type="ssqml:UpdateSourceType"/>

<xsd:complexType name="UpdateStatementPositionedType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UpdateStaticString"/>
			<xsd:element ref="ssqml:WithStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlLexicallyScopedOptions" minOccurs="0"/>
			<xsd:element ref="ssqml:TargetTable"/>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:SetClauseList"/>
			<xsd:element ref="ssqml:WhereCurrentOfStaticString"/>
			<xsd:element ref="ssqml:CursorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UpdateStatementPositioned" type="ssqml:UpdateStatementPositionedType"/>

<xsd:complexType name="UpdateStatementSearchedType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UpdateStaticString"/>
			<xsd:element ref="ssqml:WithStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlLexicallyScopedOptions" minOccurs="0"/>
			<xsd:element ref="ssqml:TargetTable"/>
			<xsd:element ref="ssqml:SetStaticString"/>
			<xsd:element ref="ssqml:SetClauseList"/>
			<xsd:element ref="ssqml:WhereStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SearchCondition" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UpdateStatementSearched" type="ssqml:UpdateStatementSearchedType"/>

<xsd:complexType name="UpdateTarget_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:ObjectColumn2"/>
			<xsd:element ref="ssqml:LeftBracketOrTrigraph"/>
			<xsd:element ref="ssqml:SimpleValueSpecification"/>
			<xsd:element ref="ssqml:RightBracketOrTrigraph"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UpdateTarget_ISO9075ChoiceGroup1" type="ssqml:UpdateTarget_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="UpdateTargetType">
	<xsd:choice>
			<xsd:element ref="ssqml:ObjectColumn"/>
			<xsd:element ref="ssqml:UpdateTarget_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UpdateTarget" type="ssqml:UpdateTargetType"/>

<xsd:complexType name="UpperLimitType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:HighValue" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UpperLimit" type="ssqml:UpperLimitType"/>

<xsd:complexType name="UserDefinedCastDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateCastStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:SourceDataType"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:TargetDataType"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:WithStaticString"/>
			<xsd:element ref="ssqml:CastFunction"/>
			<xsd:element ref="ssqml:AsAssignmentStaticString" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UserDefinedCastDefinition" type="ssqml:UserDefinedCastDefinitionType"/>

<xsd:complexType name="UserDefinedOrderingDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateOrderingForStaticString"/>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:OrderingForm"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UserDefinedOrderingDefinition" type="ssqml:UserDefinedOrderingDefinitionType"/>

<xsd:complexType name="UserDefinedRepresentationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:RefUsingStaticString"/>
			<xsd:element ref="ssqml:PredefinedType"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UserDefinedRepresentation" type="ssqml:UserDefinedRepresentationType"/>

<xsd:complexType name="UserDefinedTypeBodyType">
	<xsd:sequence>
			<xsd:element ref="ssqml:SchemaResolvedUserDefinedTypeName"/>
			<xsd:element ref="ssqml:SubtypeClause" minOccurs="0"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:Representation" minOccurs="0"/>
			<xsd:element ref="ssqml:UserDefinedTypeOptionList" minOccurs="0"/>
			<xsd:element ref="ssqml:MethodSpecificationList" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UserDefinedTypeBody" type="ssqml:UserDefinedTypeBodyType"/>

<xsd:complexType name="UserDefinedTypeDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateTypeStaticString"/>
			<xsd:element ref="ssqml:UserDefinedTypeBody"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UserDefinedTypeDefinition" type="ssqml:UserDefinedTypeDefinitionType"/>

<xsd:complexType name="UserDefinedTypeOptionListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UserDefinedTypeOption"/>
			<xsd:element ref="ssqml:UserDefinedTypeOption" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UserDefinedTypeOptionList" type="ssqml:UserDefinedTypeOptionListType"/>

<xsd:complexType name="UserDefinedTypeOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:InstantiableClause"/>
			<xsd:element ref="ssqml:Finality"/>
			<xsd:element ref="ssqml:ReferenceTypeSpecification"/>
			<xsd:element ref="ssqml:RefCastOption"/>
			<xsd:element ref="ssqml:CastOption"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UserDefinedTypeOption" type="ssqml:UserDefinedTypeOptionType"/>

<xsd:complexType name="UserDefinedTypeSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:InclusiveUserDefinedTypeSpecification"/>
			<xsd:element ref="ssqml:ExclusiveUserDefinedTypeSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="UserDefinedTypeSpecification" type="ssqml:UserDefinedTypeSpecificationType"/>

<xsd:complexType name="UsingArgumentsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UsingStaticString"/>
			<xsd:element ref="ssqml:UsingArgument"/>
			<xsd:element ref="ssqml:CommaUsingArgumentItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UsingArguments" type="ssqml:UsingArgumentsType"/>

<xsd:complexType name="UsingDescriptorType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UsingStaticString"/>
			<xsd:element ref="ssqml:SqlStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:DescriptorStaticString"/>
			<xsd:element ref="ssqml:DescriptorName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="UsingDescriptor" type="ssqml:UsingDescriptorType"/>

<xsd:complexType name="ValueExpressionPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:ParenthesizedValueExpression"/>
			<xsd:element ref="ssqml:NonparenthesizedValueExpressionPrimary"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ValueExpressionPrimary" type="ssqml:ValueExpressionPrimaryType"/>

<xsd:complexType name="ValueExpressionType">
	<xsd:choice>
			<xsd:element ref="ssqml:CommonValueExpression"/>
			<xsd:element ref="ssqml:BooleanValueExpression"/>
			<xsd:element ref="ssqml:RowValueExpression"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ValueExpression" type="ssqml:ValueExpressionType"/>

<xsd:complexType name="ValueSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:Literal"/>
			<xsd:element ref="ssqml:GeneralValueSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ValueSpecification" type="ssqml:ValueSpecificationType"/>

<xsd:complexType name="ViewColumnOptionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnName"/>
			<xsd:element ref="ssqml:WithOptionsStaticString"/>
			<xsd:element ref="ssqml:ScopeClause"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ViewColumnOption" type="ssqml:ViewColumnOptionType"/>

<xsd:complexType name="ViewDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:CreateStaticString"/>
			<xsd:element ref="ssqml:RecursiveStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ViewStaticString"/>
			<xsd:element ref="ssqml:TableName"/>
			<xsd:element ref="ssqml:ViewSpecification"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:QueryExpression"/>
			<xsd:element ref="ssqml:WithStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:LevelsClause" minOccurs="0"/>
			<xsd:element ref="ssqml:CheckOptionStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ViewDefinition" type="ssqml:ViewDefinitionType"/>

<xsd:complexType name="ViewElementListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:ViewElement"/>
			<xsd:element ref="ssqml:CommaViewElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="ViewElementList" type="ssqml:ViewElementListType"/>

<xsd:complexType name="ViewElementType">
	<xsd:choice>
			<xsd:element ref="ssqml:SelfReferencingColumnSpecification"/>
			<xsd:element ref="ssqml:ViewColumnOption"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ViewElement" type="ssqml:ViewElementType"/>

<xsd:complexType name="ViewSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:RegularViewSpecification"/>
			<xsd:element ref="ssqml:ReferenceableViewSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="ViewSpecification" type="ssqml:ViewSpecificationType"/>

<xsd:complexType name="WhenOperandType">
	<xsd:choice>
			<xsd:element ref="ssqml:RowValuePredicand"/>
			<xsd:element ref="ssqml:ComparisonPredicatePart2"/>
			<xsd:element ref="ssqml:BetweenPredicatePart2"/>
			<xsd:element ref="ssqml:InPredicatePart2"/>
			<xsd:element ref="ssqml:CharacterLikePredicatePart2"/>
			<xsd:element ref="ssqml:OctetLikePredicatePart2"/>
			<xsd:element ref="ssqml:SimilarPredicatePart2"/>
			<xsd:element ref="ssqml:NullPredicatePart2"/>
			<xsd:element ref="ssqml:QuantifiedComparisonPredicatePart2"/>
			<xsd:element ref="ssqml:MatchPredicatePart2"/>
			<xsd:element ref="ssqml:OverlapsPredicatePart2"/>
			<xsd:element ref="ssqml:DistinctPredicatePart2"/>
			<xsd:element ref="ssqml:MemberPredicatePart2"/>
			<xsd:element ref="ssqml:SubmultisetPredicatePart2"/>
			<xsd:element ref="ssqml:SetPredicatePart2"/>
			<xsd:element ref="ssqml:TypePredicatePart2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="WhenOperand" type="ssqml:WhenOperandType"/>

<xsd:complexType name="WhenOperandListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WhenOperand"/>
			<xsd:element ref="ssqml:CommaWhenOperandItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WhenOperandList" type="ssqml:WhenOperandListType"/>

<xsd:complexType name="WhereClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WhereStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WhereClause" type="ssqml:WhereClauseType"/>

<xsd:complexType name="WhileStatementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:BeginningLabel" minOccurs="0"/>
			<xsd:element ref="ssqml:Colon" minOccurs="0"/>
			<xsd:element ref="ssqml:WhileStaticString"/>
			<xsd:element ref="ssqml:SearchCondition"/>
			<xsd:element ref="ssqml:DoStaticString"/>
			<xsd:element ref="ssqml:SqlStatementList"/>
			<xsd:element ref="ssqml:EndWhileStaticString"/>
			<xsd:element ref="ssqml:EndingLabel" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WhileStatement" type="ssqml:WhileStatementType"/>

<xsd:complexType name="WidthBucketFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:Width_bucketStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:WidthBucketOperand"/>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:WidthBucketBound1"/>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:WidthBucketBound2"/>
			<xsd:element ref="ssqml:Comma"/>
			<xsd:element ref="ssqml:WidthBucketCount"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WidthBucketFunction" type="ssqml:WidthBucketFunctionType"/>

<xsd:complexType name="WindowClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WindowStaticString"/>
			<xsd:element ref="ssqml:WindowDefinitionList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowClause" type="ssqml:WindowClauseType"/>

<xsd:complexType name="WindowDefinitionListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WindowDefinition"/>
			<xsd:element ref="ssqml:CommaWindowDefinitionItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowDefinitionList" type="ssqml:WindowDefinitionListType"/>

<xsd:complexType name="WindowDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NewWindowName"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:WindowSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowDefinition" type="ssqml:WindowDefinitionType"/>

<xsd:complexType name="WindowFrameBetweenType">
	<xsd:sequence>
			<xsd:element ref="ssqml:BetweenStaticString"/>
			<xsd:element ref="ssqml:WindowFrameBound1"/>
			<xsd:element ref="ssqml:AndStaticString"/>
			<xsd:element ref="ssqml:WindowFrameBound2"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowFrameBetween" type="ssqml:WindowFrameBetweenType"/>

<xsd:complexType name="WindowFrameBoundType">
	<xsd:choice>
			<xsd:element ref="ssqml:WindowFrameStart"/>
			<xsd:element ref="ssqml:UnboundedFollowingStaticString"/>
			<xsd:element ref="ssqml:WindowFrameFollowing"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="WindowFrameBound" type="ssqml:WindowFrameBoundType"/>

<xsd:complexType name="WindowFrameClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WindowFrameUnits"/>
			<xsd:element ref="ssqml:WindowFrameExtent"/>
			<xsd:element ref="ssqml:WindowFrameExclusion" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowFrameClause" type="ssqml:WindowFrameClauseType"/>

<xsd:complexType name="WindowFrameExtentType">
	<xsd:choice>
			<xsd:element ref="ssqml:WindowFrameStart"/>
			<xsd:element ref="ssqml:WindowFrameBetween"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="WindowFrameExtent" type="ssqml:WindowFrameExtentType"/>

<xsd:complexType name="WindowFrameFollowingType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnsignedValueSpecification"/>
			<xsd:element ref="ssqml:FollowingStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowFrameFollowing" type="ssqml:WindowFrameFollowingType"/>

<xsd:complexType name="WindowFramePrecedingType">
	<xsd:sequence>
			<xsd:element ref="ssqml:UnsignedValueSpecification"/>
			<xsd:element ref="ssqml:PrecedingStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowFramePreceding" type="ssqml:WindowFramePrecedingType"/>

<xsd:complexType name="WindowFrameStartType">
	<xsd:choice>
			<xsd:element ref="ssqml:UnboundedPrecedingStaticString"/>
			<xsd:element ref="ssqml:WindowFramePreceding"/>
			<xsd:element ref="ssqml:CurrentRowStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="WindowFrameStart" type="ssqml:WindowFrameStartType"/>

<xsd:complexType name="WindowFunctionType_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:RankFunctionType"/>
			<xsd:element ref="ssqml:LeftParenRightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowFunctionType_ISO9075ChoiceGroup1" type="ssqml:WindowFunctionType_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="WindowFunctionType_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:Row_numberStaticString"/>
			<xsd:element ref="ssqml:LeftParenRightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowFunctionType_ISO9075ChoiceGroup2" type="ssqml:WindowFunctionType_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="WindowFunctionTypeType">
	<xsd:choice>
			<xsd:element ref="ssqml:WindowFunctionType_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:WindowFunctionType_ISO9075ChoiceGroup2"/>
			<xsd:element ref="ssqml:AggregateFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="WindowFunctionType" type="ssqml:WindowFunctionTypeType"/>

<xsd:complexType name="WindowFunctionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WindowFunctionType"/>
			<xsd:element ref="ssqml:OverStaticString"/>
			<xsd:element ref="ssqml:WindowNameOrSpecification"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowFunction" type="ssqml:WindowFunctionType"/>

<xsd:complexType name="WindowNameOrSpecificationType">
	<xsd:choice>
			<xsd:element ref="ssqml:WindowName"/>
			<xsd:element ref="ssqml:InLineWindowSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="WindowNameOrSpecification" type="ssqml:WindowNameOrSpecificationType"/>

<xsd:complexType name="WindowOrderClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:OrderByStaticString"/>
			<xsd:element ref="ssqml:SortSpecificationList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowOrderClause" type="ssqml:WindowOrderClauseType"/>

<xsd:complexType name="WindowPartitionClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PartitionByStaticString"/>
			<xsd:element ref="ssqml:WindowPartitionColumnReferenceList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowPartitionClause" type="ssqml:WindowPartitionClauseType"/>

<xsd:complexType name="WindowPartitionColumnReferenceListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WindowPartitionColumnReference"/>
			<xsd:element ref="ssqml:CommaWindowPartitionColumnReferenceItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowPartitionColumnReferenceList" type="ssqml:WindowPartitionColumnReferenceListType"/>

<xsd:complexType name="WindowPartitionColumnReferenceType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnReference"/>
			<xsd:element ref="ssqml:CollateClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowPartitionColumnReference" type="ssqml:WindowPartitionColumnReferenceType"/>

<xsd:complexType name="WindowSpecificationDetailsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ExistingWindowName" minOccurs="0"/>
			<xsd:element ref="ssqml:WindowPartitionClause" minOccurs="0"/>
			<xsd:element ref="ssqml:WindowOrderClause" minOccurs="0"/>
			<xsd:element ref="ssqml:WindowFrameClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowSpecificationDetails" type="ssqml:WindowSpecificationDetailsType"/>

<xsd:complexType name="WindowSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:WindowSpecificationDetails"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WindowSpecification" type="ssqml:WindowSpecificationType"/>

<xsd:complexType name="WithClause_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
		<xsd:element ref="ssqml:RecursiveStaticString" minOccurs="0"/>
		<xsd:element ref="ssqml:WithList"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WithClause_ISO9075ChoiceGroup1" type="ssqml:WithClause_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="WithClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WithStaticString"/>
			<xsd:element ref="ssqml:XmlLexicallyScopedOptions" minOccurs="0"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:WithClause_ISO9075ChoiceGroup1" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WithClause" type="ssqml:WithClauseType"/>

<xsd:complexType name="WithListElementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:QueryName"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:WithColumnList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:QueryExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
			<xsd:element ref="ssqml:SearchOrCycleClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WithListElement" type="ssqml:WithListElementType"/>

<xsd:complexType name="WithListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WithListElement"/>
			<xsd:element ref="ssqml:CommaWithListElementItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WithList" type="ssqml:WithListType"/>

<xsd:complexType name="WithinGroupSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:WithinGroupStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:OrderByStaticString"/>
			<xsd:element ref="ssqml:SortSpecificationList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="WithinGroupSpecification" type="ssqml:WithinGroupSpecificationType"/>

<xsd:complexType name="XmlAggregateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlaggStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XmlValueExpression"/>
			<xsd:element ref="ssqml:OrderByStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:SortSpecificationList" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlReturningClause" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlAggregate" type="ssqml:XmlAggregateType"/>

<xsd:complexType name="XmlAttributeListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlAttribute"/>
			<xsd:element ref="ssqml:CommaXmlAttributeItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlAttributeList" type="ssqml:XmlAttributeListType"/>

<xsd:complexType name="XmlAttributeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlAttributeValue"/>
			<xsd:element ref="ssqml:AsStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlAttributeName" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlAttribute" type="ssqml:XmlAttributeType"/>

<xsd:complexType name="XmlAttributesType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlattributesStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XmlAttributeList"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlAttributes" type="ssqml:XmlAttributesType"/>

<xsd:complexType name="XmlBinaryEncodingType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlbinaryStaticString"/>
			<xsd:element ref="ssqml:UsingStaticString" minOccurs="0"/>
		<xsd:choice>
			<xsd:element ref="ssqml:Base64StaticString"/>
			<xsd:element ref="ssqml:HexStaticString"/>
		</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlBinaryEncoding" type="ssqml:XmlBinaryEncodingType"/>

<xsd:complexType name="XmlBinaryStringSerializationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlserializeStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:DocumentOrContentOrSequence"/>
			<xsd:element ref="ssqml:XmlValueExpression"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:EncodingStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlEncodingSpecification" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlSerializeVersion" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlBinaryStringSerialization" type="ssqml:XmlBinaryStringSerializationType"/>

<xsd:complexType name="XmlCastOperandType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:ImplicitlyTypedValueSpecification"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlCastOperand" type="ssqml:XmlCastOperandType"/>

<xsd:complexType name="XmlCastSpecificationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlcastStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XmlCastOperand"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:XmlCastTarget"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlCastSpecification" type="ssqml:XmlCastSpecificationType"/>

<xsd:complexType name="XmlCastTargetType">
	<xsd:choice>
			<xsd:element ref="ssqml:DomainName"/>
			<xsd:element ref="ssqml:DataType"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlCastTarget" type="ssqml:XmlCastTargetType"/>

<xsd:complexType name="XmlCharacterStringSerializationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlserializeStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:DocumentOrContentOrSequence"/>
			<xsd:element ref="ssqml:XmlValueExpression"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:XmlSerializeVersion" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlCharacterStringSerialization" type="ssqml:XmlCharacterStringSerializationType"/>

<xsd:complexType name="XmlCommentType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlcommentStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:StringValueExpression"/>
			<xsd:element ref="ssqml:XmlReturningClause" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlComment" type="ssqml:XmlCommentType"/>

<xsd:complexType name="XmlConcatenationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlconcatStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XmlValueExpression"/>
			<xsd:element ref="ssqml:CommaXmlValueExpressionItemtype" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:XmlReturningClause" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlConcatenation" type="ssqml:XmlConcatenationType"/>

<xsd:complexType name="XmlContentPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlValueExpression"/>
			<xsd:element ref="ssqml:IsStaticString"/>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlUntypedOrAny" minOccurs="0"/>
			<xsd:element ref="ssqml:ContentStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlContentPredicate" type="ssqml:XmlContentPredicateType"/>

<xsd:complexType name="XmlDefaultNamespaceDeclarationItem_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:DefaultStaticString"/>
			<xsd:element ref="ssqml:XmlNamespaceUri"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlDefaultNamespaceDeclarationItem_ISO9075ChoiceGroup1" type="ssqml:XmlDefaultNamespaceDeclarationItem_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="XmlDefaultNamespaceDeclarationItemType">
	<xsd:choice>
			<xsd:element ref="ssqml:XmlDefaultNamespaceDeclarationItem_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:NoDefaultStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlDefaultNamespaceDeclarationItem" type="ssqml:XmlDefaultNamespaceDeclarationItemType"/>

<xsd:complexType name="XmlDocumentPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlValueExpression"/>
			<xsd:element ref="ssqml:IsStaticString"/>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlUntypedOrAny" minOccurs="0"/>
			<xsd:element ref="ssqml:DocumentStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlDocumentPredicate" type="ssqml:XmlDocumentPredicateType"/>

<xsd:complexType name="XmlElementType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlelementStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NameStaticString"/>
			<xsd:element ref="ssqml:XmlElementName"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlNamespaceDeclaration" minOccurs="0"/>
			<xsd:element ref="ssqml:Comma2" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlAttributes" minOccurs="0"/>
			<xsd:element ref="ssqml:CommaXmlElementContentItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:OptionStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlContentOption" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlReturningClause" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlElement" type="ssqml:XmlElementType"/>

<xsd:complexType name="XmlExistsPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlexistsStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XqueryExpression"/>
			<xsd:element ref="ssqml:XmlQueryArgumentList" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlExistsPredicate" type="ssqml:XmlExistsPredicateType"/>

<xsd:complexType name="XmlForestType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlforestStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XmlNamespaceDeclaration" minOccurs="0"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:ForestElementList"/>
			<xsd:element ref="ssqml:OptionStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlContentOption" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlReturningClause" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlForest" type="ssqml:XmlForestType"/>

<xsd:complexType name="XmlIterateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmliterateStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XmlValueExpression"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlIterate" type="ssqml:XmlIterateType"/>

<xsd:complexType name="XmlLexicallyScopedOptionType">
	<xsd:choice>
			<xsd:element ref="ssqml:XmlNamespaceDeclaration"/>
			<xsd:element ref="ssqml:XmlBinaryEncoding"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlLexicallyScopedOption" type="ssqml:XmlLexicallyScopedOptionType"/>

<xsd:complexType name="XmlLexicallyScopedOptionsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlLexicallyScopedOption"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlLexicallyScopedOption" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlLexicallyScopedOptions" type="ssqml:XmlLexicallyScopedOptionsType"/>

<xsd:complexType name="XmlNamespaceDeclarationItemType">
	<xsd:choice>
			<xsd:element ref="ssqml:XmlRegularNamespaceDeclarationItem"/>
			<xsd:element ref="ssqml:XmlDefaultNamespaceDeclarationItem"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlNamespaceDeclarationItem" type="ssqml:XmlNamespaceDeclarationItemType"/>

<xsd:complexType name="XmlNamespaceDeclarationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlnamespacesStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XmlNamespaceDeclarationItem"/>
			<xsd:element ref="ssqml:CommaXmlNamespaceDeclarationItemItemtype" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlNamespaceDeclaration" type="ssqml:XmlNamespaceDeclarationType"/>

<xsd:complexType name="XmlParseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlparseStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:DocumentOrContent"/>
			<xsd:element ref="ssqml:StringValueExpression"/>
			<xsd:element ref="ssqml:XmlWhitespaceOption"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlParse" type="ssqml:XmlParseType"/>

<xsd:complexType name="XmlPiType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlpiStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:NameStaticString"/>
			<xsd:element ref="ssqml:XmlPiTarget"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:StringValueExpression" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlReturningClause" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlPi" type="ssqml:XmlPiType"/>

<xsd:complexType name="XmlPrimaryType">
	<xsd:choice>
			<xsd:element ref="ssqml:ValueExpressionPrimary"/>
			<xsd:element ref="ssqml:XmlValueFunction"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlPrimary" type="ssqml:XmlPrimaryType"/>

<xsd:complexType name="XmlQueryArgumentListType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PassingStaticString"/>
			<xsd:element ref="ssqml:XmlQueryDefaultPassingMechanism"/>
			<xsd:element ref="ssqml:XmlQueryArgument"/>
			<xsd:element ref="ssqml:CommaXmlQueryArgumentItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlQueryArgumentList" type="ssqml:XmlQueryArgumentListType"/>

<xsd:complexType name="XmlQueryArgumentType">
	<xsd:choice>
			<xsd:element ref="ssqml:XmlQueryContextItem"/>
			<xsd:element ref="ssqml:XmlQueryVariable"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlQueryArgument" type="ssqml:XmlQueryArgumentType"/>

<xsd:complexType name="XmlQueryContextItemType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:XmlPassingMechanism" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlQueryContextItem" type="ssqml:XmlQueryContextItemType"/>

<xsd:complexType name="XmlQueryVariableType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ValueExpression"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:Identifier"/>
			<xsd:element ref="ssqml:XmlPassingMechanism" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlQueryVariable" type="ssqml:XmlQueryVariableType"/>

<xsd:complexType name="XmlQueryType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlqueryStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XqueryExpression"/>
			<xsd:element ref="ssqml:XmlQueryArgumentList" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlReturningClause"/>
			<xsd:element ref="ssqml:XmlQueryReturningMechanism" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlQuery" type="ssqml:XmlQueryType"/>

<xsd:complexType name="XmlRegularNamespaceDeclarationItemType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlNamespaceUri"/>
			<xsd:element ref="ssqml:AsStaticString"/>
			<xsd:element ref="ssqml:XmlNamespacePrefix"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlRegularNamespaceDeclarationItem" type="ssqml:XmlRegularNamespaceDeclarationItemType"/>

<xsd:complexType name="XmlReturningClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ReturningStaticString"/>
		<xsd:choice>
			<xsd:element ref="ssqml:ContentStaticString"/>
			<xsd:element ref="ssqml:SequenceStaticString"/>
		</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlReturningClause" type="ssqml:XmlReturningClauseType"/>

<xsd:complexType name="XmlSerializeVersionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:VersionStaticString"/>
			<xsd:element ref="ssqml:CharacterStringLiteral"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlSerializeVersion" type="ssqml:XmlSerializeVersionType"/>

<xsd:complexType name="XmlTableColumnDefinitionType">
	<xsd:choice>
			<xsd:element ref="ssqml:XmlTableOrdinalityColumnDefinition"/>
			<xsd:element ref="ssqml:XmlTableRegularColumnDefinition"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlTableColumnDefinition" type="ssqml:XmlTableColumnDefinitionType"/>

<xsd:complexType name="XmlTableColumnDefinitionsType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlTableColumnDefinition"/>
			<xsd:element ref="ssqml:CommaXmlTableColumnDefinitionItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlTableColumnDefinitions" type="ssqml:XmlTableColumnDefinitionsType"/>

<xsd:complexType name="XmlTableOrdinalityColumnDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnName"/>
			<xsd:element ref="ssqml:ForOrdinalityStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlTableOrdinalityColumnDefinition" type="ssqml:XmlTableOrdinalityColumnDefinitionType"/>

<xsd:complexType name="XmlTableParametersType">
	<xsd:sequence>
			<xsd:element ref="ssqml:PassingStaticString"/>
			<xsd:element ref="ssqml:XmlQueryArgument"/>
			<xsd:element ref="ssqml:CommaXmlQueryArgumentItemtype" minOccurs="0" maxOccurs="unbounded"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlTableParameters" type="ssqml:XmlTableParametersType"/>

<xsd:complexType name="XmlTableRegularColumnDefinitionType">
	<xsd:sequence>
			<xsd:element ref="ssqml:ColumnName"/>
			<xsd:element ref="ssqml:DataType"/>
			<xsd:element ref="ssqml:XmlPassingMechanism" minOccurs="0"/>
			<xsd:element ref="ssqml:DefaultClause" minOccurs="0"/>
			<xsd:element ref="ssqml:PathStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlTableColumnPattern" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlTableRegularColumnDefinition" type="ssqml:XmlTableRegularColumnDefinitionType"/>

<xsd:complexType name="XmlTableType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmltableStaticString"/>
			<xsd:element ref="ssqml:LeftParen"/>
			<xsd:element ref="ssqml:XmlNamespaceDeclaration" minOccurs="0"/>
			<xsd:element ref="ssqml:Comma" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlTableRowPattern"/>
			<xsd:element ref="ssqml:XmlTableParameters" minOccurs="0"/>
			<xsd:element ref="ssqml:ColumnsStaticString"/>
			<xsd:element ref="ssqml:XmlTableColumnDefinitions"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlTable" type="ssqml:XmlTableType"/>

<xsd:complexType name="XmlTypeModifier_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlUntypedOrAny" minOccurs="0"/>
			<xsd:choice>
				<xsd:element ref="ssqml:DocumentStaticString"/>
				<xsd:element ref="ssqml:ContentStaticString"/>
			</xsd:choice>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlTypeModifier_ISO9075ChoiceGroup1" type="ssqml:XmlTypeModifier_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="XmlTypeModifierType">
	<xsd:choice>
			<xsd:element ref="ssqml:XmlTypeModifier_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:SequenceStaticString"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlTypeModifier" type="ssqml:XmlTypeModifierType"/>

<xsd:complexType name="XmlTypeType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlStaticString"/>
			<xsd:element ref="ssqml:LeftParen" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlTypeModifier" minOccurs="0"/>
			<xsd:element ref="ssqml:RightParen" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlType" type="ssqml:XmlTypeType"/>

<xsd:complexType name="XmlValidAccordingToClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:AccordingToXmlschemaStaticString"/>
			<xsd:element ref="ssqml:XmlValidAccordingToWhat"/>
			<xsd:element ref="ssqml:XmlValidElementClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlValidAccordingToClause" type="ssqml:XmlValidAccordingToClauseType"/>

<xsd:complexType name="XmlValidAccordingToIdentifierType">
	<xsd:sequence>
			<xsd:element ref="ssqml:IdStaticString"/>
			<xsd:element ref="ssqml:RegisteredXmlSchemaName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlValidAccordingToIdentifier" type="ssqml:XmlValidAccordingToIdentifierType"/>

<xsd:complexType name="XmlValidAccordingToUri_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:UriStaticString"/>
			<xsd:element ref="ssqml:XmlValidTargetNamespace"/>
			<xsd:element ref="ssqml:XmlValidSchemaLocation" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlValidAccordingToUri_ISO9075ChoiceGroup1" type="ssqml:XmlValidAccordingToUri_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="XmlValidAccordingToUri_ISO9075ChoiceGroup2Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:NoNamespaceStaticString"/>
			<xsd:element ref="ssqml:XmlValidSchemaLocation" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlValidAccordingToUri_ISO9075ChoiceGroup2" type="ssqml:XmlValidAccordingToUri_ISO9075ChoiceGroup2Type"/>

<xsd:complexType name="XmlValidAccordingToUriType">
	<xsd:choice>
			<xsd:element ref="ssqml:XmlValidAccordingToUri_ISO9075ChoiceGroup1"/>
			<xsd:element ref="ssqml:XmlValidAccordingToUri_ISO9075ChoiceGroup2"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlValidAccordingToUri" type="ssqml:XmlValidAccordingToUriType"/>

<xsd:complexType name="XmlValidAccordingToWhatType">
	<xsd:choice>
			<xsd:element ref="ssqml:XmlValidAccordingToUri"/>
			<xsd:element ref="ssqml:XmlValidAccordingToIdentifier"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlValidAccordingToWhat" type="ssqml:XmlValidAccordingToWhatType"/>

<xsd:complexType name="XmlValidElementClauseType">
	<xsd:sequence>
			<xsd:element ref="ssqml:NamespaceStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlValidElementNamespace" minOccurs="0"/>
			<xsd:element ref="ssqml:ElementStaticString"/>
			<xsd:element ref="ssqml:XmlValidElementName"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlValidElementClause" type="ssqml:XmlValidElementClauseType"/>

<xsd:complexType name="XmlValidPredicateType">
	<xsd:sequence>
			<xsd:element ref="ssqml:XmlValueExpression"/>
			<xsd:element ref="ssqml:IsStaticString"/>
			<xsd:element ref="ssqml:NotStaticString" minOccurs="0"/>
			<xsd:element ref="ssqml:ValidStaticString"/>
			<xsd:element ref="ssqml:XmlValidIdentityConstraintOption" minOccurs="0"/>
			<xsd:element ref="ssqml:XmlValidAccordingToClause" minOccurs="0"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlValidPredicate" type="ssqml:XmlValidPredicateType"/>

<xsd:complexType name="XmlValidSchemaLocationType">
	<xsd:sequence>
			<xsd:element ref="ssqml:LocationStaticString"/>
			<xsd:element ref="ssqml:XmlValidSchemaLocationUri"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlValidSchemaLocation" type="ssqml:XmlValidSchemaLocationType"/>

<xsd:complexType name="XmlValueFunctionType">
	<xsd:choice>
			<xsd:element ref="ssqml:XmlComment"/>
			<xsd:element ref="ssqml:XmlConcatenation"/>
			<xsd:element ref="ssqml:XmlElement"/>
			<xsd:element ref="ssqml:XmlForest"/>
			<xsd:element ref="ssqml:XmlParse"/>
			<xsd:element ref="ssqml:XmlPi"/>
			<xsd:element ref="ssqml:XmlQuery"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="XmlValueFunction" type="ssqml:XmlValueFunctionType"/>

<xsd:complexType name="XmlWhitespaceOptionType">
	<xsd:sequence>
		<xsd:choice>
			<xsd:element ref="ssqml:PreserveStaticString"/>
			<xsd:element ref="ssqml:StripStaticString"/>
		</xsd:choice>
			<xsd:element ref="ssqml:WhitespaceStaticString"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="XmlWhitespaceOption" type="ssqml:XmlWhitespaceOptionType"/>

<xsd:complexType name="YearMonthLiteral_ISO9075ChoiceGroup1Type">
	<xsd:sequence>
			<xsd:element ref="ssqml:YearsValue2" minOccurs="0"/>
			<xsd:element ref="ssqml:MinusSign" minOccurs="0"/>
			<xsd:element ref="ssqml:MonthsValue"/>
	</xsd:sequence>
</xsd:complexType>

<xsd:element name="YearMonthLiteral_ISO9075ChoiceGroup1" type="ssqml:YearMonthLiteral_ISO9075ChoiceGroup1Type"/>

<xsd:complexType name="YearMonthLiteralType">
	<xsd:choice>
			<xsd:element ref="ssqml:YearsValue"/>
			<xsd:element ref="ssqml:YearMonthLiteral_ISO9075ChoiceGroup1"/>
	</xsd:choice>
</xsd:complexType>

<xsd:element name="YearMonthLiteral" type="ssqml:YearMonthLiteralType"/>

</xsd:schema>
