//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.03 at 08:58:47 PM EDT 
//


package com.devspringsoftware.xml.ssqml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AsSubqueryClauseType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AsSubqueryClauseType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.devspringsoftware.com}LeftParen" minOccurs="0"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}ColumnNameList" minOccurs="0"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}RightParen" minOccurs="0"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}AsStaticString"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}Subquery"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}WithOrWithoutData"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AsSubqueryClauseType", propOrder = {
    "leftParen",
    "columnNameList",
    "rightParen",
    "asStaticString",
    "subquery",
    "withOrWithoutData"
})
public class AsSubqueryClauseType {

    @XmlElement(name = "LeftParen")
    protected String leftParen;
    @XmlElementRef(name = "ColumnNameList", namespace = "http://www.devspringsoftware.com", type = JAXBElement.class, required = false)
    protected JAXBElement<ColumnNameListType> columnNameList;
    @XmlElement(name = "RightParen")
    protected String rightParen;
    @XmlElement(name = "AsStaticString", required = true)
    protected AsStaticStringType asStaticString;
    @XmlElementRef(name = "Subquery", namespace = "http://www.devspringsoftware.com", type = JAXBElement.class)
    protected JAXBElement<SubqueryType> subquery;
    @XmlElement(name = "WithOrWithoutData", required = true)
    protected WithOrWithoutDataType withOrWithoutData;

    /**
     * Gets the value of the leftParen property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLeftParen() {
        return leftParen;
    }

    /**
     * Sets the value of the leftParen property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLeftParen(String value) {
        this.leftParen = value;
    }

    /**
     * Gets the value of the columnNameList property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     
     */
    public JAXBElement<ColumnNameListType> getColumnNameList() {
        return columnNameList;
    }

    /**
     * Sets the value of the columnNameList property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ColumnNameListType }{@code >}
     *     
     */
    public void setColumnNameList(JAXBElement<ColumnNameListType> value) {
        this.columnNameList = value;
    }

    /**
     * Gets the value of the rightParen property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRightParen() {
        return rightParen;
    }

    /**
     * Sets the value of the rightParen property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRightParen(String value) {
        this.rightParen = value;
    }

    /**
     * Gets the value of the asStaticString property.
     * 
     * @return
     *     possible object is
     *     {@link AsStaticStringType }
     *     
     */
    public AsStaticStringType getAsStaticString() {
        return asStaticString;
    }

    /**
     * Sets the value of the asStaticString property.
     * 
     * @param value
     *     allowed object is
     *     {@link AsStaticStringType }
     *     
     */
    public void setAsStaticString(AsStaticStringType value) {
        this.asStaticString = value;
    }

    /**
     * Gets the value of the subquery property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     
     */
    public JAXBElement<SubqueryType> getSubquery() {
        return subquery;
    }

    /**
     * Sets the value of the subquery property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SubqueryType }{@code >}
     *     
     */
    public void setSubquery(JAXBElement<SubqueryType> value) {
        this.subquery = value;
    }

    /**
     * Gets the value of the withOrWithoutData property.
     * 
     * @return
     *     possible object is
     *     {@link WithOrWithoutDataType }
     *     
     */
    public WithOrWithoutDataType getWithOrWithoutData() {
        return withOrWithoutData;
    }

    /**
     * Sets the value of the withOrWithoutData property.
     * 
     * @param value
     *     allowed object is
     *     {@link WithOrWithoutDataType }
     *     
     */
    public void setWithOrWithoutData(WithOrWithoutDataType value) {
        this.withOrWithoutData = value;
    }

}
