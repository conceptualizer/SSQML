//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.03 at 08:58:47 PM EDT 
//


package com.devspringsoftware.xml.ssqml;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PreparableDynamicDeleteStatementPositionedType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PreparableDynamicDeleteStatementPositionedType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.devspringsoftware.com}DeleteStaticString"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}FromStaticString" minOccurs="0"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}TargetTable" minOccurs="0"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}WhereCurrentOfStaticString"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}ScopeOption" minOccurs="0"/>
 *         &lt;element ref="{http://www.devspringsoftware.com}CursorName"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PreparableDynamicDeleteStatementPositionedType", propOrder = {
    "deleteStaticString",
    "fromStaticString",
    "targetTable",
    "whereCurrentOfStaticString",
    "scopeOption",
    "cursorName"
})
public class PreparableDynamicDeleteStatementPositionedType {

    @XmlElement(name = "DeleteStaticString", required = true)
    protected DeleteStaticStringType deleteStaticString;
    @XmlElement(name = "FromStaticString")
    protected FromStaticStringType fromStaticString;
    @XmlElement(name = "TargetTable")
    protected TargetTableType targetTable;
    @XmlElement(name = "WhereCurrentOfStaticString", required = true)
    protected WhereCurrentOfStaticStringType whereCurrentOfStaticString;
    @XmlElement(name = "ScopeOption")
    protected ScopeOptionType scopeOption;
    @XmlElement(name = "CursorName", required = true)
    protected LocalQualifiedNameType cursorName;

    /**
     * Gets the value of the deleteStaticString property.
     * 
     * @return
     *     possible object is
     *     {@link DeleteStaticStringType }
     *     
     */
    public DeleteStaticStringType getDeleteStaticString() {
        return deleteStaticString;
    }

    /**
     * Sets the value of the deleteStaticString property.
     * 
     * @param value
     *     allowed object is
     *     {@link DeleteStaticStringType }
     *     
     */
    public void setDeleteStaticString(DeleteStaticStringType value) {
        this.deleteStaticString = value;
    }

    /**
     * Gets the value of the fromStaticString property.
     * 
     * @return
     *     possible object is
     *     {@link FromStaticStringType }
     *     
     */
    public FromStaticStringType getFromStaticString() {
        return fromStaticString;
    }

    /**
     * Sets the value of the fromStaticString property.
     * 
     * @param value
     *     allowed object is
     *     {@link FromStaticStringType }
     *     
     */
    public void setFromStaticString(FromStaticStringType value) {
        this.fromStaticString = value;
    }

    /**
     * Gets the value of the targetTable property.
     * 
     * @return
     *     possible object is
     *     {@link TargetTableType }
     *     
     */
    public TargetTableType getTargetTable() {
        return targetTable;
    }

    /**
     * Sets the value of the targetTable property.
     * 
     * @param value
     *     allowed object is
     *     {@link TargetTableType }
     *     
     */
    public void setTargetTable(TargetTableType value) {
        this.targetTable = value;
    }

    /**
     * Gets the value of the whereCurrentOfStaticString property.
     * 
     * @return
     *     possible object is
     *     {@link WhereCurrentOfStaticStringType }
     *     
     */
    public WhereCurrentOfStaticStringType getWhereCurrentOfStaticString() {
        return whereCurrentOfStaticString;
    }

    /**
     * Sets the value of the whereCurrentOfStaticString property.
     * 
     * @param value
     *     allowed object is
     *     {@link WhereCurrentOfStaticStringType }
     *     
     */
    public void setWhereCurrentOfStaticString(WhereCurrentOfStaticStringType value) {
        this.whereCurrentOfStaticString = value;
    }

    /**
     * Gets the value of the scopeOption property.
     * 
     * @return
     *     possible object is
     *     {@link ScopeOptionType }
     *     
     */
    public ScopeOptionType getScopeOption() {
        return scopeOption;
    }

    /**
     * Sets the value of the scopeOption property.
     * 
     * @param value
     *     allowed object is
     *     {@link ScopeOptionType }
     *     
     */
    public void setScopeOption(ScopeOptionType value) {
        this.scopeOption = value;
    }

    /**
     * Gets the value of the cursorName property.
     * 
     * @return
     *     possible object is
     *     {@link LocalQualifiedNameType }
     *     
     */
    public LocalQualifiedNameType getCursorName() {
        return cursorName;
    }

    /**
     * Sets the value of the cursorName property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocalQualifiedNameType }
     *     
     */
    public void setCursorName(LocalQualifiedNameType value) {
        this.cursorName = value;
    }

}
