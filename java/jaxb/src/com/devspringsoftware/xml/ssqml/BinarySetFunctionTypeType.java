//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.03 at 08:58:47 PM EDT 
//


package com.devspringsoftware.xml.ssqml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for BinarySetFunctionTypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="BinarySetFunctionTypeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="COVAR_POP"/>
 *     &lt;enumeration value="COVAR_SAMP"/>
 *     &lt;enumeration value="CORR"/>
 *     &lt;enumeration value="REGR_SLOPE"/>
 *     &lt;enumeration value="REGR_INTERCEPT"/>
 *     &lt;enumeration value="REGR_COUNT"/>
 *     &lt;enumeration value="REGR_R2"/>
 *     &lt;enumeration value="REGR_AVGX"/>
 *     &lt;enumeration value="REGR_AVGY"/>
 *     &lt;enumeration value="REGR_SXX"/>
 *     &lt;enumeration value="REGR_SYY"/>
 *     &lt;enumeration value="REGR_SXY"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "BinarySetFunctionTypeType")
@XmlEnum
public enum BinarySetFunctionTypeType {

    COVAR_POP("COVAR_POP"),
    COVAR_SAMP("COVAR_SAMP"),
    CORR("CORR"),
    REGR_SLOPE("REGR_SLOPE"),
    REGR_INTERCEPT("REGR_INTERCEPT"),
    REGR_COUNT("REGR_COUNT"),
    @XmlEnumValue("REGR_R2")
    REGR_R_2("REGR_R2"),
    REGR_AVGX("REGR_AVGX"),
    REGR_AVGY("REGR_AVGY"),
    REGR_SXX("REGR_SXX"),
    REGR_SYY("REGR_SYY"),
    REGR_SXY("REGR_SXY");
    private final String value;

    BinarySetFunctionTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static BinarySetFunctionTypeType fromValue(String v) {
        for (BinarySetFunctionTypeType c: BinarySetFunctionTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
